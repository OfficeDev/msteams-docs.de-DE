### YamlMime:Tutorial
title: Erstellen einer aktionsbasierten Nachrichtenerweiterung
metadata:
  title: Erstellen einer aktionsbasierten Nachrichtenerweiterung
  description: In diesem Lernmodul erfahren Sie, wie Sie die Aktionsnachrichtenerweiterung für Teams einrichten, um Aktionen aus dem Nachrichten- und Nachrichtenbereich zum Verfassen zu initiieren.
  audience: Developer
  level: Beginner
  ms.date: 24/02/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: messaging-extensions/how-to/action-commands/define-action-command.md
  nextTutorialTitle: Weitere Informationen zum Aktivieren von Aktionsbefehlen für die Nachrichtenerweiterung
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 06664d537e8fd4ab4eecef4b3d592681ab3d225c
  ms.sourcegitcommit: 1cda2fd3498a76c09e31ed7fd88175414ad428f7
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 07/27/2022
  ms.locfileid: "67035338"
items:
- durationInMinutes: 1
  content: "Nachrichtenerweiterungen ermöglichen Benutzern die Interaktion mit Webdiensten im Microsoft Teams-Client. Sie helfen beim Initiieren von Aktionen in einem externen System über den Nachrichtenbereich zum Verfassen, das Befehlsfeld oder direkt aus einer Nachricht.\n\n**Wichtige Features der aktionsbasierten Nachrichtenerweiterung**\n\n* Stellt dem Benutzer ein modales Popup zum Sammeln oder Anzeigen von Informationen bereit.\n* Löst die Aktionsbefehle aus dem Nachrichtenbereich zum Verfassen, dem Befehlsfeld oder aus einer Nachricht aus. \n\nDiese schrittweise Anleitung hilft Ihnen beim Erstellen der aktionsbasierten Nachrichtenerweiterung von Teams, um Aktionen aus dem Nachrichten- und Nachrichtenbereich zum Verfassen zu initiieren. Die folgende Ausgabe wird angezeigt:\n   \n  ![Ausgabe](~/assets/images/sbs-messagingextension-action/sharemessageoutput1.png)\n"
- title: Voraussetzungen
  durationInMinutes: 1
  content: "Stellen Sie sicher, dass Sie die folgenden Tools installieren und Ihre Entwicklungsumgebung einrichten:  \n\n* [Microsoft Teams](https://teams.microsoft.com/) mit gültigem Konto\n* [.NET Core SDK](https://dotnet.microsoft.com/download) , Version 3.1\n* [Neueste Version von Visual Studio](https://visualstudio.microsoft.com/downloads/)\n* [Neueste ngrok-Version](https://ngrok.com/download) (nur für Devbox-Tests) oder eine entsprechende Tunnellösung\n\n  > [!NOTE]\n  > Melden Sie sich nach dem Herunterladen von ngrok an, und installieren Sie [authtoken](https://ngrok.com/download).\n"
- title: Einrichten einer lokalen Umgebung
  durationInMinutes: 1
  content: "Klonen Sie `BotBuilder-Samples` das Repository auf Ihrem lokalen GitHub:  \n\n 1. Öffnen Sie [BotBuilder-Beispiele](https://github.com/Microsoft/BotBuilder-Samples).\n 1. Wählen Sie **\"Code**\" aus.\n 1. Wählen Sie im Dropdownmenü \" **Mit GitHub-Desktop öffnen**\" aus.\n\n    ![Klonrepository](~/assets/images/sbs-messagingextension-action/botbuilder-sample.png)\n\n 1. Wählen Sie **\"Klonen**\" aus. \n"
- title: Erstellen und Registrieren Ihres Bots im Azure AD-Portal
  durationInMinutes: 5
  content: "Um Ihren Bot in Microsoft Azure Active Directory (Azure AD) zu erstellen und zu registrieren, erstellen Sie einen Tunnel mithilfe von ngrok, fügen Sie den Messaging-Endpunkt hinzu, und führen Sie dann die folgenden Schritte aus:\n\n* Erstellen Sie eine Azure Bot-Ressource, um den Bot bei Azure Служба Bot zu registrieren.\n* Erstellen Sie einen geheimen Clientschlüssel, um die SSO-Authentifizierung des Bots zu aktivieren.\n* Fügen Sie den Teams-Kanal hinzu, um den Bot in einem Teams-Kanal bereitzustellen.\n* Verwenden Sie ngrok, um einen Tunnel zu den Endpunkten Ihres Webservers zu erstellen.\n* Fügen Sie dem von Ihnen erstellten ngrok-Tunnel den Messaging-Endpunkt hinzu.\n\n**So erstellen Sie eine Azure Bot-Ressource**\n\n1. Wechseln Sie zum [Microsoft Azure-Portal](https://portal.azure.com/).\n1. Wählen Sie **Ressource erstellen** aus.\n1. Geben Sie in das Suchfeld **Azure Bot ein**.\n1. Drücken Sie die **EINGABETASTE**.\n1. Wählen Sie **Azure Bot** aus.\n\n     :::image type=\"content\" source=\"./assets/images/azure-bot.png\" alt-text=\"Azure-Bot.\":::\n\n1. Wählen Sie **Erstellen** aus.\n1. Geben Sie den Namen des erforderlichen Bot-Handle in **das Bot-Handle ein**.\n1. Wählen Sie Ihr **Abonnement** aus der Dropdownliste aus.\n1. Wählen Sie Ihre **Ressourcengruppe** aus der Dropdownliste aus. \n\n    ![Azure-Bot-Ressource auswählen](~/assets/images/sbs-messagingextension-action/create-azurebot.png) \n\n   Sie können auch eine neue Ressourcengruppe erstellen (wählen Sie **\"Neue** > Geben Sie den Ressourcennamen ein, > klicken Sie auf **\"OK**\").\n\n1. Im Abschnitt **\"Microsoft-App-ID** \" ist standardmäßig \" **Neue Microsoft-App-ID erstellen** \" ausgewählt. \n \n   Sie können entweder \" **Vorhandene App-Registrierung verwenden\"** und \" **Vorhandene App-ID** und **vorhandenes App-Kennwort**\" eingeben oder \" **Neue Microsoft-App-ID erstellen\"** auswählen.\n\n   > [!NOTE]\n   > Sie können nicht mehr als einen Bot mit derselben **Microsoft App-ID** erstellen.\n\n1. Wählen Sie unter **\"Bottyp**\" die Option \"**MultiTenant**\" aus.\n\n    ![Bottyp](~/assets/images/Teams-Messaging-Extensions-Search/bot-type.png) \n\n1. Wählen Sie **Überprüfen + erstellen** aus.\n\n    ![Erstellen der Microsoft App-ID](~/assets/images/sbs-messagingextension-action/review-create.png)\n\n1. Wenn die Prüfung bestanden wurde, wählen Sie **Erstellen** aus. \n\n    Es dauert einige Augenblicke, bis Ihr Botdienst bereitgestellt wurde. \n\n1. Wählen Sie **Zu Ressource wechseln** aus. \n\n    ![Bereitstellen der App](~/assets/images/sbs-messagingextension-action/resource-file.png)\n\n    Ihr Azure-Bot wird erstellt.\n\n    ![Azure-Bot-Ressource erstellt](assets/images/sbs-messagingextension-action/created-azure-bot.png)\n\n**So erstellen Sie den geheimen Clientschlüssel**\n\n  Führen Sie die folgenden Schritte aus, wenn Sie eine neue **Microsoft App-ID** erstellt haben:\n\n1. Wählen Sie im linken Bereich **\"Konfiguration**\" aus. \n\n   > [!TIP]\n   > Speichern Sie die **Microsoft App-ID** oder **Client-ID** zur zukünftigen Referenz.\n\n1. Wählen Sie neben **\"Microsoft-App-ID**\" die Option **\"Verwalten\"** aus.\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label.png\" alt-text=\"Verwalten\":::\n\n1. Wählen Sie im Abschnitt \" **Geheime Clientschlüssel** \" die Option **\"Neuer geheimer Clientschlüssel**\" aus. \n\n    ![Neuer geheimer Clientschlüssel](~/assets/images/sbs-messagingextension-action/adding-client-secret.png)\n\n   Das Fenster **\"Geheimen Clientschlüssel hinzufügen** \" wird angezeigt.  \n\n1. Geben Sie **\"Beschreibung**\" ein.\n\n1. Klicken Sie auf **Hinzufügen**.\n\n    ![Hinzufügen eines geheimen Clientschlüssels zur App](~/assets/images/sbs-messagingextension-action/add-a-clientsecret.png)\n\n1. Wählen Sie in der Spalte **\"Wert** \" **die Option \"In Zwischenablage kopieren\"** aus.\n\n     ![Wert des geheimen Clientschlüssels](~/assets/images/sbs-messagingextension-action/client-secret.png)\n   \n   > [!TIP]\n   > Speichern Sie den Wert für **geheime Clientschlüssel** oder das App-Kennwort zur zukünftigen Referenz.\n\n**So fügen Sie den Teams-Kanal hinzu**\n\n1. Wählen Sie **Start** aus.\n\n    ![Startseite](~/assets/images/sbs-messagingextension-action/select-home.png)\n\n1. Wählen Sie Ihren Bot aus **den zuletzt verwendeten Ressourcen** aus.\n\n1. Wählen Sie \"**Kanäle**\" im linken Bereich und dann **\"Microsoft Teams\" aus**. <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n   :::image type=\"content\" source=\"./assets/images/adaptive-cards/channel-teams.png\" alt-text=\"Wählen Sie &quot;Teams&quot; aus.\":::\n\n1. Aktivieren Sie das Kontrollkästchen, um die **Nutzungsbedingungen** zu akzeptieren.\n\n1. Wählen Sie **\"Zustimmen\"** aus.\n\n      ![Nutzungsbedingungen](~/assets/images/sbs-messagingextension-action/agree.png)\n\n1. Wählen Sie **Speichern**.\n\n      ![Wählen Sie Teams](~/assets/images/sbs-messagingextension-action/configure-msteams.png)   \n\n**So erstellen Sie einen Tunnel für den lokalen Webserver**\n\nVerwenden Sie ngrok, um einen Tunnel zu den öffentlich verfügbaren HTTPS-Endpunkten Ihres lokal ausgeführten Webservers zu erstellen. Führen Sie den folgenden Befehl in ngrok aus:\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n> [!TIP]\n> Wenn **ERR_NGROK_4018** auftreten, führen Sie die in der Eingabeaufforderung angegebenen Schritte aus, um ngrok zu registrieren und zu authentifizieren. Führen Sie anschließend den Befehl `ngrok http -host-header=localhost 3978` aus.\n\n**So fügen Sie den Messaging-Endpunkt hinzu**\n\n1. Kopieren Sie von ngrok die HTTPS-URL (https to io).\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url.png\" alt-text=\"ngrok HTTPS-URL\":::\n\n    > [!NOTE]\n    > Die HTTPS-URL in Ihrem ngrok ist Ihr vollqualifizierter Domänenname.\n    > Dies `WebAppDomain` ist ein vollqualifizierter Domänenname, der nicht darin enthalten `https://` ist.\n\n1. Wählen Sie in **den Einstellungen** für den von Ihnen erstellten Azure-Bot **die Option \"Konfiguration**\" aus.\n\n1. Verwenden Sie im **Messaging-Endpunkt** die https-URL, die von ngrok verfügbar ist, und fügen Sie am Ende der URL **\"/api/messages**\" hinzu.\n\n    ![App-URI](~/assets/images/sbs-messagingextension-action/appuri.png)\n\n1. Wählen Sie **Anwenden** aus.\n\n    Sie haben erfolgreich einen Bot in Azure Служба Bot eingerichtet.\n"
- title: Aktualisieren der Azure AD-App-Registrierung
  durationInMinutes: 1
  content: "1. Gehen Sie zum [Azure-Portal](https://portal.azure.com/).\n\n1. Wählen Sie **Azure Active Directory** aus.\n\n1. Wählen Sie im linken Navigationsbereich die Option **\"App-Registrierungen\" aus**.\n\n1. Wählen Sie Ihren Bot aus.\n\n   ![App-Registrierung](~/assets/images/sbs-messagingextension-action/app.-registerations.png)\n\n1. Wählen Sie unter **Verwalten** die Option **Eine API verfügbar machen** aus.\n\n1. Wählen Sie **\"Festlegen\" aus**.\n\n   ![Bereitstellen einer API](~/assets/images/sbs-messagingextension-action/set-exposeanapi.png)\n\n1. Legen Sie den **Anwendungs-ID-URI** in Form von `api://{AppID}`fest.\n\n   ![Link festlegen](~/assets/images/sbs-messagingextension-action/set-link.png)\n\n1. Fügen Sie den `WebAppDomain` Wert zwischen `api://` und `/{AppID}`ein.</br>\n    `api://2bb1****.ngrok.io/{AppID}`</br>\n    \n   Die folgende Abbildung zeigt den Domänennamen:\n    \n    ![Verfügbar](~/assets/images/sbs-messagingextension-action/exposeanapi.png)\n\n    > [!NOTE]\n    > Wenn Sie einen Tunneldienst wie ngrok verwenden, stellen Sie sicher, dass Sie den Wert aktualisieren, wenn sich Ihre ngrok-Unterdomäne ändert.\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`, wobei `f631****.ngrok.io` sich der neue ngrok-Unterdomänenname befindet.\n\n1. Wählen Sie **Bereich hinzufügen**. \n\n   ![Bereich auswählen](~/assets/images/sbs-messagingextension-action/addascope.png)\n\n1. Geben Sie `access_as_user` in dem angezeigten Bereich den Namen des **Bereichs** ein.\n\n1. Legen Sie **fest, wer zustimmen kann?** auf `Admins and users`.\n\n1. Geben Sie die folgenden Informationen in den Feldern an, um die Aufforderungen zur Administrator- und Benutzerzustimmung mit den entsprechenden Werten für `access_as_user` den Bereich zu konfigurieren:</br>\n\n     * Geben Sie `Teams can access the user’s profile` den **Anzeigenamen Admin Zustimmung** ein.\n\n     * Geben Sie `Allows Teams to call the app’s web APIs as the current user` als **Admin Zustimmungsbeschreibung** ein.\n\n     * Geben Sie `Teams can access the user profile and make requests on the user’s behalf` als **Anzeigename für die Benutzerzustimmung ein**.\n\n     * Geben Sie `Enable Teams to call this app’s APIs with the same rights as the user` als **Beschreibung der Zustimmung des Benutzers ein**.\n\n1. Stellen Sie sicher, **Zustand** auf **Aktiviert** festgelegt ist.\n\n1. Wählen Sie **\"Zu speichernden Bereich hinzufügen\"** aus.\n\n    ![Hinzufügen eines Bereichs](~/assets/images/sbs-messagingextension-action/addascopeuser.png)\n\n    > [!NOTE]\n    > Der **Bereichsname** sollte mit dem **Anwendungs-ID-URI** übereinstimmen, `/access_as_user` der am Ende angefügt ist.</br>\n       `api://2bb1****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    ![Scopes](~/assets/images/sbs-messagingextension-action/scopes.png) \n\n1. Identifizieren Sie im Bereich **Autorisierte Clientanwendungen** die Anwendungen, die Sie für die Webanwendung Ihrer App autorisieren möchten. \n\n1. **Hinzufügen einer Clientanwendung** auswählen. \n\n    ![Clientanwendung auswählen](~/assets/images/sbs-messagingextension-action/clientapps.png) \n\n1. Geben Sie **die Client-ID** ein: `1fec8e78-bce4-4aaf-ab1b-5451cc387264` für mobile Teams- oder Desktopanwendungen. \n\n    ![Hinzufügen der Clientanwendung 1](~/assets/images/sbs-messagingextension-action/addclientapplication1.png) \n\n   Sie können **die Client-ID**`5e3ce6c0-2b1f-4285-8d4b-75ee78787346` für die Teams-Webanwendung eingeben.\n\n    ![Hinzufügen der Clientanwendung 2](~/assets/images/sbs-messagingextension-action/addclientapplication2.png) \n\n1. Wählen Sie **autorisierte Bereiche aus**.\n\n    ![Hinzufügen der Clientanwendung 2](~/assets/images/sbs-messagingextension-action/authorizedscope.png) \n\n   In der folgenden Abbildung werden die Client-IDs angezeigt:\n\n    ![Clientanwendungen](~/assets/images/sbs-messagingextension-action/clientapp.png) \n\n1. Wählen Sie im linken Bereich **API-Berechtigungen aus**. \n\n   > [!NOTE]\n   > Benutzer müssen diesen Berechtigungen nur zustimmen, wenn die Azure AD-App in einem anderen Mandanten registriert ist.\n\n1. Wählen Sie **Berechtigung hinzufügen** aus.\n\n    ![Berechtigung hinzufügen](~/assets/images/meetings-side-panel/addpermission.png)\n\n\n1. Wählen Sie **Microsoft Graph** aus.\n\n1. Wählen Sie **Delegierte Berechtigungen** aus.\n\n1. Fügen Sie die folgenden Berechtigungen hinzu:</br>\n     * **email**\n     * **offline_access**\n     * **Openid**\n     * **profile**\n     * **User.Read**\n\n1. Wählen Sie **Berechtigungen hinzufügen** aus.\n\n     ![Weitere Berechtigungen](~/assets/images/sbs-messagingextension-action/other-permissions.png)\n\n1. Wählen Sie im linken Bereich die Option **\"Authentifizierung** \" aus, um einen Umleitungs-URI festzulegen. \n\n   > [!NOTE]\n   > Wenn einer App die Zustimmung eines IT-Administrators nicht erteilt wird, müssen Benutzer bei der ersten Verwendung einer App ihre Zustimmung erteilen.\n           \n     1. Wählen Sie **Plattform hinzufügen** aus.\n     1. Klicken Sie auf **Web**.\n\n        ![Netz](~/assets/images/sbs-messagingextension-action/web.png)\n\n     1. Geben Sie den Umleitungs-URI für Ihre App ein, indem Sie an den vollqualifizierten Domänennamen anfügen `auth-end` :</br> \n       `https://2bb1****.ngrok.io/auth-end`. </br>\n\n     1. Aktivieren Sie **implizite Genehmigungs- und Hybridflüsse** , indem Sie die folgenden Kontrollkästchen aktivieren:\n         * **ID-Token**\n         * **Zugriffstoken**\n\n     1. Wählen Sie **Konfigurieren** aus.\n\n        ![Authentifizierungsende](~/assets/images/sbs-messagingextension-action/authend.png)\n"
- title: Einrichten von App-Einstellungen und Manifestdateien
  durationInMinutes: 1
  content: "1. Navigieren Sie zu **\"appsettings.json** \" im geklonten Repository.\n\n    ![App-Einstellungsspeicherort](~/assets/images/sbs-messagingextension-action/appsettingslocation.png)\n\n1. Öffnen Sie **appsettings.json** in der neuesten Version von Visual Studio, und aktualisieren Sie die folgenden Informationen:  \n\n     * Auf **\"MultiTenant\" festgelegt**`\"MicrosoftAppType\"`.\n     * Legen Sie `\"MicrosoftAppId\"` die **Microsoft App-ID** Ihres Bots fest.\n     * Legen Sie `\"MicrosoftAppPassword\"` den **Wert** der **geheimen Client-ID** Ihres Bots fest.\n     * Lassen Sie `\"MicrosoftAppTenantId\"` für multitenanten Bot leer.\n     * Legen Sie `\"BaseUrl\"` den vollqualifizierten Domänennamen fest.\n\n    ![App-Einstellungen](~/assets/images/sbs-messagingextension-action/json-file.png)\n\n1. Navigieren Sie zu `manifest.json` im geklonten Repository.\n\n    ![Speicherort der Manifestdatei](~/assets/images/sbs-messagingextension-action/manifestlocation.png)\n\n1. Öffnen Sie `manifest.json` die neueste Version von Visual Studio, und nehmen Sie die folgenden Änderungen vor:\n\n     * Ersetzen Sie den `<<validDomains>>` Namen durch Ihren vollqualifizierten Domänennamen.\n     * Ersetzen Sie alle Vorkommen durch die `<<Microsoft-App-ID>>` **Microsoft App-ID** Ihres Bots.\n\n    ![Manifestbild 2](~/assets/images/sbs-messagingextension-action/botid1.png)\n"
- title: Erstellen und Ausführen des Diensts
  durationInMinutes: 1
  content: "**So erstellen und führen Sie den Dienst mit der neuesten Version von Visual Studio oder der Befehlszeile aus**\n\n# <a name=\"latest-version-of-visual-studio\"></a>[Neueste Version von Visual Studio](#tab/latestversionofvisualstudio)\n\n   1. Starten Sie die neueste Version von Visual Studio.\n   1. Navigieren Sie zu **\"Projekt****/Projekt öffnen** > \" > .\n\n      ![Datei öffnen](~/assets/images/sbs-messagingextension-action/VSopenfile.png)\n\n   1. Wählen Sie die Datei **\"TeamsMessagingExtensionsAction.csproj** \" aus **csharp_dotnet** Ordner aus.\n\n      ![Lösungsdatei](~/assets/images/sbs-messagingextension-action/openproject.png)\n\n   1. Press **F5** to run the project.\n\n   1. Wählen Sie **Ja** aus, wenn das folgende Dialogfenster angezeigt wird:\n\n      ![Vertrauensstellungszertifikat](~/assets/images/sbs-messagingextension-action/certificate.png)\n\n      Eine Webseite wird mit der Nachricht **\"Ihr Bot ist bereit!\"** geöffnet.\n\n      ![App bereit](~/assets/images/sbs-messagingextension-action/appisready.png) \n\n    \n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cli)\n\nNavigieren Sie im Eingabeaufforderungsfenster zu **Beispielen > csharp_dotnetcore > 51.teams-messaging-extensions-action** , und geben Sie den folgenden Befehl ein:\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/sbs-messagingextension-action/dotnetruncmd.png)\n  \n"
- title: Hinzufügen der Aktionsnachrichtenerweiterungs-App zu Teams
  durationInMinutes: 1
  content: "1. Navigieren Sie in Ihrem geklonten Repository zu **csharp_dotnetcore > 51.teams-messaging-extensions-action > TeamsAppManifest**.\n\n1. Erstellen Sie eine .zip mit den folgenden Dateien, die im **Manifestordner** vorhanden sind: \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![ZIP-Datei](~/assets/images/sbs-messagingextension-action/zipfile.png) \n\n1. Wechseln Sie zu **Microsoft Teams**.\n\n1. Wählen Sie **Apps** aus.\n\n1. Wählen Sie **Verwalten Ihrer Apps** aus.\n\n1. Wählen Sie **Benutzerdefinierte App hochladen** aus.\n\n   ![Hochladen](~/assets/images/sbs-messagingextension-action/uploadacustomapp1.png)\n\n1. Wählen Sie **\"Öffnen** \" aus, um die .zip Datei hochzuladen, die Sie im **Manifestordner** erstellt haben.\n\n   ![ZIP-Datei auswählen](~/assets/images/sbs-messagingextension-action/openzipfile.png)\n\n1. Klicken Sie auf **Hinzufügen**.\n\n   ![Hinzufügen der App](~/assets/images/sbs-messagingextension-action/add.png)\n\n                \n"
- title: Interagieren mit der App in Teams
  durationInMinutes: 1
  content: "1. Wählen Sie in der Befehlsliste \"Verfassen\" den Befehl \" **Karte erstellen** \" aus.\n\n   ![Karte](~/assets/images/sbs-messagingextension-action/create-card.png)\n\n1. Geben Sie Ihre Informationen in das modale Popup ein.\n\n   ![Informationen](~/assets/images/sbs-messagingextension-action/output-card.png)\n\n1. Wählen Sie **Senden** aus.\n\n   ![submit](~/assets/images/sbs-messagingextension-action/submit.png)\n\n1. Wählen Sie (...) aus dem Überlaufmenü aus.\n   \n1. Navigieren Sie zu **\"Weitere Aktionen\"**.\n\n1. Wählen Sie **\"Nachricht freigeben\" aus**.\n\n   ![Karte freigeben](~/assets/images/sbs-messagingextension-action/sharemessage.png)\n\n1. Aktivieren Sie das Kontrollkästchen, wenn Sie Ein- und Absenden von Bildern benötigen.\n\n   ![Ausgabe](~/assets/images/sbs-messagingextension-action/sharemessageoutput.png)\n"
- title: Vollständige Herausforderung
  durationInMinutes: 1
  content: >
    Sind Sie auf so etwas gekommen?

       ![Ausgabe](~/assets/images/sbs-messagingextension-action/sharemessageoutput1.png)
- content: Sie haben das Lernprogramm für die ersten Schritte mit einer **Action Message Extension-App** abgeschlossen!
