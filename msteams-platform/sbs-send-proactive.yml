### YamlMime:Tutorial
title: Proaktive Nachrichten senden
metadata:
  title: Proaktive Nachrichten senden
  description: In diesem Artikel erfahren Sie, wie Sie proaktive Nachrichten wie Begrüßungsnachrichten, geplante Nachrichten und Benachrichtigungen von einem Bot senden.
  audience: Developer
  level: Beginner
  ms.date: 06/23/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ./bots/how-to/conversations/send-proactive-messages.md
  nextTutorialTitle: Weitere Informationen zu proaktiven Nachrichten
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: c51f5e260b492cf0ecf7b660e0c42d3eb61cdb17
  ms.sourcegitcommit: 7bbb7caf729a00b267ceb8af7defffc91903d945
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 06/21/2022
  ms.locfileid: "66189484"
items:
- durationInMinutes: 1
  content: "Eine proaktive Nachricht ist jede Nachricht, die von einem Bot gesendet wird und nicht auf eine Anforderung eines Benutzers reagiert, die Nachrichten enthält, z. B.:\n - Willkommensnachrichten\n - Benachrichtigungen\n - Geplante Nachrichten\n \nDiese schrittweise Anleitung hilft Ihnen beim Senden einer proaktiven Nachricht von einem Bot. Die folgenden Ausgaben werden angezeigt:\n\n* Proaktive Hello-Nachricht im Chat.     \n![Proaktives Hello im Chat](~/assets/images/proactive-scenario/proactive-helo.png)\n\n* Proaktive Hello-Nachricht als adaptive Karte.\n![Proaktives Hello in adaptiver Karte](~/assets/images/proactive-scenario/proactive-helo-in-adaptive-card.png) \n"
- title: Voraussetzungen
  durationInMinutes: 2
  content: "Stellen Sie sicher, dass Sie Folgendes installieren:    \n\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)\n* [ASP.NET und Webentwicklung](https://dotnet.microsoft.com/download/dotnet/thank-you/sdk-5.0.301-windows-x64-installer) oder [.NET Core](https://dotnet.microsoft.com/download/dotnet/thank-you/sdk-3.1.410-windows-x64-installer) plattformübergreifende Entwicklungsarbeitslast\n* [ngrok](https://ngrok.com/download): Eine plattformübergreifende Anwendung, mit der Sie einen lokalen Entwicklungsserver mit minimalem Aufwand für das Internet verfügbar machen können\n* [Abrufen eines kostenlosen Teams Entwicklermandanten](https://developer.microsoft.com/microsoft-365/dev-program)\n"
- title: Einrichten einer lokalen Umgebung
  durationInMinutes: 3
  content: "1.  Laden Sie den [Beispielcode](https://github.com/MicrosoftDocs/msteams-docs/tree/master/msteams-platform/assets/downloads/SendProactiveMessages.zip) (Zip-Datei) herunter, und extrahieren Sie die Dateien.\n1.  Wechseln Sie zu den extrahierten Dateien, und doppelklicken Sie auf **ProactiveBot.csproj**. Die Lösung wird in Visual Studio geöffnet.\n1.  Klicken Sie in Visual Studio mit der rechten Maustaste auf das Projekt (**ProactiveBot**), und wählen Sie **\"Erstellen**\" aus, um die Lösung zu erstellen.\n\n    ![Proactivebot-Projekt](~/assets/images/proactive-scenario/proactivebot-project.png)\n\n    <br>\n\n    <details>\n\n    <summary><b>Problembehandlung</b></summary>\n\n    Wenn der **Paketfehler \"Nicht gefunden** \" angezeigt wird, führen Sie die folgenden Schritte aus:\n\n    1.  Wechseln Sie zu **Tools** >  **NuGet Paket-Manager** >  **Paket-Manager Einstellungen**.\n    1.  Wählen **Sie im daraufhin** angezeigten Optionsfenster **NuGet Paket-Manager** >  **Package Sources** aus.\n    1.  Klicken Sie auf **Hinzufügen**.\n    1.  Geben Sie `nuget.org` den **Namen** und `https://api.nuget.org/v3/index.json` die **Quellfelder** ein.\n    1.  Wählen Sie **\"Aktualisieren\"** und **\"OK**\" aus.\n    1.  Erstellen Sie Ihr Projekt neu.\n    <br>\n\n    </details>\n    \n1. Entzippen, um ngrok zu installieren.\n   * Windows: Doppelklicken Sie auf `ngrok.zip`.\n   * Linux oder OS X: Entzippen Sie ngrok aus dem Terminal, und führen Sie den `unzip /path/to/ngrok.zip` Befehl aus.\n1. Führen Sie ngrok über die Befehlszeile mit den folgenden Argumenten aus:\n\n    `ngrok http 3978 --host-header=localhost`  \n    \n1. Kopieren Sie die ngrok-URL (wie im Bild hervorgehoben), um in den nächsten Schritten als ngrok-Basis-URL weiter zu verweisen. \n\n    ![ngrok-Basis-URL](~/assets/images/proactive-scenario/ngrok-base-url.png)   \n"
- title: Erstellen und Installieren Teams App
  durationInMinutes: 5
  content: "1. Wechseln Sie zu Teams > **App Studio**, und importieren Sie die Datei, die `AppManifest.zip` im heruntergeladenen Beispielcode (Zip-Datei) verfügbar ist.\n\n    ![App Studio-Import-App](~/assets/images/proactive-scenario/app-studio-import-app.png) \n\n1. Wählen Sie **\"Bots** > **einrichten\" aus**.\n\n    ![Bot eingerichtet](~/assets/images/proactive-scenario/bot-setup.png)  \n\n1. Geben Sie im Fenster \" **Bot einrichten** \" **den Namen** ein (z. B. **Proaktive Nachrichtendemo**).\n1. Wählen Sie **\"Persönlich\"** und dann \" **Bot erstellen** \" aus, um den Bot zu erstellen.\n\n    ![Bot-ID erstellen](~/assets/images/proactive-scenario/create-bot-id.png)   \n\n1. Fügen Sie **/api/messages** an die ngrok-Basis-URL (die Sie kopiert haben) an, und legen Sie sie als **Bot-Endpunktadresse fest**. Ihre URL würde wie folgt aussehen: `https://yourngrokdomain.ngrok.io/api/messages`.\n\n    ![Bot-Endpunktadresse](~/assets/images/proactive-scenario/bot-endpoint-address.png)\n\n1. Warten Sie einige Sekunden, bis die Änderungen wirksam werden.     \n\n    > Wenn es länger dauert, wählen Sie **\"Registerkarten\"** und dann den Abschnitt **\"Bots** \" aus, um eine Aktualisierung zu erzwingen.\n    \n1. Wählen Sie **\"Neues Kennwort generieren\"** aus, um das neue App-Kennwort zu generieren und zu kopieren. \n\n    ![Generieren des App-Kennworts](~/assets/images/proactive-scenario/generate-app-password.png)\n\n1. Wechseln Sie zu Visual Studio, und öffnen Sie die Datei **\"appsettings.json**\". Fügen Sie das Kennwort als Wert für `MicrosoftAppPassword`ein.    \n1. Wechseln Sie zu **App Studio**, und kopieren Sie die App-ID. \n\n    ![Generieren der App-ID](~/assets/images/proactive-scenario/generate-app-id.png)\n\n1. Wechseln Sie zu Visual Studio, und öffnen Sie die Datei **\"appsettings.json**\". Fügen Sie die App-ID als Wert für `MicrosoftAppId`ein. Sie `appsettings.json` haben die folgenden Einstellungswerte:    \n\n    ![Appsetting-Werte](~/assets/images/proactive-scenario/app-setting-values.png)\n\n1. Drücken Sie **F5** , oder wählen Sie **IIS Express** aus, um den Code auszuführen.\n\n    ![Ausführen von Code](~/assets/images/proactive-scenario/run-code.png)\n\n    Das entsprechende Beispiel für proaktive Nachrichten wird angezeigt:  \n\n    ![Beispiel für proaktive Nachricht](~/assets/images/proactive-scenario/proactive-message-sample.png)\n\n1. Wechseln Sie zu **\"Installieren testen und verteilen** > \", um dieselbe App erneut zu installieren.\n\n    ![Installieren der App](~/assets/images/proactive-scenario/install-app.png)   \n\n1. Wählen Sie die `http://localhost:3978/api/notify` URL aus, um eine proaktive Hello-Nachricht im Chat zu erhalten.\n\n    ![Proaktiv gesendete Nachricht](~/assets/images/proactive-scenario/result.png)\n\n1. Wechseln Sie zu Teams. Sie erhalten eine proaktive Hello-Nachricht vom Bot, wenn die Installation erfolgreich ist.          \n\n    ![Proaktives Hello im Chat](~/assets/images/proactive-scenario/proactive-helo.png)    \n"
- title: Hinzufügen einer adaptiven Karte zu einer proaktiven Nachricht
  durationInMinutes: 10
  content: "1. Beenden Sie in Visual Studio den Debugprozess.\n\n    ![Debuggen beenden](~/assets/images/proactive-scenario/stop-debug.png)\n\n1. Klicken Sie mit der rechten Maustaste auf **\"Abhängigkeiten**\", und wählen Sie **\"NuGet Pakete verwalten\" aus**.\n\n    ![Paket für adaptive Karten hinzufügen1](~/assets/images/proactive-scenario/add-adaptive-card-package1.png)\n\n1. Wählen Sie **in NuGet ProactiveBot** die Option **\"Durchsuchen\"** aus, und suchen Sie nach **AdaptiveCards**. \n1. Wählen Sie **Installieren** aus. \n\n    ![Hinzufügen des Pakets für adaptive Karten2](~/assets/images/proactive-scenario/add-adaptive-card-package2.png)\n\n1. Öffnen Sie die Datei **NotifyController.cs** , und ersetzen Sie den vorhandenen `BotCallback` Code durch den folgenden Code, um die Adaptive Card-Nachricht zu senden:     \n    \n   ```csharp\n   private async Task BotCallback(ITurnContext turnContext, CancellationToken cancellationToken)\n    {\n                AdaptiveCard card = new AdaptiveCard(new AdaptiveSchemaVersion(1, 0));\n\n                card.Body.Add(new AdaptiveTextBlock()\n                {\n                    Text = \"Proactive Hello\",\n                    Size = AdaptiveTextSize.ExtraLarge\n                });\n\n                card.Body.Add(new AdaptiveImage()\n                {\n                    Url = new Uri(\"http://adaptivecards.io/content/cats/1.png\")\n                });\n\n                Attachment attachment = new Attachment()\n                {\n                    ContentType = AdaptiveCard.ContentType,\n                    Content = card\n                };\n\n                await turnContext.SendActivityAsync(MessageFactory.Attachment(attachment));\n    }\n   ```\n\n1. Zeigen Sie mit der Maus auf die wellenrote Linie, und wählen Sie **die Verwendung von AdaptiveCards** aus, um die Fehler zu beheben. \n\n    ![Fehler beheben](~/assets/images/proactive-scenario/resolve-error.png)  \n\n1. Drücken Sie **F5**, um den Code auszuführen. \n1. Wechseln Sie zu Teams und deinstallieren Sie Ihre App. \n    \n    ![App deinstallieren](~/assets/images/proactive-scenario/uninstall-app.png) \n\n1. Installieren Sie dieselbe App erneut, um das `conversationUpdate` Ereignis abzurufen.   \n\n1. Wählen Sie die URL [api/notify] `(http://localhost:3978/api/notify)` aus, um eine proaktive Hello-Nachricht in der adaptiven Karte abzurufen.     \n"
- title: Vollständige Herausforderung
  durationInMinutes: 3
  content: >
    Sind Sie auf so etwas gekommen? So wird die proaktive Hello-Nachricht in der adaptiven Karte angezeigt:


    ![Proaktives Hello in adaptiver Karte](~/assets/images/proactive-scenario/proactive-helo-in-adaptive-card.png)
- content: >-
    Sie haben das Szenario abgeschlossen.

    * Sie können täglich Benachrichtigungen senden oder regelmäßig Feedback vom Benutzer anfordern.

    * Behandeln Sie Einschränkungsgrenzwerte, um mehrere Benachrichtigungen zu vermeiden.
