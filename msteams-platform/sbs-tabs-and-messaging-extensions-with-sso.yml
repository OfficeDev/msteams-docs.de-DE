### YamlMime:Tutorial
title: SSO für Registerkarten und Nachrichtenerweiterung
metadata:
  title: SSO für Registerkarten und Nachrichtenerweiterung
  description: In diesem Lernmodul erfahren Sie, wie Sie das einmalige Anmelden von Azure Active Directory (Azure AD SSO) für Registerkarten einrichten.
  audience: Developer
  level: Beginner
  ms.date: 12/07/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: tabs/how-to/authentication/tab-sso-overview.md
  nextTutorialTitle: Weitere Informationen finden Sie unter SSO-Authentifizierung für Registerkarten.
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 3e4b40e958ccb9a3702232603e97dc3979c4cdd9
  ms.sourcegitcommit: 88fb2e9a18de3bd84e3c604ff235fc753c8de8f5
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/02/2022
  ms.locfileid: "68818979"
items:
- durationInMinutes: 1
  content: "Das einmalige Anmelden von Azure Active Directory (Azure AD SSO) hilft bei der Authentifizierung von Benutzern in Teams. \n\n**Wichtige Aspekte des einmaligen Anmeldens von Azure AD**:\n\n * Ermöglicht es dem Benutzer, sich nach der ersten Anmeldung automatisch anzumelden.\n * Ermöglicht dem Benutzer, sich bei anderen Geräten anzumelden, ohne die Anmeldeinformationen erneut einzugeben.\n * Ruft das Token für den angemeldeten Benutzer ab.\n\nDiese Schritt-für-Schritt-Anleitung hilft Ihnen beim Erstellen von Registerkarten und Nachrichtenerweiterungen, die die Azure AD-SSO-Authentifizierung ermöglichen. Die folgende Ausgabe wird angezeigt:\n\n  :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/hello-megan-profile245_1.png\" alt-text=\"Bild &quot;Herzlichen Glückwunsch&quot;.\":::\n"
- title: Voraussetzungen
  durationInMinutes: 1
  content: "Stellen Sie sicher, dass Sie die folgenden Tools installieren und Ihre Entwicklungsumgebung einrichten:  \n\n| &nbsp; | Installieren | Zum Benutzen... |\n | --- | --- | --- |\n | **Required** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams für die Zusammenarbeit mit allen, mit denen Sie zusammenarbeiten, über Apps für Chats, Besprechungen, Anrufe und alles an einem Ort.|\n | &nbsp; | [Microsoft 365-Entwicklerkonto](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | Zugriff auf das Teams-Konto mit den entsprechenden Berechtigungen zum Installieren einer App. |\n | &nbsp; | [.NET Core SDK Version 3.1](https://dotnet.microsoft.com/en-us/download) | Angepasste Bindungen für lokales Debuggen und Bereitstellungen von Azure Functions-Apps. Wenn Sie das .NET 3.1-SDK (oder höher) nicht global installiert haben, kann die portable Version installiert werden. |\n | &nbsp; | [Visual Studio 2022, Version 17.3](https://visualstudio.microsoft.com)<br> Installieren Sie eine der beiden folgenden Workloads:<br> • ASP.NET und Webentwicklung <br> • Plattformübergreifende .NET Core-Entwicklung | Sie können die Unternehmensversion in Visual Studio 2022 und die Workloads installieren. |\n | &nbsp; | [ngrok](https://ngrok.com/download) | Teams-App-Features (Konversationsbots, Nachrichtenerweiterungen und eingehende Webhooks) erfordern eingehende Verbindungen. Ein Tunnel verbindet Ihr Entwicklungssystem mit Teams. Dies ist nicht für Apps erforderlich, die nur Registerkarten enthalten. Dieses Paket wird im Projektverzeichnis installiert (mit npm `devDependencies`). |\n\n  > [!NOTE]\n  > Registrieren Sie sich nach dem Herunterladen von ngrok, und installieren Sie [authtoken](https://ngrok.com/download).\n"
- title: Einrichten einer lokalen Umgebung
  durationInMinutes: 1
  content: "Klonen Sie `Microsoft-Teams-Samples` das Repository auf Ihrem lokalen GitHub:  \n\n 1. Öffnen Sie [Microsoft Teams-Beispiele](https://github.com/OfficeDev/Microsoft-Teams-Samples).\n 1. Wählen Sie **Code** aus.\n 1. Wählen Sie im Dropdownmenü **Mit GitHub Desktop öffnen** aus.\n\n    :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/clonerepository_1.png\" alt-text= \"Clone repository.\":::\n\n 1. Wählen Sie **Klonen** aus. \n"
- title: Erstellen und Registrieren Ihres Bots im Azure AD-Portal
  durationInMinutes: 5
  content: "Führen Sie die folgenden Schritte aus, um Ihren Bot in Microsoft Azure AD zu erstellen und zu registrieren:\n\n* Erstellen Sie eine Azure Bot-Ressource, um den Bot bei Azure Bot Service zu registrieren.\n* Erstellen Sie einen geheimen Clientschlüssel, der die SSO-Authentifizierung des Bots ermöglicht.\n* Fügen Sie den Microsoft Teams-Kanal hinzu, um den Bot in einem Teams-Kanal bereitzustellen.\n* Erstellen Sie einen ngrok-Tunnel zu den Endpunkten Ihres Webservers.\n* Fügen Sie dem erstellten ngrok-Tunnel einen Messagingendpunkt hinzu.\n\n**So erstellen Sie eine Azure Bot-Ressource**\n\n1. Wechseln Sie zum [Microsoft-Azure-Portal](https://portal.azure.com/).\n1. Wählen Sie **Ressource erstellen** aus.\n1. Geben Sie in das Suchfeld **Azure Bot ein**.\n1. Drücken Sie die **EINGABETASTE**.\n1. Wählen Sie **Azure Bot aus**.\n1. Wählen Sie **Erstellen** aus.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/azure-bot_1.png\" alt-text=\"Azure-Bot.\":::\n     \n**Das Fenster Azure Bot erstellen** wird angezeigt.\n\n1. Geben Sie den erforderlichen Namen des Bothandles im **Bothandle ein**.\n1. Wählen Sie in der entsprechenden Dropdownliste Ihr **Abonnement** und Ihre **Ressourcengruppe** aus.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/azure-subscription.png\" alt-text=\"Azure-Abonnement.\":::\n\n   Sie können eine neue Ressourcengruppe erstellen. Wählen **Sie Neu erstellen** aus, > geben Sie den Ressourcennamen ein, > klicken Sie auf **OK**. Wählen Sie in der Dropdownliste **Neuer Ressourcengruppenstandort** den erforderlichen Standort aus.\n\n   :::image type=\"content\" source=\"~/assets/images/bots/newresource.png\" alt-text=\"Screenshot: Speicherort der neuen Ressourcengruppe\":::\n\n1. Im Abschnitt **Microsoft App ID** ist standardmäßig **Create new Microsoft App ID (Neue Microsoft-App-ID erstellen** ) ausgewählt. \n\n   Sie können **Vorhandene App-Registrierung verwenden** auswählen und **App-ID**, **App-Mandanten-ID** und **MSI-Ressourcen-ID** eingeben.\n\n   > [!NOTE]\n   > Sie können nicht mehr als einen Bot mit derselben **Microsoft-App-ID** erstellen.\n\n1. Wählen Sie **App-Typ** als **mehrinstanzenfähig** aus.\n1. Wählen Sie **Überprüfen + erstellen** aus.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/tenant-review.png\" alt-text=\"Mandantenüberprüfung.\":::\n\n1. Wenn die Überprüfung erfolgreich ist, wählen Sie **Erstellen** aus.\n\n    Es dauert einige Augenblicke, bis Ihr Botdienst bereitgestellt wurde.\n\n1. Wählen Sie **Zu Ressource wechseln** aus.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/go-to-resource_1.png\" alt-text=\"wechseln Sie zu Ressource.\":::\n\n  Ihr Azure-Bot wird erstellt, und Sie können die **Ressourcengruppe** und **die Abonnement-ID** im Azure-Bot sehen.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/app-overview_1.png\" alt-text=\"App-Übersicht.\" lightbox=\"./assets/images/Tab-ME-SSO/app-overview_1.png\":::\n    \n**So erstellen Sie einen geheimen Clientschlüssel**\n\n  Führen Sie die folgenden Schritte aus, wenn Sie eine neue **Microsoft-App-ID** erstellt haben:\n\n1. Wählen Sie im linken Bereich **Konfiguration** aus. \n\n   > [!TIP]\n   > Speichern Sie die **Microsoft-App-ID** oder **Client-ID** zur späteren Referenz.\n\n1. Wählen Sie neben **Microsoft App ID** die Option **Verwalten** aus.\n\n   :::image type=\"content\" source=\"~/assets/images/Tab-ME-SSO/manage-bot-label_1.png\" alt-text=\"Screenshot: Auswahl der Option &quot;Verwalten&quot;\":::\n\n1. Wählen Sie im Abschnitt **Geheime Clientschlüssel** **die Option Neuer geheimer Clientschlüssel** aus.\n\n   :::image type=\"content\" source=\"~/assets/images/Tab-ME-SSO/newclientsecret_1.png\" alt-text=\"Screenshot: Auswahl des neuen geheimen Clientschlüssels\":::\n\n   **Das Fenster \"Geheimer Clientschlüssel hinzufügen** \" wird angezeigt.  \n\n1. Geben Sie **Beschreibung** des geheimen Clientschlüssels ein.\n\n1. Klicken Sie auf **Hinzufügen**.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/add-client-id.png\" alt-text=\"Fügen Sie der App einen geheimen Clientschlüssel hinzu.\":::\n\n1. Wählen Sie **In Zwischenablage kopieren** aus, um die **Wertdetails** zu kopieren.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/client-ids_1.png\" alt-text=\"Wert des geheimen Clientschlüssels.\":::\n     \n   > [!TIP]\n   > Speichern Sie den Wert **geheimer Clientschlüssel** oder das App-Kennwort zur späteren Referenz.\n\n**So fügen Sie den Microsoft Teams-Kanal hinzu**\n\n1. Wählen Sie **Start** aus.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/home_1.png\" alt-text=\"Startseite.\":::\n   \n1. Wählen Sie Unter **Zuletzt verwendete Ressourcen** Ihren Bot aus.\n\n1. Wählen Sie im linken Bereich **Kanäle** aus. \n\n1. Microsoft **Teams** auswählen <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n   :::image type=\"content\" source=\"~/assets/images/Tab-ME-SSO/channel-teams_1.png\" alt-text=\"Auswählen von Teams in Kanälen\":::\n\n1. Aktivieren Sie das Kontrollkästchen, um die **Nutzungsbedingungen** zu akzeptieren.\n\n1. Wählen Sie **Zustimmen** aus.\n\n   :::image type=\"content\" source=\"~/assets/images//Tab-ME-SSO/terms.png\" alt-text=\"Nutzungsbedingungen\":::\n\n1. Wählen Sie **Anwenden** aus.\n\n   :::image type=\"content\" source=\"~/assets/images//Tab-ME-SSO/apply.png\" alt-text=\"Screenshot: Auswahl von Teams\":::\n\n**So erstellen Sie einen Tunnel für den lokalen Webserver**\n\nVerwenden Sie ngrok, um einen Tunnel zu den öffentlich verfügbaren HTTPS-Endpunkten Ihres lokal ausgeführten Webservers zu erstellen. Führen Sie den folgenden Befehl in ngrok aus:\n\n ```bash\n ngrok http --host-header=localhost 3978\n ```\n > [!TIP]\n > Wenn **sie auf ERR_NGROK_4018** stoßen, führen Sie die in der Eingabeaufforderung angezeigten Schritte aus, um sich zu registrieren und zu authentifizieren. Führen Sie dann die `ngrok http --host-header=localhost`\n\n**So fügen Sie einen Messagingendpunkt hinzu**\n\n1. Kopieren Sie aus ngrok die HTTPS-URL (https in io).\n\n    ![ngrok HTTPS-URL](~/assets/images/Tab-ME-SSO/ngrok-image.png)\n\n    > [!NOTE]\n    > Die HTTPS-URL in Ihrem ngrok ist der Domänenname, der nicht enthält `https://`.\n\n1. Wählen Sie in **Einstellungen** die Option **Konfiguration** aus.\n\n1. Fügen Sie unter **Messagingendpunkt** die HTTPS-URL aus ngrok hinzu, und fügen Sie am Ende der URL **/api/messages** hinzu.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/messaging-endpoint_1.png\" alt-text=\"Messagingendpunkt.\":::\n    \n1. Wählen Sie **Anwenden** aus.\n\n    Sie haben erfolgreich einen Bot im Azure Bot-Dienst eingerichtet.\n"
- title: Konfigurieren des einmaligen Anmeldens für Ihre Registerkarte
  durationInMinutes: 1
  content: "1. Navigieren Sie zum [Azure-Portal](https://portal.azure.com/).\n\n1. Wählen Sie **Azure Active Directory** aus.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/azure directory.png\" alt-text=\"azure directory.\":::\n\n1. Wählen Sie im linken Bereich **App-Registrierungen** aus.\n\n1. Wählen Sie Ihren Bot aus.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/app reg.png\" alt-text=\"app reg.\":::\n\n1. Wählen Sie unter **Verwalten** die Option **API verfügbar machen** aus.\n\n1. Wählen Sie **Festlegen** aus.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/application-id-set_1.png\" alt-text=\"Machen Sie eine API verfügbar.\":::\n   \n1. Legen Sie den **Anwendungs-ID-URI** im Format fest `api://your ngrok/botid-{your AppID}`.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/expose_2.png\" alt-text=\"Link festlegen.\":::\n\n   Die folgende Abbildung zeigt den Domänennamen:\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Tab-ME-SSO/app_id_1.png\" alt-text=\"App-URI-ID\":::\n\n1. Wählen Sie **Bereich hinzufügen**. \n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/selectscope_1.png\" alt-text=\"Bereich auswählen\":::\n\n**Ein Bereichsfenster hinzufügen** wird angezeigt.\n\n1. Geben Sie die folgenden Details ein, um den Bereich zu konfigurieren:\n\n   * Geben Sie `access_as_user` als **Bereichsnamen ein**.\n\n   * Legen Sie **Wer kann zustimmen?** auf fest `Admins and users`.\n\n1. Um die Eingabeaufforderungen für die Administrator- und Benutzereinwilligung mit geeigneten Werten für `access_as_user` den Bereich zu konfigurieren, geben Sie die folgenden Informationen in den Feldern an:</br>\n\n   * Geben Sie `Teams can access the user’s profile` als **Admin Anzeigenamen für die Zustimmung ein**.\n\n   * Geben Sie `Allows Teams to call the app’s web APIs as the current user` **als Admin Einwilligungsbeschreibung** ein.\n\n   * Geben Sie `Teams can access the user profile and make requests on the user’s behalf` als **Anzeigenamen für die Benutzereinwilligung** ein.\n\n   * Geben Sie `Enable Teams to call this app’s APIs with the same rights as the user` als **Beschreibung der Benutzereinwilligung ein**.\n\n1. Legen Sie **Status** auf **Aktiviert fest**.\n\n1. Klicken Sie auf **Bereich hinzufügen**.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/add-a-scope_1.png\" alt-text=\"Bereiche.\":::\n\n    > [!NOTE]\n    > Der **Bereichsname** sollte mit dem **Anwendungs-ID-URI** übereinstimmen, der `/access_as_user` am Ende angefügt ist.</br>\n       `api://your ngrok/botid-00000000-0000-0000-0000-000000000000/access_as_user`\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/add-a-scope-final1_1.png\" alt-text=\"Bereiche2.\":::\n\n1. Identifizieren Sie im Bereich **Autorisierte Clientanwendungen** die Anwendungen, die Sie für die Webanwendung Ihrer App autorisieren möchten. \n\n1. **Hinzufügen einer Clientanwendung** auswählen.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Tab-ME-SSO/selectclientapp_1.png\" alt-text=\"Screenshot: Auswahl der Clientanwendung\":::\n\n1. Geben Sie jede der folgenden Client-IDs ein, und wählen Sie den autorisierten Bereich aus:</br>\n\n     * Geben Sie **Client-ID** ein: `1fec8e78-bce4-4aaf-ab1b-5451cc387264` für die mobile Teams- oder Desktopanwendung.\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/addclientapplication1.png\" alt-text=\"Screenshot: Hinzufügen einer Clientanwendung\":::\n\n     * Geben Sie **Client-ID**:`5e3ce6c0-2b1f-4285-8d4b-75ee78787346` für die Teams-Webanwendung ein.\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/addclientapplication2.png\" alt-text=\"Screenshot: Hinzufügen der Client-ID\":::\n           \n1.  Wählen Sie **Autorisierte Bereiche aus**.\n\n    Die folgende Abbildung zeigt die **Client-ID**:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/Tab-ME-SSO/client-id-2.png\" alt-text=\"Screenshot: Client-App\"::: \n\n1. Wählen Sie im linken Bereich **API-Berechtigungen aus**. \n\n   > [!NOTE]\n   > Benutzer müssen diesen Berechtigungen nur zustimmen, wenn die Azure AD-App in einem anderen Mandanten registriert ist.\n\n1. Wählen Sie **Berechtigung hinzufügen** aus.\n\n1. Wählen Sie **Microsoft Graph** aus.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/microsoft-graph_1.png\" alt-text=\"microsoft-graph.\":::\n\n1. Wählen Sie **Delegierte Berechtigungen** aus.\n\n1. Fügen Sie die folgenden API-Berechtigungen hinzu:</br>\n    * **email**\n    * **offline_access**\n    * **Openid**\n    * **profile**\n    * **User.Read**\n\n1. Wählen Sie **Berechtigungen hinzufügen** aus.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/other-permissions_1.png\" alt-text=\"Screenshot: Hinzufügen weiterer Berechtigungen\":::\n\n1. Wählen Sie im linken Bereich **Authentifizierung** aus, um einen Umleitungs-URI festzulegen. \n\n   > [!NOTE]\n   > Wenn einer App keine Zustimmung des IT-Administrators erteilt wird, müssen Benutzer bei der ersten Verwendung der App ihre Zustimmung erteilen.\n           \n     1. Wählen Sie **Plattformweb** >  **hinzufügen** aus.\n\n        :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/configure-platform1_1.png\" alt-text=\"Webplattform.\":::\n\n     1. Geben Sie den Umleitungs-URI für Ihre App ein, indem Sie an den Domänennamen anfügen `auth-end` :</br> \n       `https://your ngrok/auth-end`. </br>\n\n     1. Aktivieren Sie **implizite Genehmigung und Hybridflows** , indem Sie die folgenden Kontrollkästchen aktivieren:\n         * **ID-Token (für implizite Flows verwendet)**\n         * **Zugriffstoken (für implizite und hybride Flows verwendet)**\n\n     1. Wählen Sie **Konfigurieren** aus.\n\n        :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/configure-web_1.png\" alt-text=\"Web konfigurieren.\":::\n\n**So aktualisieren Sie das Manifest**\n\n1. Wählen Sie im linken Bereich **Manifest** aus.\n\n1. Stellen Sie sicher, dass das Konfigurationselement auf **\"accessTokenAcceptedVersion\": 2** eingestellt ist. Wenn nicht, ändern Sie den Wert in **2** , und wählen **Sie Speichern** aus. \n\n   > [!Tip]\n   > Wenn Sie Ihren Bot bereits in Teams testen, müssen Sie sich beim Bot abmelden und sich bei Teams abmelden. Melden Sie sich dann erneut an, um diese Änderung zu sehen.\n\n   :::image type=\"content\" source=\"./assets/images/bots/update-manifest.png\" alt-text= \"update manifest.\":::\n\n**So richten Sie Bot Service Verbindung ein**\n\n1. Wechseln Sie zur **Konfigurationsseite** > **OAuth-Verbindungseinstellungen hinzufügen**.\n\n1. Wählen Sie **OAuth-Verbindungseinstellungen hinzufügen** aus.\n\n1. Geben Sie unter **Neue Verbindungseinstellung** die folgenden Details ein:\n\n    | Feld | Wert oder Beschreibung |\n    | ----- | ----- |\n    | **Name** | Geben Sie den Namen für Ihre neue Verbindungseinstellung ein. Sie können den Namen in den Einstellungen Ihres Botdienstcodes verwenden. |\n    | **Dienstleister** | Wählen Sie **Azure Active Directory V2** aus. |\n    | **Client-ID** | Zuvor als **Ihre Microsoft-App-ID** gespeichert. |\n    | **Geheimer Clientschlüssel** | Zuvor als **Wert** der id des geheimen Clientschlüssels gespeichert. |\n    | **Tokenaustausch-URL** | Verwenden Sie beim Verfügbarmachen des API-Endpunkts den zuvor abgerufenen **Anwendungs-ID-URI** . |\n    | **Mandanten-ID** | Geben Sie **common** ein. |\n    | **Scopes** | Geben Sie **User.Read ein,** und fügen Sie alle **bereiche hinzu,** die beim Angeben von Berechtigungen für Downstream-APIs ausgewählt wurden. |\n\n    :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/new-connection-setting_1.png\" alt-text=\"Schwureinstellung.\":::\n\n 1. Wählen Sie **Speichern** aus.\n"
- title: Einrichten von App-Einstellungen
  durationInMinutes: 1
  content: "1. Navigieren Sie im geklonten Repository zu **appsettings.json** .\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/app-setting-folder_1.png\" alt-text=\"App-Speicherort.\":::\n\n1. Öffnen Sie **appsettings.json** in Visual Studio Code.\n\n1. Aktualisieren Sie die folgenden Informationen:  \n\n     * Ersetzen Sie durch `\"MicrosoftAppId\"` die **Microsoft App-ID** Ihres Bots.\n     * Ersetzen Sie durch `\"MicrosoftAppPassword\"` den **Id-Wert** des geheimen Clientschlüssels Ihres Bots.\n     * Ersetzen Sie durch `\"SiteUrl\"` Ihre ngrok-URL.\n     * Ersetzen Sie durch `\"ConnectionName\"` den Namen der OAuth-Verbindungseinstellung.\n     * Ersetzen Sie durch `\"TenantId\"` die Mandanten-ID des Mandanten, in dem die App verwendet wird.\n     * Ersetzen Sie durch `\"ClientId\"` die **Microsoft App-ID** Ihres Bots.\n     * Ersetzen Sie durch `\"AppSecret\"` den **Id-Wert** des geheimen Clientschlüssels Ihres Bots.\n     * Ersetzen Sie `\"ApplicationIdURI\"` in Form von `api://*******.ngrok.io/botid-{AppID}`.\n\n    :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/app-setting1.png\" alt-text=\"App-Einstellungen.\":::\n"
- title: Einrichten der Manifestdatei
  durationInMinutes: 1
  content: "1. Wechseln Sie zu `manifest.json` im geklonten Repository.\n\n    :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/folder-manifest_1.png\" alt-text=\"Speicherort der Manifestdatei.\":::\n\n1. Öffnen Sie `manifest.json` in **Visual Studio Code** , und nehmen Sie die folgenden Änderungen vor:\n\n     * Ersetzen Sie durch `DOMAIN-NAME` Ihre ngrok-URL.\n     * Ersetzen Sie durch `YOUR-MICROSOFT-APP-ID` die **Microsoft App-ID** Ihres Bots.\n\n         > [!NOTE]\n         > Je nach Szenario `[YOUR-MICROSOFT-APP-ID]` können und `[DOMAIN-NAME]` mehrere Male auftreten.\n\n     * Ersetzen Sie als `\"resource\"` `api://*******.ngrok.io/botid-{AppID}`.</br>\n    \n    ![Manifest image2](~/assets/images/Tab-ME-SSO/vs-manifest.png)\n"
- title: Erstellen und Ausführen des Diensts
  durationInMinutes: 1
  content: "**So erstellen Sie den Dienst mit der neuesten Version von Visual Studio oder der Befehlszeile und führen diesen aus**\n\n# <a name=\"visual-studio\"></a>[Visual Studio](#tab/vs2019)\n\n   1. Starten Sie die neueste Version von Visual Studio.\n   1. Wählen Sie **Datei** > **Projekt/Projektmappe öffnen** >  aus.\n\n      ![Datei öffnen](~/assets/images/Tab-ME-SSO/open-project1.png)\n\n   1. Wählen Sie im Ordner **csharp** die Datei **App SSO Sample.csproj** aus.\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/project-folder1_1.png\" alt-text= \"Project folder.\":::\n\n   1. Press **F5** to run the project.\n\n   1. Wählen Sie **Ja** aus, wenn das folgende Dialogfenster angezeigt wird:\n\n      :::image type=\"content\" source=\"./assets/images/sbs-outgoing-webhooks/outgoing-webhook-certificate.png\" alt-text=\"Vertrauenszertifikat.\":::\n\n      Eine Webseite mit der Meldung **Ihr Bot ist bereit!**\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/bot-completion-explorer.png\" alt-text=\"App bereit.\":::\n\n    \n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cli)\n\nWechseln Sie in einem Eingabeaufforderungsfenster zum Ordner **csharp** , und geben Sie den folgenden Befehl ein:\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Tab-ME-SSO/dotnet-run1.png)\n  \n"
- title: Hochladen der SSO-App in Teams
  durationInMinutes: 1
  content: "1. Navigieren Sie in Ihrem geklonten Repository zu **csharp > App SSO-Beispiel > TeamsAppManifest**.\n\n1. Erstellen Sie eine .zip mit den folgenden Dateien, die im **Manifestordner** vorhanden sind: \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/upload-tab-me-sso_1.png\" alt-text=\"Uploadmanifest.\":::\n\n1. Wechseln Sie zu **Microsoft Teams**.\n\n1. Wählen Sie **Apps** > **Verwalten Sie Ihre Apps** aus.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/manageapps_1.png\" alt-text=\"Verwalten von Apps\":::\n\n1. Wählen Sie **App** >  hochladen **Benutzerdefinierte App hochladen** aus.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/uploadapp_1.png\" alt-text=\"Hochladen einer benutzerdefinierten App\":::\n\n1. Wählen Sie **Öffnen** aus, um die .zip Datei hochzuladen, die Sie im **Manifestordner** erstellt haben.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/upload-tab-me-sso-open_1.png\" alt-text=\"App hochladen.\":::)\n\n1. Klicken Sie auf **Hinzufügen**.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/add-sso-app_1.png\" alt-text=\"App hinzufügen.\":::\n\n1. Senden Sie eine Nachricht an den Bot. \n1. Der Bot führt SSO aus und zeigt die Profilkarte zusammen mit der Optionsaufforderung zum Anzeigen des Tokens an.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/Congratulation-image_1.png\" alt-text=\"Bild &quot;Herzlichen Glückwunsch&quot;.\":::\n\n1. Wählen Sie **Ja** aus, um das Token anzuzeigen, oder **Nein** , um mit dem Chat fortzufahren.\n  \n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/token-view1_1.png\" alt-text=\"Tokenansicht.\":::\n\n  1. Wenn SSO nicht ausgeführt wird, führt der Bot die Standardauthentifizierungsmethode für Ihre Registerkarte aus.\n\n     :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/not-login11_1.png\" alt-text=\"melden Sie sich nicht an.\":::\n\n  1. Wählen Sie Ellipse ●●● aus, um die Nachrichtenerweiterungs-App zu öffnen.\n         \n  1. Wählen Sie Ihre neue SSO-Anwendung aus.\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/recent-app-sso_1.png\" alt-text=\"SSO-App.\":::\n\n  1. Wählen Sie **Anmelden** aus.\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/sign-in-sso1_1.png\" alt-text= \"sign in.\":::\n\n  1. Geben Sie Ihre Anmeldeinformationen im **Anmeldefenster** ein, und wählen Sie **Weiter** aus.\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/sign-in-box.png\" alt-text= \"sign-in box.\":::\n  \n  1. Wählen Sie **Annehmen** aus.\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/consent-box.png\" alt-text= \"consent box.\":::\n\n  1. Wählen Sie die Nachrichtenerweiterung und Ihre Anwendung aus.\n\n  1. Wählen Sie unter dem Suchfeld Ihr Profil aus. Die folgende Ausgabe wird angezeigt:\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/hello-megan-profile_1.png\" alt-text= \"Profile.\":::\n\n  1. Senden Sie `https://profile.botframework.com` an die Anwendung, um eine Profilkarte zu erhalten.\n   \n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/profile-card_1.png\" alt-text= \"Profile card.\":::\n"
- title: Abschließen der Herausforderung
  durationInMinutes: 1
  content: >
    Haben Sie eine ausgabe wie diese?


    :::image type="content" source="./assets/images/Tab-ME-SSO//hello-megan-profile245_1.png" alt-text="Bild &quot;Herzlichen Glückwunsch&quot;.":::
- content: Sie haben das Tutorial für die ersten Schritte mit SSO für die Registerkarten- und Nachrichtenerweiterungs-App abgeschlossen.
