### YamlMime:Tutorial
title: Erstellen eines Teams-Konversationsbots
metadata:
  title: Erstellen eines Teams-Konversationsbots
  description: In diesem Lernmodul erfahren Sie, wie Sie einen einfachen Konversationsbot in der Microsoft Teams-Anwendung erstellen.
  audience: Developer
  level: Beginner
  ms.date: 04/01/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/conversations/channel-and-group-conversations.md
  nextTutorialTitle: Kanal- und Gruppenchatunterhaltungen mit einem Bot
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 0ffb1072424e60c5625ccd0d38f223c5e7643c9e
  ms.sourcegitcommit: 6926cf5eee55d5047c11ca13afc7f6f23e270396
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 10/27/2022
  ms.locfileid: "68740632"
items:
- durationInMinutes: 1
  content: >
    Teams-Konversationsbots ermöglichen Benutzern die Interaktion mit Ihrem Webdienst über Text, interaktive Karten und Aufgabenmodule. Grundlegende Unterhaltungen werden über den Bot Framework-Connector verarbeitet, eine einzelne REST-API. Diese API ermöglicht Es Ihrem Bot, mit Teams und anderen Kanälen zu kommunizieren. Das Bot Builder SDK bietet die folgenden Features:


    * Einfacher Zugriff auf den Bot Framework-Connector.

    * Zusätzliche Funktionen zum Verwalten des Konversationsflusses und -zustands.

    * Einfache Möglichkeiten zum Integrieren von Cognitive Services, z. B. verarbeitung natürlicher Sprache (Natural Language Processing, NLP).


    Wenn Ihr Bot zum ersten Mal einer Gruppe oder einem Team hinzugefügt wird, wird eine Einführungsnachricht gesendet. Die Nachricht enthält eine kurze Beschreibung der Features des Bots und deren Verwendung.


    Diese Schritt-für-Schritt-Anleitung hilft Ihnen beim Erstellen eines einfachen Konversationsbots in der Teams-Anwendung. Die folgende Ausgabe wird angezeigt:


    :::image type="content" source="./assets/images/conversation-bot/final-output.png" alt-text="Endgültige Ausgabe."lightbox="assets/images/conversation-bot/final-output.png":::
- title: Voraussetzungen
  durationInMinutes: 1
  content: "Installieren Sie zum Einrichten Ihrer Entwicklungsumgebung die folgenden Tools:\n\n| &nbsp; | Installieren | Zum Benutzen... |\n | --- | --- | --- |\n | **Required** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft 365-Entwicklerkonto](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | Zugriff auf das Teams-Konto mit den entsprechenden Berechtigungen zum Installieren einer App. |\n | &nbsp; | [Ngrok](https://ngrok.com/download) | Teams-App-Features (Konversationsbots, Nachrichtenerweiterungen und eingehende Webhooks) erfordern eingehende Verbindungen. Ein Tunnel verbindet Ihr Entwicklungssystem mit Teams. Dies ist nicht für Apps erforderlich, die nur Registerkarten enthalten. Dieses Paket wird im Projektverzeichnis installiert (mit npm `devDependencies`). |\n | &nbsp; | [Visual Studio 2022, Version 17.3](https://visualstudio.microsoft.com)<br> Installieren Sie eine der beiden folgenden Workloads:<br> • **ASP.NET und Webentwicklung** <br> • **Plattformübergreifende .NET Core-Entwicklung** | Sie können die Unternehmensversion in Visual Studio 2022 und die Workloads installieren. |   \n | &nbsp; | [.NET Core SDK Version 3.1](https://dotnet.microsoft.com/en-us/download) | Angepasste Bindungen für lokales Debuggen und Azure Functions App-Bereitstellungen. Wenn Sie das .NET 3.1-SDK (oder höher) nicht global installiert haben, kann die portable Version installiert werden. |\n | &nbsp; | [Microsoft Teams und ein Teams-Konto](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams für die Zusammenarbeit mit allen, mit denen Sie zusammenarbeiten, über Apps für Chats, Besprechungen, Anrufe und alles an einem Ort. |\n"
- title: Einrichten eines Konversationsbots
  durationInMinutes: 5
  content: "Registrieren Sie den Bot beim Azure-Botdienst, wenn Sie ihn in Azure entwickeln und hosten. Führen Sie die folgenden Schritte durch:\n\n1. Verwenden Sie ngrok, um einen Tunnel zu den Endpunkten Ihres Webservers zu erstellen.\n1. Erstellen sie die Botkanalregistrierung im Azure-Konto.\n1. Erstellen Sie einen geheimen Clientschlüssel, der die SSO-Authentifizierung des Bots ermöglicht.\n1. Fügen Sie API-Berechtigungen für downstream-Aufrufe hinzu.\n1. Fügen Sie dem erstellten ngrok-Tunnel einen Messagingendpunkt hinzu.\n1. Fügen Sie den Microsoft Teams-Kanal hinzu, um den Bot in einem Teams-Kanal bereitzustellen.\n\n**Erstellen eines ngrok-Tunnels**\n\nVerwenden Sie ngrok, um einen Tunnel zu den öffentlich verfügbaren HTTPS-Endpunkten Ihres lokal ausgeführten Webservers zu erstellen. Führen Sie den folgenden Befehl in ngrok aus:\n\n```bash\nngrok http --host-header=rewrite 3978\n```\n\n**Erstellen einer Botkanalregistrierung im Azure-Konto**\n\n1. Greifen Sie auf die [Azure-Portal](https://portal.azure.com/) zu.\n1. Wählen Sie **Ressource erstellen** aus.\n1. Suchen Sie im Suchfeld nach **Azure Bot** .\n1. Wählen Sie **Azure Bot aus**.\n\n    :::image type=\"content\" source=\"./assets/images/azure-bot.png\" alt-text=\"Azure-Bot.\":::\n\n1. Wählen Sie **Erstellen** aus.\n1. Geben Sie den Namen des Bot-Handle in das Feld **Bot-Handle** ein.\n1. Wählen Sie Ihr **Abonnement** aus der Dropdownliste aus.\n1. Wählen Sie in der Dropdownliste Ihre vorhandene **Ressourcengruppe** aus, oder erstellen Sie eine neue Ressourcengruppe, wählen **Sie Neu erstellen** aus, geben Sie ressourcennamen ein, wählen Sie **OK** aus, und wählen Sie in der Dropdownliste **Neuer Ressourcengruppenstandort** den erforderlichen Speicherort aus.\n1. Wählen Sie die erforderliche **Datenresidenz (Vorschau) aus**.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/create-azure-bot.png\" alt-text=\"Erstellen eines Azure-Bots\":::\n\n1. Wählen Sie den **App-Typ** als **Mehrinstanzenfähig** für die **Microsoft-App-ID** aus.\n\n    > [!NOTE]\n    > Im Abschnitt **Erstellungstyp** der Microsoft-App-ID ist die Option **Neue Microsoft-App-ID** erstellen bereits ausgewählt, um einen neuen Bot zu erstellen. Sie können auch **Vorhandene App-Registrierung verwenden** auswählen, wenn Sie bereits einen Bot registriert haben. Geben Sie im Feld **Vorhandene App-ID die Microsoft-App-ID** ein, und geben Sie den Wert in **das Feld Vorhandenes App-Kennwort** ein. \n1. Wählen Sie **Überprüfen + erstellen** aus.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/review-create.png\" alt-text=\"Überprüfen und erstellen.\":::\n\n1. Wählen Sie **Erstellen** aus, wenn die Überprüfung erfolgreich war. Es dauert einige Augenblicke, bis Ihr Botdienst bereitgestellt wurde.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/validation-passed.png\" alt-text=\"Validierung des Bots.\":::\n\n1. Wählen Sie **Zu Ressource wechseln** aus. Der Bot und die zugehörigen Ressourcen werden in der Ressourcengruppe aufgeführt.\n\n    Nun wurde Ihr Azure-Bot erstellt.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/go-to-resource.png\" alt-text=\"Wechseln Sie zur Ressourcenkarte.\":::\n\n**So erstellen Sie einen geheimen Clientschlüssel**\n\n1. Wählen Sie in **Einstellungen** die Option **Konfiguration** aus. Speichern Sie die **Microsoft App-ID** (Client-ID) zur zukünftigen Referenz.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/microsoft-app-id.png\" alt-text=\"Microsoft-App-ID.\":::\n\n1. Wählen Sie Neben **der Microsoft-App-ID** **verwalten** aus.\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label.png\" alt-text=\"Bot verwalten\":::\n\n1. Wählen Sie im Abschnitt **Geheime Clientschlüssel** **die Option Neuer geheimer Clientschlüssel** aus. Das Fenster **Geheimen Clientschlüssel hinzufügen** wird angezeigt.  \n\n    :::image type=\"content\" source=\"./assets/images/meetings-side-panel/newclientsecret.png\" alt-text=\"Neuer geheimer Clientschlüssel.\":::\n\n1. Geben Sie **Beschreibung** ein, und wählen Sie **Hinzufügen** aus.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/add-client-secret.png\" alt-text=\"Fügen Sie den geheimen Clientschlüssel hinzu.\":::\n\n1. Wählen Sie in der Spalte **Wert** **die Option In Zwischenablage kopieren** aus, und speichern Sie die ID des geheimen Clientschlüssels zur späteren Referenz.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/value.png\" alt-text=\"Wertkarte.\":::\n\n**So fügen Sie API-Berechtigungen für nachgeschaltete Aufrufe hinzu**\n\n1. Wählen **Sie** im Bereich Verwalten Ihres Bots **API-Berechtigungen** aus.\n1. Wählen Sie **Berechtigung hinzufügen** aus. Das Fenster **API-Berechtigungen anfordern** wird angezeigt.\n1. Wählen Sie **Microsoft-APIs** und dann **Microsoft Graph** aus.\n1. Wählen Sie **Anwendungsberechtigungen** und dann Berechtigungen aus.\n1. Fügen Sie alle Benutzerberechtigungen hinzu, die Ihre App für Downstream-APIs benötigt, z. B `User.Read`. .\n1. Wählen Sie **Berechtigungen hinzufügen** aus.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/api-permissions.png\" alt-text=\"Fügen Sie API-Berechtigungen hinzu.\"lightbox=\"assets/images/conversation-bot/api-permissions.png\":::\n\n**So fügen Sie einen Messagingendpunkt hinzu**\n\n1. Wechseln **Sie** zur Startseite Ihres Bots, und wählen Sie im linken Bereich unter **Einstellungen** die Option **Konfiguration** aus.\n1. Wechseln Sie zu ngrok.\n1. Kopieren Sie die HTTPS-URL (https zu io), wie in der folgenden Abbildung gezeigt:\n    \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url.png\" alt-text=\"ngrok HTTPS-URL\":::\n   \n1. Fügen Sie unter **Messagingendpunkt** die https-URL hinzu, die von ngrok verfügbar ist, und fügen Sie am Ende der URL **/api/messages** hinzu.\n    \n    :::image type=\"content\" source=\"./assets/images/conversation-bot/messaging-endpoint.png\" alt-text=\"Messagingendpunkt.\":::\n\n1. Wählen Sie **Anwenden** aus.\n\n**So fügen Sie den Microsoft Teams-Kanal hinzu**\n\n1. Wechseln Sie zu **Startseite**.\n1. Öffnen Sie im Abschnitt **Zuletzt verwendete Ressourcen** Ihren Bot.\n1. Wählen Sie im linken Bereich **Kanäle** und dann **Microsoft Teams aus.** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/> aus der Liste der verfügbaren Kanäle.    \n    \n    :::image type=\"content\" source=\"~/assets/images/adaptive-cards/channel-teams.png\" alt-text=\"Auswählen von Teams in Kanälen\":::\n\n1. Aktivieren Sie das Kontrollkästchen, um die Nutzungsbedingungen zu akzeptieren, und wählen Sie **Zustimmen** aus.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/terms-of-service.png\" alt-text=\"Nutzungsbedingungen.\":::\n\n1. Wählen Sie **Speichern** aus.\n\n    Sie haben erfolgreich einen Bot in Azure Bot Service eingerichtet und müssen nun eine Botdienstverbindung einrichten.\n"
- title: Einrichten der Botdienstverbindung
  durationInMinutes: 1
  content: "Konfigurieren Sie das Botbeispiel, um zu verstehen, wie Der Konversationsbot in Microsoft Teams authentifiziert wird, und erstellen Sie das Teams-App-Paket, und laden Sie es in die Organisation hoch.\n\n1. Aktualisieren Sie appsettings.json in Visual Studio.\n1. Aktualisieren Sie manifest.json in Visual Studio, und komprimieren Sie sie in die ZIP-Datei im Explorer.\n1. Führen Sie Ihre Projektmappe in Visual Studio aus.\n1. Laden Sie den Bot in Teams hoch.\n\n**Aktualisieren von App-Einstellungen für Unterhaltungsbots**\n\n1. Wechseln Sie zum Repository https://github.com/Microsoft/botbuilder-samples.git.\n1. Wählen Sie **Code** und dann die Dropdownliste aus.\n1. Wählen Sie **ZIP herunterladen** aus.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/repo.png\" alt-text=\"Klonen von Repositorys.\":::\n\n1. Notieren Sie sich den Pfad des heruntergeladenen Repositorys.\n1. Wechseln **Sie im Explorer** zu **botbuilder-samples** > **samples** > **csharp_dotnetcore** > **57.teams-conversation-bot**.\n1. Öffnen Sie die Datei **appsettings.json** in Visual Studio, und aktualisieren Sie die Konfiguration für den Bot.\n\n    * Fügen Sie den Botnamen für `MicrosoftAppType`hinzu.\n    * Sie können die auf `MicrosoftAppId` der Konfigurationsseite des Bots abrufen. ist `MicrosoftAppPassword` der Wert für die id des geheimen Clientschlüssels, den Sie zuvor gespeichert haben.\n    * Sie können oder `MicrosoftAppTenantId` `UserId` über den Link des Kontos abrufen, das für die Anmeldung bei Teams verwendet wird. Folgen Sie dem Pfad in der Abbildung, um den Link für `tenant id`abzurufen:\n    \n        :::image type=\"content\" source=\"./assets/images/conversation-bot/teams-link-new.png\" alt-text=\"Mandanten-ID-Pfad in Teams.\":::\n\n        :::image type=\"content\" source=\"./assets/images/conversation-bot/tenant-id.png\" alt-text=\"Kopieren Sie den Teams-Link.\":::\n\n        Kopieren Sie die Mandanten-ID aus der URL.\n\n        :::image type=\"content\" source=\"./assets/images/conversation-bot/url-tenantid.png\" alt-text=\"TenantID.\":::\n\n1. Wählen Sie **Speichern** aus.    \n    \n    :::image type=\"content\" source=\"./assets/images/conversation-bot/appsettings.png\" alt-text=\"Appsettings Json.\":::\n\n**So aktualisieren Sie das Manifest**\n\n1. Wechseln **Sie im Explorer** zu **botbuilder-samples** > **samples** > **csharp_dotnetcore** > **57.teams-conversation-bot** > **TeamsAppManifest**.\n1. Öffnen Sie die Datei **manifest.json** in Visual Studio.\n1. Suchen Sie in der Datei **manifest.json** **nach {id}, {botId},** und fügen Sie Ihre Microsoft-App-ID hinzu.\n1. Fügen Sie Ihre ngrok-URL in **validDomains** hinzu, und `https://` speichern Sie sie.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/manifest.png\" alt-text=\"Manifest.\":::\n\n1. Zippen Sie den Inhalt des **Ordners TeamsAppManifest** , um **manifest.zip** zu erstellen.\n\n    > [!NOTE]\n    > Der `manifest.zip` sollte keine zusätzlichen Ordner enthalten. Es sollte eine Quelldatei, `color` ein Symbol und `outline` ein Symbol im ZIP-Ordner enthalten`manifest json`.\n    > Führen Sie Ihre Projektmappe in Visual Studio aus, und laden Sie Ihr Manifest in Ihren Demomandanten für die Organisation oder Ihr Teams-Konto hoch.\n\n**So führen Sie die Projektmappe in Visual Studio aus**\n\n1. Öffnen Sie Visual Studio.\n1. Wählen Sie **Datei** und dann **Öffnen** aus.\n1. Wählen Sie **Projekt/Projektmappe** aus, um die `.csproj` Datei aus dem Explorer zu öffnen.\n1. Wechseln Sie zu **botbuilder-samples** > **samples** > **csharp_dotnetcore** > **57.teams-conversation-bot**.\n1. Wählen Sie `TeamsConversationBot.csproj` Datei und dann Ihren Bot aus der Liste **Startprojekte** aus.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/visual-studio.png\" alt-text=\"Debuggen von Visual Studio.\":::\n\n1. Wählen Sie zum Debuggen F5 aus. Sie erhalten einen Bestätigungsbildschirm, wenn Ihr Bot bereit ist.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/bot.png\" alt-text=\"Bildschirm &quot;Bot ready&quot;.\":::\n\n**So laden Sie die App in Teams hoch**\n\n1. Wechseln Sie zu Teams.\n1. Um **manifest.zip** hochzuladen, wählen Sie **Store > Apps verwalten > Benutzerdefinierte App hochladen** aus, und öffnen **Siemanifest.zip** aus dem Repository in Explorer.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/upload-manifest.png\" alt-text=\"Manifestupload in Teams.\":::\n\n1. Wählen Sie **Hinzufügen** aus, um den Konversationsbot in Teams zu installieren.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/add-app-teams.png\" alt-text=\"Hinzufügen einer App zu Teams.\":::\n\n    Sie können jetzt mit diesem Bot interagieren.\n"
- title: Interaktion mit dem Konversationsbot
  durationInMinutes: 2
  content: >
    Sie können mit dem Bot in Teams interagieren, indem Sie eine Nachricht senden oder einen Befehl aus der Befehlsliste auswählen. Der Bot antwortet auf die folgenden Zeichenfolgen:


    Wählen Sie im linken Bereich der Teams die Auslassungspunkte ●●● und dann Ihre App aus der Liste aus. Der Bot zeigt **Vorschläge** wie folgt an:


    :::image type="content" source="./assets/images/conversation-bot/suggestions.png" alt-text="Karte &quot;Vorschläge&quot;.":::


    | MentionMe    | Willkommen anzeigen   | MessageAllMembers |

    | --- | --- | --- |

    | :::image type="content" source="./assets/images/conversation-bot/mentionme-new.png" alt-text="Erwähnungskarte"lightbox="assets/images/conversation-bot/mentionme-new.png"::: | :::image type="content" source="./assets/images/conversation-bot/show-welcome-new.png" alt-text="Willkommenskarte anzeigen"lightbox="assets/images/conversation-bot/show-welcome-new.png"::: | :::image type="content" source="./assets/images/conversation-bot/message-all-members-new.png" alt-text="MessageAllMembers-Karte"lightbox="assets/images/conversation-bot/message-all-members-new.png"::: |

    | **Ergebnis:** Der Bot reagiert auf die Nachricht und erwähnt den Benutzer. | **Ergebnis:** Der Bot sendet die Willkommenskarte, mit der Sie interagieren können. |  **Ergebnis:** Der Bot sendet eine 1:1-Nachricht an jedes Mitglied der aktuellen Unterhaltung. |

    | **Gültige Bereiche:** persönlicher Chat, Gruppenchat, Teamchat. | **Gültige Bereiche:** persönlicher Chat, Gruppenchat, Teamchat. |  **Gültige Bereiche:** persönlicher Chat, Gruppenchat, Teamchat. |


    Sie können eine Option aus der Befehlsliste auswählen, indem Sie **@TeamsConversationBot** in den Nachrichtenbereich zum Verfassen und **Was kann ich tun?** -Text über dem Verfassenbereich eingeben.
- title: Abschließen der Herausforderung
  durationInMinutes: 1
  content: >
    Haben Sie sich so etwas einfallen lassen?


    :::image type="content" source="./assets/images/conversation-bot/final-output.png" alt-text="Endgültige Ausgabe."lightbox="assets/images/conversation-bot/final-output.png":::
- content: Sie haben das Tutorial für die ersten Schritte mit dem Konversationsbot für Microsoft Teams abgeschlossen.
