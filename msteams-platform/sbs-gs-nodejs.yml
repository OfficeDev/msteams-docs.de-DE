### YamlMime:Tutorial
title: Erstellen Ihrer ersten App mit Node.js
metadata:
  title: Hallo Welt mit Node.js
  description: In diesem Lernprogramm erfahren Sie, wie Sie Hallo Welt App mit Node.js erstellen.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Zurück zur Übersicht über Erste Schritte
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 96dbb54545552882a5922ca951400795a6d15d6b
  ms.sourcegitcommit: 61003a14e8a179e1268bbdbd9cf5e904c5259566
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 04/09/2022
  ms.locfileid: "64737070"
items:
- durationInMinutes: 1
  content: >
    Beginnen Sie mit Microsoft Teams App-Entwicklung, indem Sie Ihre erste App mit einer Registerkarte, einem Bot und einer Nachrichtenerweiterungsfunktion erstellen.


    > Diese App verfügt über alle Funktionen, und jede verfügt über eine eigene Benutzeroberfläche und UX:


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="Diagramm, das diese App zeigt, verfügt über drei Features." border="false":::


    In diesem Lernprogramm lernen Sie Folgendes:


    - So richten Sie ein neues Projekt mithilfe von Befehlszeilentools ein.

    - So erstellen Sie drei Apps mit jeweils unterschiedlichen Funktionen – Registerkarten-, Bot- und Nachrichtenerweiterungen.

    - So stellen Sie Ihre App über das Entwicklerportal bereit
- title: Voraussetzungen
  durationInMinutes: 1
  content: "\nHier ist eine Liste der Tools, die Sie zum Erstellen und Bereitstellen einer Teams-App installieren müssen.\n\n| &nbsp; | Installieren | Zur Verwendung... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Node.js und NPM](https://nodejs.org/) | Back-End-JavaScript-Laufzeitumgebung. Verwenden Sie die neueste Version von v14 LTS.|\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teams App-Features (Unterhaltungsbots, Messaging-Erweiterungen und eingehende Webhooks) erfordern eingehende Verbindungen. Ein Tunnel verbindet Ihr Entwicklungssystem mit Teams. Sie ist nicht für Apps erforderlich, die nur Registerkarten enthalten. Dieses Paket wird im Projektverzeichnis installiert (mit npm `devDependencies`). |\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (empfohlen) oder [Google Chrome](https://www.google.com/chrome/) | Ein Browser mit Entwicklertools. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | JavaScript-, TypeScript- oder SharePoint-Framework(SPFx)-Buildumgebungen. Verwenden Sie Version 1.55 oder höher. |\n| &nbsp; | [Git](https://git-scm.com/downloads) | Git, um das Beispiel-Node.js-App-Repository aus GitHub zu verwenden. |\n| &nbsp; |  [Schluck](https://gulpjs.com/docs/en/getting-started/quick-start) | Open-Source-JavaScript-Toolkit. Installieren Sie Version 4.0.0 oder höher. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams, mit allen Personen zusammenzuarbeiten, mit denen Sie über Apps für Chat, Besprechungen, Anrufe zusammenarbeiten – alles an einem zentralen Ort. | \n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure-Tools für Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) und [Microsoft Azure CLI](/cli/azure/install-azure-cli) | Azure-Tools für den Zugriff auf gespeicherte Daten oder die Bereitstellung eines cloudbasierten Back-End für Ihre Teams-App in Azure. |\n| &nbsp; | [React Developer Tools für Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) ODER [React Developer Tools für MicrosoftEdge&nbsp;](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Browsertools für die Entwicklung von Registerkarten mit JavaScript. |\n| &nbsp; | [Microsoft Graph-Tester](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer, ein browserbasiertes Tool, mit dem Sie eine Abfrage aus Microsoft Graph-Daten ausführen können. |\n| &nbsp; | [Entwicklerportal für Teams](https://dev.teams.microsoft.com/) | Webbasiertes Portal zum Konfigurieren, Verwalten und Verteilen Ihrer Teams-App, einschließlich an Ihre Organisation oder den Teams Store. |\n| &nbsp; | **Visual Studio Code Erweiterungen** | &nbsp; |\n| &nbsp; | [Azure Functions Kerntools](/azure/azure-functions/functions-run-local) | Back-End-Komponenten lokal während einer lokalen Debugausführung, einschließlich der Authentifizierungshilfsprogramme, die beim Ausführen Ihrer Dienste in Azure erforderlich sind. Es wird im Projektverzeichnis (mithilfe des npm `devDependencies`) installiert. |\n| &nbsp; | [.NET SDK](/dotnet/core/install/) | Angepasste Bindungen für das lokale Debuggen und Azure Functions App-Bereitstellungen. Wenn Sie das .NET 3.1-SDK (oder höher) nicht global installiert haben, kann die portable Version installiert werden. |\n\n## <a name=\"verify-version-numbers-for-installed-tools\"></a>Überprüfen der Versionsnummern für installierte Tools\n\nVerwenden Sie die folgenden Befehle, um zu überprüfen, ob die installierten Versionen für die Tools wie erforderlich sind.\n\n> [!NOTE]\n> Verwenden Sie das Terminalfenster, mit dem Sie sich auf Ihrer Plattform am wohlsten fühlen. Diese Beispiele verwenden Git Bash (das in der Git-Installation enthalten ist), aber diese Skripts werden auf den meisten Plattformen ausgeführt.\n\nSo überprüfen Sie die Versionsnummern der installierten Tools:\n\n1. Öffnen Sie ein Terminalfenster. \n2. Führen Sie den folgenden Befehl aus, um die `git` auf Ihrem Computer installierte Version zu überprüfen:\n\n    ```bash\n    $ git --version\n    ```\n\n    Ausgabebeispiel: `git version 2.19.0.windows.1`\n    \n3. Führen Sie den folgenden Befehl aus, um die `node.js` Version zu überprüfen:\n    \n    ```bash\n    $ node -v\n    ```\n\n    Ausgabebeispiel: `v8.9.3`\n\n4. Überprüfen Sie die Versionsnummer von `npm`:\n\n    ```bash\n    $ npm -v\n    ```\n\n    Ausgabebeispiel: `5.5.1`\n\n5. Überprüfen Sie die Versionsnummer von `gulp`:\n    \n    ```bash\n    $ gulp -v\n    ```\n\n    Ausgabebeispiel:  `CLI version 2.3.0`\n    \n    `Local version 4.0.2`\n\n6. Führen Sie den folgenden Befehl aus, um die Versionsnummer von Visual Studio Code zu überprüfen:\n\n    ```bash\n    code --version\n    ```\n\n    Ausgabebeispiel:  `1.28.2`\n    \n    `929bacba01ef658b873545e26034d1a8067445e9`\n\nSie können problemlos eine andere Version dieser Anwendungen verwenden.\n\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Einrichten Ihres Teams-Entwicklungsmandanten\n\nEin **Mandant** ist wie ein Raum oder ein Container für Ihre Organisation in Teams, in dem Sie chatten, Dateien freigeben und Besprechungen ausführen.\nIn diesem Bereich laden Sie Ihre App quer und testen sie. \n\nLassen Sie uns überprüfen, ob Sie bereit sind, mit dem Mandanten zu entwickeln.\n\n### <a name=\"enable-sideloading-option\"></a>Option \"Querladen aktivieren\"\n\nNachdem Sie die App erstellt haben, müssen Sie ihre App in Teams laden, ohne sie zu verteilen. Dieser Vorgang wird als Querladen bezeichnet. Melden Sie sich bei Ihrem Microsoft 365 Konto an, um diese Option anzuzeigen.\n  \n> [!NOTE]\n> Das Querladen ist für die Vorschau und das Testen von Apps in Teams lokalen Umgebung erforderlich. Wenn sie nicht aktiviert ist, können Sie ihre App nicht in Teams lokal in der Vorschau anzeigen und testen.\n\nHaben Sie bereits einen Mandanten, und haben Sie den Administratorzugriff? Lassen Sie uns überprüfen, ob Sie es wirklich tun!\n\nÜberprüfen Sie, ob Sie Apps in Teams querladen können:\n\n1. Wählen Sie im Teams-Client **Store** Symbol aus.\n1. Wählen Sie **\"Apps verwalten\" aus**.\n1. Suchen Sie nach der Option zum **Hochladen einer benutzerdefinierten App**. Wenn die Option angezeigt wird, ist das Querladen von Apps aktiviert.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"Abbildung zeigt die Option zum Hochladen einer benutzerdefinierten App in Teams.\":::\n\n    > [!NOTE]\n    > Wenn Teams die Option zum Hochladen einer benutzerdefinierten App nicht angezeigt wird, wenden Sie sich an Ihren Teams Administrator.\n\n### <a name=\"create-a-free-teams-developer-tenant\"></a>Erstellen eines kostenlosen Teams Entwicklermandanten\n\nWenn Sie nicht über ein Teams Entwicklerkonto verfügen, können Sie es kostenlos erhalten. Nehmen Sie am Microsoft 365-Entwicklerprogramm teil!\n\n1. Gehen Sie zu [Microsoft 365-Entwicklerprogramm](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Wählen Sie **\"Jetzt teilnehmen\"** aus, und folgen Sie den Anweisungen auf dem Bildschirm.\n1. Wählen Sie auf der Willkommensseite \" **E5-Abonnement einrichten\" aus**.\n1. Einrichten Ihres Administratorkontos. NachDem Sie fertig sind, wird der folgende Bildschirm angezeigt.\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Beispiel für das, was nach der Registrierung für das Microsoft 365-Entwicklerprogramm angezeigt wird.\":::\n\n1. Melden Sie sich mit dem soeben eingerichteten Administratorkonto bei Teams an. Vergewissern Sie sich, dass Sie über die **Hochladen einer benutzerdefinierten App-Option** in Teams verfügen.\n\n## <a name=\"get-a-free-azure-account\"></a>Abrufen eines kostenlosen Azure-Kontos\n\nWenn Sie Ihre App hosten oder auf Ressourcen in Azure zugreifen möchten, müssen Sie über ein Azure-Abonnement verfügen. [Erstellen Sie ein kostenloses Konto](https://azure.microsoft.com/free/) , bevor Sie beginnen.\n\nJetzt haben Sie alle Tools und richten Ihre Konten ein. Als Nächstes richten wir Ihre Entwicklungsumgebung ein und beginnen mit der Erstellung!\n\nSie können dieses Terminalfenster weiterhin verwenden, um die befehle auszuführen, die in diesem Lernprogramm folgen.\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>Herunterladen des Beispiels\n\nVerwenden Sie für dieses Lernprogramm das [Hello, World!](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/nodejs) Beispiel für die ersten Schritte. Sie können es von GitHub herunterladen und klonen.\n\n**So klonen Sie git Bash zum Klonen des Beispiel-Repositorys**:\n\n1. Öffnen Sie ein Terminalfenster.\n1. Führen Sie den folgenden Befehl aus, um das Beispielrepository auf Ihren Computer zu klonen:\n\n    ```bash\n    git clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n    ```\n\n> [!TIP]\n> Sie können dieses [Repository](https://github.com/OfficeDev/Microsoft-Teams-Samples) [verzweigen](https://help.github.com/articles/fork-a-repo/), wenn Sie Ihre Änderungen an Ihrem GitHub Repo ändern und überprüfen möchten, um zukünftige Verweise zu erhalten.\n"
- title: Erstellen Ihrer ersten Node.js-App
  durationInMinutes: 1
  content: "\nNachdem Sie das Repository für Node.js Beispiel-App geklont haben, können Sie die App in Ihrer lokalen Umgebung erstellen und testen.\n\nAuf dieser Seite lernen Sie Folgendes:\n1. [Erstellen und Ausführen Ihrer ersten App](#build-and-run-the-sample)\n1. [Testen der Beispiel-App](#test-your-sample-app-in-local-environment)\n\n\n## <a name=\"build-and-run-the-sample\"></a>Erstellen und Ausführen des Beispiels\n\nNachdem das Repository geklont wurde, können Sie die Beispiel-App erstellen.\n\n1. Öffnen Sie ein Terminalfenster.\n1. Führen Sie den Befehl \"Verzeichnis ändern\" im Terminal aus, um zum Beispiel-App-Verzeichnis zu wechseln:\n\n    ```bash\n    cd Microsoft-Teams-Samples/samples/app-hello-world/nodejs/\n    ```\n\n1. Installieren Sie alle Abhängigkeiten mit dem folgenden Befehl:\n\n    ```bash\n    npm install\n    ```\n\n    Es sollten eine Reihe von Abhängigkeiten installiert werden.\n\n1. Führen Sie die App nach Abschluss der Installation mit dem folgenden Befehl aus:\n\n    ```bash\n    npm start\n    ```\n\n    Wenn die Hallo Welt App gestartet wird, wird sie im Terminalfenster angezeigt`App started listening on port 3333`.\n\n    > [!NOTE]\n    > Wenn in der obigen Meldung eine andere Portnummer angezeigt wird, liegt dies daran, dass Sie eine PORT-Umgebungsvariable festgelegt haben. Sie können diesen Port weiterhin verwenden oder Ihre Umgebungsvariable in 3333 ändern.\n\n1. Öffnen Sie ein Browserfenster, und überprüfen Sie mithilfe der folgenden URLs, ob alle Hallo Welt App-URLs geladen werden:\n\n    - `http://localhost:3333`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host.png\" alt-text=\"Abbildung Node.js lokalen Hosts\" border=\"false\":::\n\n    - `http://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello-nodejs.png\" alt-text=\"Abbildung Node.js hello-Seite des lokalen Hosts\" border=\"false\":::\n\n    - `http://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-nodejs.png\" alt-text=\"Abbildung der ersten Registerkarte Node.js lokalen Hosts\" border=\"false\":::\n\n    - `http://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-nodejs.png\" alt-text=\"Abbildung der zweiten Registerkarte Node.js lokalen Hosts\" border=\"false\":::\n\n## <a name=\"test-your-sample-app-in-local-environment\"></a>Testen der Beispiel-App in der lokalen Umgebung\n\nDenken Sie daran, dass Apps in Microsoft Teams Webanwendungen sind, die eine oder mehrere Funktionen verfügbarmachen. Stellen Sie Ihre App im Internet zur Verfügung, damit sie von der Teams Plattform geladen werden kann. Damit Ihre App über das Internet erreichbar ist, müssen Sie Ihre App *hosten* .\n\nFür lokale Tests können Sie die App auf Ihrem lokalen Computer ausführen und einen Tunnel zu ihr mit einem Webendpunkt erstellen. [ngrok](https://ngrok.com) ist ein kostenloses Tool, mit dem Sie genau das tun können. Mit *ngrok* können Sie eine Webadresse wie `https://d0ac14a5.ngrok.io` diese abrufen (diese URL ist nur ein Beispiel). Sie können *ngrok* für Ihre Umgebung [herunterladen und installieren](https://ngrok.com/download). Stellen Sie sicher, dass Sie es zu einem Speicherort in der `PATH`hinzufügen.\n\n### <a name=\"create-ngrok-tunnel\"></a>Erstellen eines ngrok-Tunnels\n\nNachdem Sie ngrok installiert haben, können Sie einen Tunnel erstellen, um Ihre App lokal bereitzustellen.\n\n1. Öffnen Sie ein neues Terminalfenster.\n1. Führen Sie den folgenden Befehl aus, um einen Tunnel zu erstellen. Die Beispiel-App verwendet Port 3333:\n\n    ```bash\n    ngrok http 3333 -host-header=localhost:3333\n    ```\n    Der ngrok-Tunnel wird erstellt. Hier ist ein Beispiel für einen ngrok-Tunnel.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel.png\" alt-text=\"Abbildung des ngrok-Tunnels\" border=\"false\":::\n\n    *Ngrok* überwacht Anfragen aus dem Internet und leitet sie an Ihre App weiter, die auf Port 3333 ausgeführt wird.\n\nSo überprüfen Sie die lokale Bereitstellung der App:\n\n1. Öffnen Sie den Browser.\n1. Laden Sie Ihre App mithilfe der folgenden URL:\n\n    `https://<forwarding address in ngrok console session>/`\n\n    Hier ist ein Beispiel für die URL:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel-verify.png\" alt-text=\"Abbildung node.js lokal im ngrok-Tunnel ausgeführten App\" border=\"false\":::\n\n    Sie können versuchen, `first`die URL des ngrok-Tunnels hinzuzufügen`hello`, um `second` verschiedene Registerkartenseiten der App anzuzeigen.\n\n    Ngrok überwacht Anfragen aus dem Internet und leitet sie an Ihre App weiter, die auf Port 3333 ausgeführt wird.        \n\n1. Notieren Sie sich die Weiterleitungsadresse in der ngrok-Konsole. Sie benötigen diese URL, um Ihre App in Teams bereitzustellen.\n\n    > [!NOTE]\n    > Wenn Sie beim [Erstellen und Ausführen](#build-and-run-the-sample) einen anderen Port verwendet haben, stellen Sie sicher, dass Sie zum Einrichten des *ngrok-Tunnels* die gleiche Portnummer verwenden.\n    > [!TIP]\n    > Es empfiehlt sich, *\"ngrok* \" in einem anderen Terminalfenster auszuführen, damit es weiterhin ausgeführt wird, ohne die Knoten-App zu beeinträchtigen, die Sie möglicherweise später beenden, neu erstellen und erneut ausführen müssen. Die *ngrok-Sitzung* gibt nützliche Debuginformationen in diesem Fenster zurück. Die kostenpflichtige Version von *ngrok* lässt persistente Namen zu.\n\n    >[!IMPORTANT] \n    > Wenn Sie die kostenlose Version von ngrok verwenden, ist Ihre App nur während der aktuellen Sitzung auf Ihrem Entwicklungscomputer verfügbar. Es ist nicht verfügbar, wenn der Computer heruntergefahren wird oder in den Ruhezustand wechselt. Wenn Sie den Dienst neu starten, wird eine neue Adresse zurückgegeben. Anschließend müssen Sie jeden Speicherort aktualisieren, der die veraltete Adresse verwendet. Denken Sie an diesen Schritt, wenn Sie die App zu Testzwecken freigeben.\n\n<a name=\"DeployToTeams\"></a>\n\n## <a name=\"build-nodejs-app-package\"></a>Erstellen Node.js App-Pakets\n\nSie können `gulp CLI` das App-Paket für Node.js erstellen.\n\n1. Öffnen Sie ein Terminalfenster.\n1. Stellen Sie sicher, dass Sie sich in dem Verzeichnis befinden, in dem das `node.js` Klonen erfolgt. Dies ist der Ordner, in dem sich `gulpfile.js` der Ordner befindet. \n1. Führen Sie den folgenden Befehl aus, um das Node.js App-Paket zu erstellen.\n\n    ```$ gulp```\n\n    Hier ist ein Beispiel für die Befehlsausgabe:\n\n    `[13:39:27] Using gulpfile ~\\documents\\github\\msteams-samples-hello-world-nodejs\\gulpfile.js`\n\n    `[13:39:27] Starting 'clean'...`\n\n    `[13:39:27] Starting generate-manifest'...`\n\n    `[13:39:27] Finished 'generate-manifest' after 11 ms`\n\n    `[13:39:27] Finished 'clean after 21 ms`\n\n    `[13:39:27] Starting 'default'...\n    Build completed. Output in manifest folder`\n\n    `[13:39:27] Finished 'default' after 62 μs`\n\n    Das helloworldapp.zip des App-Pakets wird erstellt. Sie finden die Paketdatei unter dem folgenden Pfad.\n\n    `<path to the cloned repo>/Microsoft-Teams-Samples/samples/app-hello-world/nodejs/manifest`\n\n    > [!NOTE]\n    > Suchen Sie nach der App-Paketdatei helloworldapp.zip, wenn der Speicherort in dem von Ihnen verwendeten Tool nicht eindeutig ist.\n"
- title: Konfigurieren Ihrer ersten Node.js-App mithilfe des Entwicklerportals
  durationInMinutes: 1
  content: "\nSie können das [Entwicklerportal](https://dev.teams.microsoft.com/) verwenden, um das App-Paket hochzuladen, um Teams und App-Funktionen zu konfigurieren. Das Entwicklerportal ist eine Teams-App, die das Erstellen und Registrieren einer App vereinfacht. Aus dem Teams Store installieren!\n\nNachdem Sie Ihre Teams App erstellt und getestet haben, können Sie sie mithilfe des Entwicklerportals konfigurieren und in der Vorschau anzeigen.\n\nDas Aktualisieren des App-Pakets umfasst:\n\n1. [Importieren des App-Pakets in das Entwicklerportal](#import-the-app-package-to-developer-portal)\n1. [Konfigurieren von App-Funktionen](#configure-your-apps-capabilities)\n\n### <a name=\"import-the-app-package-to-developer-portal\"></a>Importieren des App-Pakets in das Entwicklerportal\n\nSo importieren Sie das App-Paket:\n\n1. Öffnen Sie Microsoft Teams.\n\n1. Wählen Sie in der linken Leiste das **Symbol Store** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: aus.\n\n1. Suchen Sie in der Suchleiste nach dem **Entwicklerportal** , und wählen Sie **Entwicklerportal*** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"Entwicklerportal-App auswählen\" border=\"false\":::\n\n1. Klicken Sie auf **Öffnen**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"Abbildung der geöffneten Entwicklerportal-App\" border=\"false\":::\n\n    Das Entwicklerportal wird geöffnet.\n\n1. Wählen Sie die Registerkarte **\"Apps** \" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"Entwicklerportal-App\" border=\"false\":::\n\n1. Wählen Sie **\"App importieren**\" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"Abbildung der Schaltfläche &quot;App importieren&quot;\" border=\"false\":::\n\n1. Öffnen Sie das App-Paket `helloworldapp.zip` über den folgenden Pfad in der C#-Beispiel-Repositoryverzeichnisstruktur:\n\n    `<path to cloned node.js sample repo>\\Source\\Repos\\Microsoft-Teams-Samples\\samples\\app-hello-world\\nodejs\\manifest`\n\n    Die **Hallo Welt-App** wird im Entwicklerportal importiert.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"Abbildung der in Teams importierten App\" border=\"false\":::\n\n    Nachdem Sie Ihre App in das Entwicklerportal importiert haben, können Sie deren Details im Entwicklerportal anzeigen.\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>Machen Sie eine Tour durch Ihre App im Entwicklerportal\n\nNachdem Sie Ihre App in das Entwicklerportal importiert haben, können Sie deren Details einschließlich der Manifestdatei anzeigen.\n\n#### <a name=\"view-app-information\"></a>Anzeigen von App-Informationen\n\n1. Wählen Sie im linken Bereich des Entwicklerportals die Option **\"Grundlegende Informationen** \" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"Abbildung des linken Bereichs des Entwicklerportals\" border=\"false\":::\n\n1. Beachten Sie die folgenden Informationen aus den grundlegenden Informationen:\n    - App-ID\n    - Entwicklerinformationen\n    - App-URLs\n\n1. Wählen Sie im linken Bereich \" **Branding** \" aus, um die Brandinginformationen anzuzeigen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"Bild mit Brandinginformationen der App\" border=\"false\":::\n\n    Diese Details sind wichtig, wenn Sie eine neue App für die Verteilung schreiben.\n\n#### <a name=\"view-app-features\"></a>Anzeigen von App-Features\n\n- Wählen Sie im linken Bereich des Entwicklerportals **App-Features** aus.\n\n    Die App-Features werden im rechten Bereich angezeigt. Sie können Karten für persönliche Apps, Bots und Nachrichtenerweiterungen anzeigen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"Abbildung der Features der App\" border=\"false\":::\n\n#### <a name=\"view-the-app-manifest\"></a>Anzeigen des App-Manifests\n\nSie verwenden die Manifestdatei, um Funktionen, erforderliche Ressourcen und andere wichtige Attribute für Ihre App zu konfigurieren.\n\n- Wählen Sie im linken Bereich \" **Veröffentlichen** \" aus, um die Dropdownliste zu öffnen, und wählen Sie dann **\"App-Paket**\" aus.\n\n    Das App-Manifest wird im rechten Bereich angezeigt.\n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-manifest.png\" alt-text=\"Abbildung der App-Manifestdatei im Entwicklerportal\" border=\"false\":::\n\n    Die Manifestdatei wird im rechten Bereich angezeigt.\n\n### <a name=\"configure-your-apps-capabilities\"></a>Konfigurieren der Funktionen Ihrer App\n\nNachdem Sie Ihre App in das Entwicklerportal importiert haben, besteht der nächste Schritt darin, die App-Funktionen zu konfigurieren. Das Entwicklerportal enthält alle App-Informationen in verschiedenen Abschnitten. Dies erleichtert die Konfiguration der App-Funktionen.\n\nMithilfe des Entwicklerportals können Sie:\n1. [Konfigurieren der persönlichen Registerkarten-App](#configure-personal-tab-app)\n1. [Konfigurieren eines Bots](#configure-bot)\n1. [Konfigurieren der Nachrichtenerweiterung](#configure-message-extension)\n\n#### <a name=\"configure-personal-tab-app\"></a>Konfigurieren der persönlichen Registerkarten-App\n\nSo konfigurieren Sie die persönliche Registerkarten-App:\n\n1. Wählen Sie das :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: Symbol auf der **persönlichen App-Karte** im **Bereich \"App-Features\"** und dann **\"Bearbeiten\"** aus.\n\n    Die Details für die Registerkarte \"Hello\" werden angezeigt.\n\n1. Wählen Sie das Symbol für die :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: Registerkarte \"Hello\" und dann **\"Bearbeiten\"** aus, um die App-Details zum Aktualisieren zu öffnen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"Abbildung des Registerkartenmenüs &quot;Hello&quot;\" border=\"false\":::\n\n1. Geben Sie die App-Details für die Registerkarte \"Hello\" unter **\"Hinzufügen einer Registerkarte zu Ihrer persönlichen App\" ein**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-add-tab.png\" alt-text=\"Abbildung der Details der Registerkarte &quot;Hello&quot;\" border=\"false\":::\n\n    Geben Sie die folgenden Details ein:\n    - **Name**: Registerkarte \"Hallo\".\n    - **Inhalts-URL** und **Website-URL**: Die Weiterleitungsadresse in der ngrok-Konsolensitzung.\n    - **Kontext**: **Wählen Sie die Registerkarte \"Persönlich\" aus**.\n\n1. Wählen Sie **Aktualisieren** aus.\n\n    Die Details der Registerkarte \"Hello\" werden im **Persönlichen App-Bereich** angezeigt.\n\n1. Klicken Sie auf **Speichern**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-save.png\" alt-text=\"Abbildung der Zu speichernden Hello-Registerkartendetails\" border=\"false\":::\n\n    Im **Bereich \"Persönliche App** \" werden jetzt die neue Registerkarte und eine automatisch erstellte Registerkarte \"Info\" angezeigt.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-saved.png\" alt-text=\"Abbildung der Registerkarte &quot;Hello&quot; und der Details zur Registerkarte &quot;Info&quot;\" border=\"false\":::\n\n#### <a name=\"configure-bot\"></a>Konfigurieren eines Bots\n\nEs ist einfach, die Bots-Funktionen zu Ihrer App hinzuzufügen. Die Hallo Welt-Beispiel-App enthält bereits einen Bot als Teil des Beispiels, Sie müssen ihn jedoch bei Teams registrieren.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"Abbildung der Bot-App, die ohne App-ID importiert wurde\" border=\"false\":::\n\nDem Bot, der aus dem Beispiel importiert wurde, ist keine App-ID zugeordnet. Sie müssen es löschen und einen neuen Bot erstellen. Das Entwicklerportal erstellt eine neue App-ID und registriert sie bei Teams.\n\nDas Hinzufügen und Konfigurieren eines Bots umfasst Folgendes:\n\n1. [Hinzufügen eines neuen Bots](#to-add-a-new-bot)\n1. [Hinzufügen eines Bots zur App](#to-add-bot-to-app)\n1. [Konfigurieren des Botbereichs](#to-configure-bot-scope)\n\n##### <a name=\"to-add-a-new-bot\"></a>So fügen Sie einen neuen Bot hinzu\n\n1. Wählen Sie das :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: Symbol auf der **Bot-Karte** im **Bereich \"App-Features\"** und dann **\"Löschen\"** aus.\n\n1. Wählen Sie **\"Extras** \" aus, um Funktionen hinzuzufügen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/tools-option.png\" alt-text=\"Abbildung der Option &quot;Extras&quot;\" border=\"false\":::\n\n1. Wählen Sie im Bereich **\"Extras**\" die **Option \"Botverwaltung**\" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tools-bot-card.png\" alt-text=\"Abbildung des Bereichs &quot;Botverwaltung&quot;\" border=\"false\":::\n\n1. Wählen Sie im **Bereich \"Bot-Verwaltung**\" die Option **\"+Neuer Bot**\" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-management-new-bot.png\" alt-text=\"Abbildung der neuen Bot-Option\" border=\"false\":::\n\n1. Geben Sie einen geeigneten Namen für Ihren Bot ein, und wählen Sie **\"Hinzufügen\"** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"Abbildung, die zeigt, wie Bot hinzugefügt wird\" border=\"false\":::\n\n    Der Bereich **\"Konfigurieren** \" wird im linken Bereich mit Details des neuen Bots angezeigt.\n\n1. Geben Sie die Weiterleitungs-URL über die `ngrok` Konsole ein, und wählen Sie **\"Speichern\"** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-endpoint.png\" alt-text=\"Abbildung, die zeigt, wie Bot-Endpunkt hinzugefügt wird\" border=\"false\":::\n\n1. Wählen Sie **\"Geheime Clientschlüssel** \" und dann \" **Geheimen Clientschlüssel zu Ihrem Bot hinzufügen** \" aus, um ein Kennwort für den Bot zu generieren.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-client-secrets.png\" alt-text=\"Abbildung des Abschnitts &quot;Geheimer Clientschlüssel&quot;\" border=\"false\":::\n\n    Das Entwicklerportal generiert ein Kennwort für den Bot.\n\n    Sie können das Kennwort mithilfe des :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: Symbols kopieren. Für dieses Lernprogramm müssen Sie es nicht kopieren.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-client-secret-generated.png\" alt-text=\"Abbildung des generierten geheimen Clientschlüssels\" border=\"false\":::\n\n1. Wählen Sie **OK** aus.\n\n1. Wählen Sie **< Bots** aus, um zum **Bereich \"Bot-Verwaltung** \" zurückzukehren.\n\n    Im **Bereich \"Bot-Verwaltung** \" wird der neue Bot mit einer App-ID angezeigt.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-added.png\" alt-text=\"Abbildung des neuen Bots mit App-ID\" border=\"false\":::\n\n1. Stellen Sie sicher, dass Sie die Bot-ID zusammen mit dem Kennwort aus dem Abschnitt \" **Geheimer Clientschlüssel\"** speichern.\n\n##### <a name=\"to-add-bot-to-app\"></a>So fügen Sie der App Bot hinzu\n\n1. Öffnen Sie den **Bereich \"App-Features\"** , und wählen Sie die **Bot-Karte** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"Abbildung der Bot-Karte\" border=\"false\":::\n\n    Der **Bot-Bereich** wird angezeigt.\n\n1. Wählen Sie Ihre Bot-App unter **\"Vorhandenen Bot auswählen**\" und dann \" **Speichern\"** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-bot-app.png\" alt-text=\"Abbildung der Auswahl einer vorhandenen Bot-App\" border=\"false\":::\n\n    Der neue Bot wird Ihrer App mit einer eigenen App-ID hinzugefügt.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-new-bot-added.png\" alt-text=\"Abbildung des neuen Bots, der der App hinzugefügt wurde\" border=\"false\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>So konfigurieren Sie den Botbereich\n\n1. Wählen Sie das :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: Symbol auf der neuen **Bot-Karte** und **dann \"Bearbeiten\"** aus.\n\n1. Navigieren Sie durch den **Botbereich** , um den Abschnitt **\"Befehle\"** anzuzeigen, und wählen Sie **+Befehl hinzufügen** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"Abbildung des Befehlsabschnitts\" border=\"false\":::\n\n1. Geben Sie einen geeigneten Namen und eine entsprechende Beschreibung für den **Befehl** ein.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"Abbildung des Hinzufügens von Befehlsdetails\" border=\"false\":::\n\n1. Wählen Sie alle drei Bereiche für den Befehl aus, und wählen Sie **\"Hinzufügen\"** aus.\n    - **Privat**\n    - **Team**\n    - **Gruppenchat**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"Abbildung des Speicherns von Befehlsdetails\" border=\"false\":::\n\n    Der neue Befehl wird dem Abschnitt **\"Befehle\"** des **Bot-Bereichs** hinzugefügt.\n\n1. Klicken Sie auf **Speichern**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"Abbildung der zu speichernden Befehlsdetails\" border=\"false\":::\n\n    Die Befehlsdetails werden gespeichert.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"Abbildung der gespeicherten Befehlsdetails\" border=\"false\":::\n\n1. Öffnen Sie **den Bereich \"App-Features** \", und wählen Sie \" **Persönliche App-Karte** \" aus, um die Registerkartendetails Ihrer App anzuzeigen.\n\n    Sie sehen, dass Ihrer App eine Registerkarte für Ihren neuen Chat-Bot hinzugefügt wird.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-chat-tab-configured.png\" alt-text=\"Abbildung der konfigurierten Chatregisterkarte\" border=\"false\":::\n\n#### <a name=\"configure-message-extension\"></a>Konfigurieren der Nachrichtenerweiterung\n\nMitHilfe von Messaging-Erweiterungen können Benutzer Informationen von Ihrem Dienst anfordern und diese Informationen veröffentlichen. Die Informationen werden in Form von Karten in die Kanalunterhaltung gepostet. Messaging-Erweiterungen werden am unteren Rand des Felds zum Verfassen angezeigt.\n\nSo fügen Sie eine neue Nachrichtenerweiterung hinzu:\n\n1. Wählen Sie das :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: Symbol auf der **Nachrichtenerweiterungskarte** im **Bereich \"App-Features** \" und dann **\"Löschen\"** aus.\n\n1. Wählen Sie im Bereich \"**App-Features**\" die **Option \"Nachrichtenerweiterung**\" aus.\n\n1. Wählen Sie den Namen Ihrer Bot-App aus der Dropdownliste **\"Vorhandenen Bot auswählen** \" im **Bereich \"Nachrichtenerweiterung** \" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"Abbildung des Bereichs &quot;Nachrichtenerweiterung&quot; zum Auswählen eines Bots\" border=\"false\":::\n\n1. Klicken Sie auf **Speichern**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-msgext-bot.png\" alt-text=\"Abbildung des Bereichs &quot;Nachrichtenerweiterung&quot;\" border=\"false\":::\n\n    Die Nachrichtenerweiterung wird gespeichert, und der Abschnitt **\"Befehle\"** wird im Bereich \" **Nachrichtenerweiterung** \" angezeigt.\n\n1. Wählen Sie **aus, und fügen Sie einen Befehl hinzu** , um den Bereich zu definieren, den Ihre Nachrichtenerweiterungs-App ausführen kann.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"Abbildung des Befehlsabschnitts\" border=\"false\":::\n\n    Das Dialogfeld \" **Befehl hinzufügen** \".\n\n1. Stellen Sie sicher, dass **die Suche** als Typ des Befehls ausgewählt ist, den Sie im Dialogfeld \" **Befehl hinzufügen\"** hinzufügen möchten.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"Abbildung des Dialogfelds &quot;Befehl hinzufügen&quot;\" border=\"false\":::\n\n1. Geben Sie geeignete Informationen für die folgenden Details ein:\n    - Befehls-ID\n    - Befehlstitel\n    - Befehlsbeschreibung\n\n1. Navigieren Sie durch das Dialogfeld, um die restlichen Details anzuzeigen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"Abbildung der verbleibenden Details im Dialogfeld &quot;Befehl hinzufügen&quot;\" border=\"false\":::\n\n1. Stellen Sie sicher **, dass \"Als Standard festlegen\"** ausgewählt ist.\n1. Wählen Sie die folgenden Kontexte für den Befehl \"Nachrichtenerweiterung\" aus:\n    - Befehlsfeld\n    - Feld \"Verfassen\"\n    - Message\n1. Geben Sie geeignete Informationen für die folgenden Details ein:\n    - Parametername\n    - Parametertitel\n    - Parameterbeschreibung\n\n1. Wählen Sie **\"Text** \" als Eingabetyp aus.\n1. Wählen Sie **Speichern** aus.\n1. Der Befehl \"Nachrichtenerweiterung\" wird gespeichert und in der Liste der Befehle im Bereich \" **Nachrichtenerweiterung** \" angezeigt.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"Bild mit hinzugefügten Befehlen\" border=\"false\":::\n\n1. Klicken Sie auf **Speichern**.\n1. Öffnen Sie **den Bereich \"App-Features** \".\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-capabilities-configured.png\" alt-text=\"Abbildung der für Hallo Welt App konfigurierten Funktionen\" border=\"false\":::\n\n    Alle drei Funktionen – persönliche Registerkarten-App, Bot und Nachrichtenerweiterung – werden für die Hallo Welt-App konfiguriert.\n"
- title: Anzeigen einer Vorschau und Testen Ihrer Node.js-App
  durationInMinutes: 1
  content: "\nNachdem Sie Ihre App importiert und die Funktionen im Entwicklerportal konfiguriert haben, können Sie eine Vorschau der Beispiel-App anzeigen und testen.\n\n## <a name=\"preview-your-app-in-teams\"></a>Vorschau ihrer App in Teams\n\nNachdem Sie die Funktionen Ihrer App konfiguriert haben, können Sie eine Vorschau ihrer App in Teams in der lokalen Umgebung anzeigen und testen.\n\nSo zeigen Sie eine Vorschau Ihrer App an:\n\n1. Wählen Sie **\"Vorschau\" in Teams** auf der Symbolleiste des Entwicklerportals aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"Abbildung der Schaltfläche &quot;Vorschau&quot;\" border=\"false\":::\n\n    Das Entwicklerportal informiert Sie darüber, dass Ihre App erfolgreich quergeladen wurde.\n\n1. Wählen Sie **\"Apps verwalten\" aus**.\n   Ihre App wird in den quergeladenen Apps aufgeführt. \n1. Suchen Sie Ihre App mithilfe des Suchfelds, und wählen Sie die drei Punkte in ihrer Zeile aus.\n1. Wählen Sie die Option **\"Ansicht\" aus** .\n    Die Seite **\"Hinzufügen\"** wird für Ihre App angezeigt.\n1. Wählen Sie **\"Hinzufügen\"** aus, um die App auf Teams zu laden.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"Abbildung des Dialogfelds &quot;App hinzufügen&quot;\" border=\"false\":::\n\n    Ihre App ist jetzt in Teams verfügbar. Sie können alle Registerkarten anzeigen und die Funktionen testen:\n\n    - Registerkarte \"Hallo\":\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"Abbildung der Registerkarte &quot;Hello&quot; in der lokalen Umgebung\" border=\"false\":::\n\n    - Chat-Bot:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"Abbildung des Bots der App in der lokalen Umgebung\" border=\"false\":::\n\n        Sie können eine Nachricht über den Chat senden.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"Abbildung des Chats in der lokalen Umgebung\" border=\"false\":::\n\n    - Nachrichtenerweiterung:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"Abbildung der Nachrichtenerweiterung in der lokalen Umgebung\" border=\"false\":::\n\n        Sie können eine Suche mithilfe der Nachrichtenerweiterung ausprobieren.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"Abbildung der Suche mithilfe der Nachrichtenerweiterung in der lokalen Umgebung\" border=\"false\":::\n\n    - Registerkarte \"Info\":\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"Abbildung der Registerkarte &quot;Info&quot; in der lokalen Umgebung\" border=\"false\":::"
