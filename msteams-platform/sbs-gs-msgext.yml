### YamlMime:Tutorial
title: Erstellen Ihrer ersten Nachrichtenerweiterungs-App mit JavaScript
metadata:
  title: Hello World mit JavaScript
  description: In diesem Lernprogramm erfahren Sie, wie Sie die Hello World-App mit JavaScript erstellen.
  audience: Developer
  level: Beginner
  ms.date: 05/26/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Übersicht über die ersten Schritte
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 23ed42fbc30c3e5c8afc772e3f006c2ed2536c81
  ms.sourcegitcommit: 4bf2565e3958e6f85854801680d43ee344092a87
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 05/26/2022
  ms.locfileid: "65887824"
items:
- durationInMinutes: 1
  content: "Starten Sie die Entwicklung von Microsoft Teams-Apps mit Ihrer ersten Teams-App. Sie erstellen eine Teams-App für die Nachrichtenerweiterung. \n\nIhre App verfügt über eine Funktion, die über eine eigene Benutzeroberfläche und UX verfügt:\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png\" alt-text=\"Diagramm, das diese App zeigt, verfügt über drei Features.\" border=\"false\":::\n\n\nIn diesem Lernprogramm lernen Sie Folgendes:\n\n- So richten Sie ein neues Projekt mit dem Teams-Toolkit ein.\n- So erstellen Sie eine Nachrichtenerweiterungs-App.\n- So stellen Sie Ihre App bereit.\n"
- title: Voraussetzungen
  durationInMinutes: 1
  content: "\nHier ist eine Liste der Tools, die Sie zum Erstellen und Bereitstellen Ihrer Apps benötigen.\n\n| &nbsp; | Installieren | Zum Benutzen... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Teams Toolkit](#install-the-teams-toolkit) | Eine Microsoft Visual Studio Code-Erweiterung, die ein Projektgerüst für Ihre App erstellt. Verwenden Sie version 4.0.0. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams für die Zusammenarbeit mit allen, mit denen Sie zusammenarbeiten, über Apps für Chats, Besprechungen und Anrufe – alles an einem Ort.|\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Back-End-JavaScript-Laufzeitumgebung. Verwenden Sie die neueste Version von v16 LTS.|\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (empfohlen) oder [Google Chrome](https://www.google.com/chrome/) | Ein Browser mit Entwicklertools. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | Build-Umgebungen für JavaScript, TypeScript oder SharePoint Framework (SPFx). Verwenden Sie Version 1.55 oder höher. |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure-Tools für Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) und [Azure CLI](/cli/azure/install-azure-cli) | Azure-Tools für den Zugriff auf gespeicherte Daten oder die Bereitstellung eines cloudbasierten Back-End für Ihre Teams-App in Azure. |\n| &nbsp; | [React Developer Tools für Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) OR [React Developer Tools für Microsoft&nbsp;Edge](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Eine DevTools-Browsererweiterung für die Open-Source-React-JavaScript-Bibliothek. |\n| &nbsp; | [Microsoft Graph-Tester](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer, ein browserbasiertes Tool, mit dem Sie eine Abfrage aus Microsoft Graph-Daten ausführen können. |\n| &nbsp; | [Entwicklerportal für Teams](https://dev.teams.microsoft.com/) | Webbasiertes Portal zum Konfigurieren, Verwalten und Verteilen Ihrer Teams-App, einschließlich an Ihre Organisation oder den Teams-Store. |\n\n\n> [!TIP]\n> Wenn Sie mit Microsoft Graph-Daten arbeiten, sollten Sie mehr über den Microsoft Graph-Explorer erfahren und ein Lesezeichen erstellen. Mit diesem browserbasierten Tool können Sie Microsoft Graph außerhalb einer App abfragen.\n\n\n## <a name=\"prepare-development-environment\"></a>Vorbereiten der Entwicklungsumgebung\n\nNachdem Sie die erforderlichen Tools installiert haben, richten Sie die Entwicklungsumgebung ein.\n\n\n### <a name=\"install-the-teams-toolkit\"></a>Installieren des Teams-Toolkits\n\nDas Teams-Toolkit vereinfacht den Entwicklungsprozess mit Tools zum Bereitstellen und Bereitstellen von Cloudressourcen für Ihre App, zum Veröffentlichen im Teams Store und vieles mehr. \n \nSie können das Toolkit mit Visual Studio Code oder CLI (Befehlszeilenschnittstelle) `TeamsFx`verwenden.\n\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Öffnen Sie Visual Studio Code, und wählen Sie die **Ansicht \"Erweiterungen** \" aus (**STRG+UMSCHALT+X** / **⌘⇧-X** oder **Ansicht > Erweiterungen**).\n1. Geben Sie im Suchfeld das **Teams-Toolkit** ein.\n1. Wählen Sie **\"Installieren\"** neben dem Teams-Toolkit aus.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/install-toolkit-vscodeversion.png\" alt-text=\"Abbildung der Installation der Teams Toolkit-Erweiterung.\" border=\"false\":::\n\n Das Microsoft Teams-Toolkit-Symbol wird nach der Installation in der Randleiste von Visual Studio Code angezeigt.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"Abbildung des Teams-Toolkit-Symbols in der Randleiste von Visual Studio Code.\" border=\"false\":::\n\nSie finden das Teams-Toolkit auch auf dem [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension).\n\n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cli)\n\nVerwenden Sie den Paket-Manager, um die `npm` TeamsFx CLI zu installieren:\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nJe nach Konfiguration müssen Sie die CLI möglicherweise installieren `sudo` :\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nDiese Bedingung ist auf Linux- und macOS-Systemen häufiger.\n\nStellen Sie sicher, dass Sie den globalen npm-Cache zu Path hinzufügen. Dieser Schritt wird normalerweise als Teil des Node.js-Installationsprogramms ausgeführt.  \n\nSie können die CLI mit dem `teamsfx` Befehl verwenden. Stellen Sie sicher, dass der Befehl funktioniert, indem Sie ausführen `teamsfx -h`.\n\n> [!CAUTION]\n> Bevor Sie TeamsFx in PowerShell-Terminals ausführen können, müssen Sie die \"remotesignierte\" Ausführungsrichtlinie für PowerShell aktivieren.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Einrichten Ihres Teams-Entwicklungsmandanten\n\nEin **Mandant** ist wie ein Raum oder ein Container für Ihre Organisation in Teams, in dem Sie chatten, Dateien freigeben und Besprechungen ausführen. In diesem Bereich laden Und testen Sie ihre App. Lassen Sie uns überprüfen, ob Sie bereit sind, mit dem Mandanten zu entwickeln.\n\n### <a name=\"check-for-sideloading-option\"></a>Option \"Auf Querladen überprüfen\"\n\nNachdem Sie die App erstellt haben, müssen Sie ihre App in Teams laden, ohne sie zu verteilen. Dieser Vorgang wird als Querladen bezeichnet. Melden Sie sich bei Ihrem Microsoft 365-Konto an, um diese Option anzuzeigen.\n\n > [!NOTE]\n > Das Querladen ist für die Vorschau und das Testen von Apps in der lokalen Teams-Umgebung erforderlich. Wenn sie nicht aktiviert ist, können Sie ihre App in Teams nicht lokal in der Vorschau anzeigen und testen.\n\nHaben Sie bereits einen Mandanten, und haben Sie den Administratorzugriff? Lassen Sie uns überprüfen, ob Sie es wirklich tun!\n\nÜberprüfen Sie, ob Sie Apps in Teams querladen können:\n\n 1. Wählen Sie im Teams-Client das **Store-Symbol** aus.\n 1. Wählen Sie **Verwalten Ihrer Apps** aus.\n 1. Wählen Sie **In App veröffentlichen** aus.\n 1. Suchen Sie nach der Option zum **Hochladen einer benutzerdefinierten App**. Wenn die Option angezeigt wird, ist das Querladen von Apps aktiviert.\n\n     :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"Abbildung zeigt die Option zum Hochladen einer benutzerdefinierten App in Teams.\":::\n\n     > [!NOTE]\n     > Wenn Sie nicht die Möglichkeit haben, eine benutzerdefinierte App hochzuladen, wenden Sie sich an Ihren Teams-Administrator.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Erstellen eines kostenlosen Teams-Entwicklermandanten (optional)\n\nWenn Sie nicht über ein Teams-Entwicklerkonto verfügen, können Sie es kostenlos erhalten. Nehmen Sie am Microsoft 365-Entwicklerprogramm teil!\n\n1. Gehen Sie zu [Microsoft 365-Entwicklerprogramm](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Wählen Sie **\"Jetzt teilnehmen\"** aus, und folgen Sie den Anweisungen auf dem Bildschirm.\n1. Wählen Sie auf der Willkommensseite \" **E5-Abonnement einrichten\" aus**.\n1. Einrichten Ihres Administratorkontos. NachDem Sie fertig sind, wird der folgende Bildschirm angezeigt.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Microsoft\" border=\"true\":::\n\n1. Melden Sie sich mit dem soeben eingerichteten Administratorkonto bei Teams an. Stellen Sie sicher, dass Sie in Teams über die Option \" **Benutzerdefinierte App hochladen** \" verfügen.\n\n## <a name=\"get-a-free-azure-account\"></a>Abrufen eines kostenlosen Azure-Kontos\n\nWenn Sie Ihre App hosten oder auf Ressourcen in Azure zugreifen möchten, müssen Sie über ein Azure-Abonnement verfügen. [Erstellen Sie ein kostenloses Konto](https://azure.microsoft.com/free/) , bevor Sie beginnen.\n\nJetzt haben Sie alle Tools und richten Ihr Konto ein. Als Nächstes richten wir Ihre Entwicklungsumgebung ein und beginnen mit der Erstellung! Wählen Sie zuerst die App aus, die Sie ausführen möchten.\n"
- title: Erstellen eines Projektarbeitsbereichs für Ihre Nachrichtenerweiterungs-App
  durationInMinutes: 1
  content: "\nSie haben Ihre Bot-App erstellt. Jetzt erstellen wir Ihre erste Nachrichtenerweiterungs-App.\n\nMithilfe der Nachrichtenerweiterungsfunktion können Sie mit einem Webdienst interagieren. Verwenden Sie den Verfassenbereich, das Befehlsfeld oder eine Nachricht im Teams-Client, um Aktionen in einem externen System zu suchen und zu initiieren.\n\n  :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-msgext/your-helloworld-app-msgext.png\" alt-text=\"Diagramm, das diese App zeigt, verfügt über drei Features. die Nachrichtenerweiterung hervorgehoben ist.\" border=\"false\":::\n\nEs gibt zwei Arten von **Teams-Nachrichtenerweiterungen**:\n\n- [Suchbefehle](../msteams-platform/messaging-extensions/how-to/search-commands/define-search-command.md): Sie können externe Systeme durchsuchen. Anschließend können Sie die Ergebnisse in form einer Karte in eine Nachricht einfügen.\n- [Aktionsbefehle](../msteams-platform/messaging-extensions/how-to/action-commands/define-action-command.md): Sie können Ihren Benutzern ein modales Popup zum Sammeln oder Anzeigen von Informationen präsentieren. Anschließend können Sie deren Interaktion verarbeiten und Informationen an Teams zurücksenden.\n\nErstellen wir nun eine Nachrichtenerweiterungs-App mit einem *Suchbefehl*. Verwenden Sie es, um nach externen Daten zu suchen und die Ergebnisse in eine Nachricht im Teams-Client einzufügen.\n\nDa Sie diese Apps bereits erstellt haben, können Sie ein neues Teams-Projekt zum Erstellen der Nachrichtenerweiterungs-App einrichten.\n\n> [!NOTE]\n> Nachrichtenerweiterungen basieren auf Bots, um ein Dialogfeld zwischen dem Benutzer und Ihrem Code bereitzustellen.\n\n\nIn diesem Lernprogramm lernen Sie Folgendes:\n\n1. [So richten Sie ein neues Nachrichtenerweiterungsprojekt mit dem Teams-Toolkit ein.](#create-your-message-extension-project-workspace)\n1. [Informationen zur Verzeichnisstruktur Ihres App-Projekts.](#take-a-tour-of-the-message-extension-app-source-code)\n\n## <a name=\"create-your-message-extension-project-workspace\"></a>Erstellen des Nachrichtenerweiterungsprojektarbeitsbereichs\n\nWenn die Voraussetzungen erfüllt sind, fangen wir an!\n\n> [!NOTE]\n> Die angezeigte Visual Studio Code-Benutzeroberfläche stammt von Mac. Es kann je nach Betriebssystem, Toolkit-Version und Umgebung unterschiedlich sein.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vsc)\n\n1. Öffnen Sie Visual Studio Code.\n1. Wählen Sie das Teams-Toolkit-Symbol :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: in der Visual Studio Code-Randleiste aus.\n\n1. Wählen Sie **Neue Microsoft Teams-App erstellen** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Ort des Links „Neues Projekt erstellen“ in der Randleiste des Microsoft Teams-Toolkits.\" border=\"false\":::\n\n1. Wählen Sie **\"Neue Teams-App** erstellen\" aus, um eine App mithilfe des Teams-Toolkits zu erstellen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"Starten des Assistenten für „Neues Projekt erstellen“\" border=\"false\":::\n\n1. Wählen Sie **\"Nachrichtenerweiterung**\", \" **Tabstopp\"** und dann **\"OK**\" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/select-capabilities-mex1.png\" alt-text=\"Screenshot, der zeigt, wie Ihrer neuen App Funktionen hinzufügt werden können.\" border=\"false\":::\n\n1. Wählen Sie **JavaScript** als Programmiersprache aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/select-language-mex.png\" alt-text=\"Screenshot, der zeigt, wie die Programmiersprache ausgewählt wird.\" border=\"false\":::\n\n1. Wählen Sie Ihren **Arbeitsbereichsordner** aus, indem Sie den erforderlichen Ordner auswählen.  \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-folder.png\" alt-text=\"Screenshot, der zeigt, wie sie den Ordner auswählen.\" border=\"false\":::\n\n1. Geben Sie einen geeigneten Namen für Ihre App ein. Stellen Sie sicher, dass der Name der App alphanumerisch ist. Drücken Sie die **EINGABETASTE**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/enter-name-mex.png\" alt-text=\"Screenshot, der zeigt, wie der App-Name eingegeben wird.\" border=\"false\":::\n\n    Das Teams-Toolkit erstellt die App in wenigen Sekunden.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/app-created-mex.png\" alt-text=\"Screenshot der erstellten App.\" border=\"false\":::\n\n    Nachdem Ihre App erstellt wurde, zeigt das Teams-Toolkit die folgende Meldung an: \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-project.png\" alt-text=\"Localdebug\":::\n\n    Sie können **\"Lokales Debuggen** \" auswählen, um eine Vorschau Ihres Projekts anzuzeigen. \n\n  <details>\n  <summary>Eine kurze Zusammenfassung des Erstellens einer Teams-App.</summary>\n  Schauen Sie sich diese kurze Zusammenfassung zum Erstellen einer Teams-App an.\n\n  ![Erstellen einer Teams-App](~/assets/videos/javascript-msg-ext-app1.gif)\n  </details>\n\n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cli)\n\nVerwenden Sie die `teamsfx`-CLI zum Erstellen Ihres ersten Projekts. Beginnen Sie in dem Ordner, in dem Sie den Projektordner erstellen möchten.\n\n``` bash\nteamsfx new\n```\n\nSie können die CLI verwenden, um eine neue Teams-App zu erstellen. Die CLI führt Sie durch eine Reihe von Fragen. Jede Frage enthält eine Anleitung zur Beantwortung.\n\nVerwenden Sie beispielsweise die Pfeiltasten, um eine Option auszuwählen. Nachdem Sie die Auswahl treffen, drücken **Sie die EINGABETASTE** , um sie zu bestätigen.\n\n\n1. Wählen Sie **Neue Microsoft Teams-App erstellen** aus.\n1. Wählen Sie **\"Nachrichtenerweiterung** \" aus, und deaktivieren Sie die **Tabulatortaste**.\n1. Wählen Sie **JavaScript** als Programmiersprache aus.\n1. Wählen **Sie die EINGABETASTE** aus, um den Standardarbeitsbereichsordner auszuwählen.\n1. Geben Sie einen passenden Namen für Ihre App ein, wie z. B. `HelloMsgExtn`.  Der Name der App darf nur aus alphanumerischen Zeichen bestehen.\n\n  Nachdem alle Fragen beantwortet wurden, wird Ihr Projekt erstellt.\n\n---\n\n## <a name=\"take-a-tour-of-the-message-extension-app-source-code\"></a>Machen Sie eine Tour durch den Quellcode der Nachrichtenerweiterungs-App\n\nEine Nachrichtenerweiterung verwendet das Bot-Framework. Sie verwenden es, um über eine Unterhaltung mit Ihrem Dienst zu interagieren. Nachdem das Gerüst erstellt wurde, zeigen Sie die Projektverzeichnisse und Dateien im Explorer-Bereich von Visual Studio Code an.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-msgext/hw-folder-structure-mex12.png\" alt-text=\"ordner msg\" border=\"true\":::\n\n| Ordnername | Inhalt |\n| --- | --- |\n| `.fx/configs` | Konfigurationsdateien, die Benutzer für die Teams-App anpassen können. |\n| `.fx/configs/config.<envName>.json` | Konfigurationsdatei für jede Umgebung. |\n| `.fx/configs/azure.parameters.<envName>.json` | Parameterdatei für die Azure BICEP-Bereitstellung für jede Umgebung. |\n| `.fx/configs/projectSettings.json` | Globale Projekteinstellungen, die für alle Umgebungen gelten. |\n| `.fx/states` | Bereitstellungsausgabe, die vom Toolkit generiert wird.  Das Toolkit erstellt diesen Ordner, nachdem Sie Ressourcen für Ihre App bereitgestellt haben. |\n| `.fx/states/state.<envName>.json` | Bereitstellen einer Ausgabedatei für jede Umgebung. |\n| `.fx/states/<env>.userdata` | Vertrauliche Benutzerdaten für die Bereitstellungsausgabe für jede Umgebung. |\n| `bot` |  Code für den Bot, der zur Laufzeit benötigt wird. |\n| `bot/messageExtensionBot.js` | Haupteinstiegspunkt für die Nachrichtenerweiterungs-App. |\n| `templates/appPackage` | App-Manifestvorlagendateien und die App-Symbole, color.png und outline.png. |\n| `templates/appPackage/manifest.template.json` | App-Manifest zum Ausführen der App in der lokalen und Remoteumgebung.  |\n| `templates/azure` | BICEP-Vorlagendateien |\n\n> [!Tip]\n> Machen Sie sich mit Bots und Nachrichtenerweiterungen außerhalb von Teams vertraut, bevor Sie Ihre App in Teams integrieren.\n"
- title: Erstellen und Ausführen Ihrer ersten Nachrichtenerweiterungs-App
  durationInMinutes: 1
  content: "\nNachdem Sie Ihren Projektarbeitsbereich mit dem Teams-Toolkit eingerichtet haben, erstellen Sie Ihr Projekt. Sie müssen sich bei Ihrem Microsoft 365-Konto anmelden.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Anmelden bei Ihrem Microsoft 365-Konto\n\nVerwenden Sie dieses Konto, um sich bei Teams anzumelden. Wenn Sie einen Mandanten für ein Microsoft 365-Entwicklerprogramm verwenden, ist das Administratorkonto, das Sie während der Registrierung eingerichtet haben, Ihr Microsoft 365-Konto.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vcode)\n\n1. Öffnen Sie Visual Studio Code.\n1. Wählen Sie das Microsoft Teams-Toolkit-Symbol  :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: in der Randleiste aus.\n1. Wählen Sie **\"Bei M365 anmelden**\" aus.\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können.\n\n1. Melden Sie sich bei Ihrem Microsoft 365-Konto an.\n1. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden, und kehren Sie zu Visual Studio Code zurück.\n1. Kehren Sie in Visual Studio Code zum Teams-Toolkit zurück.\n\n    Im Abschnitt **KONTEN** der Randleiste wird der Name Ihres Microsoft 365-Kontos angezeigt. Das Teams-Toolkit zeigt **das Querladen aktiviert** an, wenn das Querladen für Ihr Microsoft 365-Konto aktiviert ist.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/m365-sideloading-enabled-msg.png\" alt-text=\"Screenshot, der zeigt, wo Sie sich bei Microsoft 365 und Azure anmelden.\" border=\"false\":::\n\n    Jetzt können Sie die App erstellen und lokal ausführen!\n\n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cline)\n\n1. Melden Sie sich mit der TeamsFx CLI bei Microsoft 365 an:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden.\n\n2. Melden Sie sich mit der TeamsFx CLI bei Azure an:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden.\n\n    Die Kontoanmeldungen werden zwischen Visual Studio Code und der TeamsFx CLI gemeinsam verwendet.\n\n    Nachdem die Entwicklungsumgebung konfiguriert ist, können Sie Ihre erste Teams-App erstellen, erstellen und bereitstellen.\n\n---\n\n## <a name=\"build-and-run-your-app-in-the-local-environment\"></a>Erstellen und Ausführen Ihrer App in der lokalen Umgebung\n\nMit einer Nachrichtenerweiterung können Sie mit einem Webdienst interagieren. Es nutzt das Messaging-Feature und die sichere Kommunikation eines Bots. Die Nachrichtenerweiterungs-App wird einem Webdienst hinzugefügt, der als Bot registriert ist. \n\n### <a name=\"build-and-run-your-app-locally\"></a>Erstellen und ausführen Ihrer App lokal\n\n1. Wählen Sie **F5** in Visual Studio Code aus, um Ihre Anwendung im Debugmodus auszuführen.\n    <!-- markdownlint-disable MD033 -->\n    <details>\n    <summary>Erfahren Sie, was geschieht, wenn Sie Ihre App lokal im Debugger ausführen.</summary>\n\n    Wenn Sie **F5** auswählen, wird das Teams-Toolkit wie folgt verwendet:\n\n    1. Überprüft alle folgenden Voraussetzungen:\n      - Sie sind mit einem Microsoft 365-Konto angemeldet.\n      - Das Querladen ist für Ihr Microsoft 365-Konto aktiviert.\n      - Unterstützte Node.js Version installiert ist.\n      - NPM-Pakete für die Bot-App werden installiert.\n      - Ngrok ist installiert.\n      - Für die Bot-App erforderlicher Port ist verfügbar.\n\n      > [!NOTE]\n      > Wenn das Teams-Toolkit eine bestimmte Voraussetzung nicht überprüfen kann, werden Sie aufgefordert, dies zu überprüfen.\n\n    2. Startet Ngrok, um einen HTTP-Tunnel zu erstellen.\n    3. Registriert die App in Azure AD und konfiguriert die App.\n    4. Registriert die Bot-App im Bot Framework und konfiguriert die App.\n    5. Registriert die App im Teams-Entwicklerportal und konfiguriert die App.\n    6. Startet die lokal gehostete Nachrichtenerweiterungs-App.\n    7. Startet Teams in einem Webbrowser und lädt die Teams-App quer.\n    \n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/f5-build-and-run-mex.png\" alt-text=\"Screenshot, der zeigt, wann die F5-Taste zum Debuggen gedrückt wird.\":::\n\n    > [!NOTE]\n    > Wenn Sie die App zum ersten Mal ausführen, werden alle Abhängigkeiten heruntergeladen, und die App wird erstellt. Nach Abschluss des Builds wird ein Browserfenster geöffnet. Dieser Vorgang kann 3-5 Minuten dauern.\n\n    Teams führen Ihre App in einem Webbrowser aus.\n    \n1. Melden Sie sich mit Ihrem Microsoft 365-Konto an, wenn Sie dazu aufgefordert werden.\n1. Wählen Sie **\"Hinzufügen\"** aus, um die App zu Ihrem Konto hinzuzufügen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/add-mex-app-local-debug.png\" alt-text=\"Screenshot der Meldung zum Hinzufügen der App\" border=\"false\":::\n\n    Das Toolkit zeigt eine Meldung an, die angibt, dass die App zu Teams hinzugefügt wurde.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-added-local-debug.png\" alt-text=\"Screenshot zeigt die Meldung, dass Sie die App jetzt oder später testen können\" border=\"true\":::\n\n    - Wenn Sie \" **Herunterladen**\" auswählen, können Sie die App später aus der Liste der quergeladenen Apps ausprobieren.\n    - Wenn Sie **\"Testen**\" auswählen, lädt Teams Ihre App.\n\n1. Wählen Sie **\"Testen\" aus**.\n\n    Die Nachrichtenerweiterungs-App wird in einer Chat-Bot-App geladen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2//first-msgext/app-added-mex-local-debug.png\" alt-text=\"Screenshot der quergeladenen App in Teams\" border=\"false\":::\n\n    Da Nachrichtenerweiterungs-Apps auf Bots angewiesen sind, um die Kommunikation zwischen dem Benutzer und dem Webdienst zu ermöglichen, wird Ihre App in ein Chatfeature eines Bots geladen.\n\n    - Wenn Sie eine Bot-App erstellt haben, bevor Sie die Nachrichtenerweiterungs-App erstellt haben, können Sie sehen, dass sie in derselben Bot-App geladen wird, die Sie erstellt haben. Vorherige Chatnachrichten sind sichtbar.\n    - Wenn Sie zuerst eine Nachrichtenerweiterung erstellt haben, wird Ihre App in jedem Chat geladen, der in Teams geöffnet ist.\n\n### <a name=\"test-your-app\"></a>Testen eigener Apps\n\nBeim ersten Laden ihrer App ist die Nachrichtenerweiterungs-App für Sie geöffnet, um sie zu testen. Mit dieser Beispiel-App können Sie npm-Open Source-Pakete aus der Softwareregistrierung durchsuchen.\n\n#### <a name=\"to-run-a-search-query\"></a>So führen Sie eine Suchabfrage aus\n\n1. Geben wir eine Suchzeichenfolge in das Suchfeld ein, z. B. \"cli\". Sie erhalten eine Liste der übereinstimmenden Elemente:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2//first-msgext/mex-search-string.png\" alt-text=\"Screenshot, der zeigt, wie die App für die Suche verwendet wird\" border=\"true\":::\n\n1. Wählen Sie eines aus den Suchergebnissen aus. Es wird im Verfassenbereich angezeigt, sodass Sie das Ergebnis an den Kanal senden können.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-search-result.png\" alt-text=\"Screenshot des Suchergebnisses\" border=\"false\":::\n\n1. Wählen Sie die Anweisungen **zum Senden aus** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-search-sent.png\" alt-text=\"Screenshot des Suchergebnisses, das im Chat gesendet wurde\" border=\"false\":::\n\n    Jetzt haben Sie gelernt, wie Sie eine einfache Nachrichtenerweiterungs-App erstellen und ausführen!         \n\n## <a name=\"optional-scenarios\"></a>Optionale Szenarien\n\nSie haben das Suchfeature einer einfachen Nachrichtenerweiterungs-App getestet. Jetzt können Sie einige andere Funktionen dieser App ausprobieren. Dies sind optionale Szenarien in dieser App.\n<br>\n<br>\n<details>\n<summary>So erstellen Sie eine Karte</summary>\n\n1. Wählen Sie **\"Karte erstellen\" aus**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/app-added-mex-local-debug.png\" alt-text=\"Screenshot, der zeigt, wie eine Karte erstellt wird\" border=\"false\":::\n\n1. Geben Sie die Kartendetails wie dargestellt ein, und wählen Sie **\"Absenden**\" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-card-details.png\" alt-text=\"Screenshot, der zeigt, wie Sie Kartendetails hinzufügen\" border=\"true\":::\n\n    Ihre Kartendetails werden im Verfassenbereich angezeigt.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-card-added.png\" alt-text=\"Screenshot, der zeigt, wie Sie Kartendetails hinzufügen\" border=\"true\":::\n\n1. Wählen Sie im Bereich \"Verfassen\" das Symbol \" **Senden** \" aus.\n\n    Die App sendet die Karte im Bot-Chat.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-card-sent.png\" alt-text=\"Screenshot der gesendeten Karte\" border=\"false\":::\n</details>\n<br>\n<details>\n<summary>So öffnen Sie Ihre App aus dem Verfassenbereich</summary>\n\nWählen Sie eine der folgenden Möglichkeiten zum Öffnen Ihrer App aus.\n\n* **Verwenden von `@mention`:**\n\n1. Geben Sie die Eingabetaste `@your-app-name` in den Befehlsbereich Ihrer App ein.\n    \n    Die App öffnet das Suchfeld, und Sie können damit eine Abfrage ausführen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mention-mex-app.png\" alt-text=\"Screenshot, der zeigt, wie die Nachrichtenerweiterungs-App @mention wird\" border=\"false\":::\n\n1. Geben Sie eine Suchzeichenfolge ein, und wählen Sie eine aus dem Suchergebnis aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/command-box-search.png\" alt-text=\"Screenshot, der zeigt, wie eine Suche mithilfe der Nachrichtenerweiterungs-App ausgeführt wird\" border=\"false\":::\n\n    Sie wird im Befehlsbereich als Karte angezeigt.\n\n1. Kopieren Sie die Karte, um sie im Verfassenbereich einzufügen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/command-search-card.png\" alt-text=\"Screenshot, der das Suchergebnis auf einer Karte zeigt\" border=\"false\":::\n    \n1. Senden Sie die Karte mithilfe des Verfassenbereichs.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/command-search-card-sent.png\" alt-text=\"Screenshot, der das Suchergebnis in einem Chat zeigt\" border=\"false\":::\n\n* **Verwenden des Symbols mit drei Punkten:**\n\n1. Starten Sie die Nachrichtenerweiterung aus drei Punkten am unteren Rand des Erstellungsbereichs.\n1. Wählen Sie Ihre Nachrichtenerweiterungs-App aus.       \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/three-dot-mex.png\" alt-text=\"Screenshot, der zeigt, wie die Beispiel-Nachrichtenerweiterungs-App geöffnet wird\" border=\"false\":::\n\n    Die Nachrichtenerweiterungs-App wird mit den Optionen zum Ausführen einer Suche und zum Erstellen adaptiver Karten geladen.\n</details>\n<br>\n<details>\n<summary>Ausführen der App über quergeladene Apps</summary>\n\nSie können eine quergeladene Teams-App aus der Liste der quergeladenen Apps öffnen. \n\n1. Wählen Sie das **Store-Symbol** in der Teams-Randleiste aus.\n1. Wählen Sie die **Option \"Apps verwalten\"** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/sideloaded-apps.png\" alt-text=\"Screenshot, der quergeladene Apps zeigt\" border=\"false\":::\n\n1. Wählen Sie das Symbol \"Drei Punkte\" für Ihre App und dann \" **Details anzeigen\"** aus. Sie können auch den Link zur App kopieren und zum Öffnen der App verwenden.\n1. Wählen Sie **\"Öffnen** \" aus, um die App zu laden, und wählen Sie dann \" **Testen\" aus**. \n    \n    Die App wird in Teams geladen.\n\n</details>\n<br>\n<br>\n<!-- markdownlint-disable MD033 -->\n<details>\n<summary>Erfahren Sie, wie Sie Probleme beheben, wenn Ihre App nicht lokal ausgeführt wird.</summary>\n\nUm Ihre App in Teams ausführen zu können, benötigen Sie ein Microsoft 365-Entwicklungskonto, das das Querladen von Apps ermöglicht. Weitere Informationen zum Querladen finden Sie im Abschnitt \"Voraussetzungen\".\n</details>\n"
- title: Bereitstellen Ihrer ersten Teams-App
  durationInMinutes: 1
  content: "\nSie haben gelernt, Teams-Apps mit Nachrichtenerweiterungsfunktionen zu erstellen, zu erstellen und auszuführen. Der letzte Schritt besteht darin, Ihre App in Azure bereitzustellen.\n\nStellen wir nun die erste App mit Registerkartenfunktion in Azure mithilfe des Teams-Toolkits bereit.\n\n## <a name=\"sign-in-to-your-azure-account\"></a>Anmelden bei Ihrem Azure-Konto\n\nVerwenden Sie dieses Konto, um auf das Microsoft Azure-Portal zuzugreifen und neue Cloudressourcen zur Unterstützung Ihrer App bereitzustellen.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Öffnen Sie Visual Studio Code.\n1. Öffnen Sie den Projektordner, in dem Sie die Registerkarten-App erstellt haben.\n1. Wählen Sie das Microsoft Teams-Toolkit-Symbol  :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: in der Randleiste aus.\n1. Wählen Sie **\"Bei Azure anmelden\"** aus.\n\n    > [!TIP]\n    > Wenn Sie die Azure-Kontoerweiterung installiert haben und dasselbe Konto verwenden, können Sie diesen Schritt überspringen. Verwenden Sie dasselbe Konto wie in anderen Erweiterungen.\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können.\n1. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an.\n1. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden, und kehren Sie zu Visual Studio Code zurück.\n\n    Im Abschnitt **KONTEN** der Randleiste werden die beiden Konten separat angezeigt. Außerdem wird die Anzahl der verwendbaren Azure-Abonnements aufgelistet, die Ihnen zur Verfügung stehen. Stellen Sie sicher, dass Mindestens ein verwendbares Azure-Abonnement verfügbar ist. Wenn nicht, melden Sie sich ab, und verwenden Sie ein anderes Konto.\n\n    Jetzt können Sie Ihre App in Azure bereitstellen!\n\n    Herzlichen Glückwunsch, Sie haben eine Teams-App erstellt! \n    Jetzt fahren wir fort und erfahren, wie Sie eine der Apps mithilfe des Teams-Toolkits in Azure bereitstellen.\n\n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cline)\n\n1. Melden Sie sich mit der TeamsFx CLI bei Microsoft 365 an:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden.\n\n2. Melden Sie sich mit der TeamsFx CLI bei Azure an:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden.\n\n    Die Kontoanmeldungen werden zwischen Visual Studio Code und der TeamsFx CLI gemeinsam verwendet.\n\n    Herzlichen Glückwunsch, Sie haben eine Teams-App erstellt! \n    Jetzt fahren wir fort und erfahren, wie Sie eine der Apps mithilfe des Teams-Toolkits in Azure bereitstellen.\n\n---\n\n  [!INCLUDE [Provision and Deploy your app on Azure](~/includes/get-started/azure-provisioning-instructions.md)]\n\n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>Erfahren Sie, was geschieht, wenn Sie Ihre App in Azure bereitstellen</summary>\n\n  Vor der Bereitstellung wurde die Anwendung lokal ausgeführt:\n\n  * Das Back-End unter Verwendung von **Azure Functions Core Tools** ausgeführt.\n  * Der HTTP-Endpunkt der Anwendung, an dem Microsoft Teams die Anwendung lädt, wird lokal ausgeführt.\n\n  Die Bereitstellung erfolgt in zwei Schritten. Sie stellen die Ressourcen in einem aktiven Azure-Abonnement bereit und stellen dann den Back-End- und Frontend-Code für die Anwendung in Azure bereit oder laden sie hoch.\n\n  * Das Back-End verwendet, sofern konfiguriert, verschiedene Azure-Dienste, einschließlich Azure App Service und Azure Storage.\n  * Die Front-End-Anwendung wird in einem Azure Storage-Konto bereitgestellt, das für statisches Webhosting konfiguriert ist.\n\n  </details>\n"
- title: Herzlichen Glückwunsch!
  durationInMinutes: 1
  content: "\nSie haben es geschafft!\n\nSie haben eine Nachrichtenerweiterungs-App erstellt.\n\nNachdem Sie nun gelernt haben, eine einfache App zu erstellen, können Sie mit dem Erstellen komplexerer Apps beginnen. Versuchen Sie zunächst, Ihren vorhandenen Apps Funktionen hinzuzufügen.\n\nSo fügen Sie Ihrer vorhandenen App Funktionen hinzu:\n\n1. Wählen Sie im Abschnitt **\"Entwicklung**\" der Randleiste des Teams-Toolkits die **Option \"Feature hinzufügen\"** aus.\n\n1. Wählen Sie die Funktion aus, die Sie Ihrer App hinzufügen möchten.\n\nDas ist alles. Das Teams-Toolkit fügt der Verzeichnisstruktur Ihrer App das Gerüst für die neue Funktion hinzu. Befolgen Sie die Verfahren zum Erstellen und Bereitstellen der App, und Ihre App verfügt über mehrere Funktionen. \n\nSie haben das Lernprogramm zum Erstellen der Messaging-Erweiterungs-App mit JavaScript abgeschlossen."
