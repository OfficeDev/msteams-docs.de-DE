### YamlMime:Tutorial
title: Teams-Bot mit einmaligem Anmelden
metadata:
  title: Teams-Bot mit SSO
  description: In diesem Lernprogramm erfahren Sie, wie Sie SSO in einem Bot für Teams einrichten.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/authentication/auth-aad-sso-bots.md
  nextTutorialTitle: Weitere Informationen zur Bot-Authentifizierung
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 1fb468c8b9cc3ce1a8f8d407ea957d579632847c
  ms.sourcegitcommit: e16b51a49756e0fe4eaf239898e28d3021f552da
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 06/04/2022
  ms.locfileid: "65887814"
items:
- durationInMinutes: 1
  content: "Teams-Bots sind Unterhaltungsbots, die sich wiederholende automatisierte Aufgaben ausführen, die von den Benutzern ausgeführt werden, z. B. kundendienst. Der Benutzer muss sich mehrmals mit den Anmeldeinformationen anmelden, um sich wiederholende Aufgaben ausführen zu können. Mit der SSO-Authentifizierungsmethode (Single Sign-On) in Azure Active Directory wird das Authentifizierungstoken automatisch aktualisiert, wodurch reduziert wird, wie oft Benutzer ihre Anmeldeinformationen eingeben müssen. \n\nEin Bot verhält sich je nach Unterhaltung, an der er beteiligt ist, unterschiedlich:\n\n* Bots in Kanal- und Gruppenchatunterhaltungen erfordern, dass der Benutzer den Bot @mention.\n* Für Bots in einer 1:1-Unterhaltung ist keine @Erwähnung erforderlich. Alle vom Benutzer gesendeten Nachrichten werden an den Bot weitergeleitet.\n\nDiese schrittweise Anleitung hilft Ihnen beim Erstellen eines Bots mit aktivierter SSO-Authentifizierung. Die folgende Ausgabe wird angezeigt:\n\n![Bei Bot angemeldetes Mobile](~/assets/images/bots/sbs-desktop-mobile.png)\n"
- title: Voraussetzungen
  durationInMinutes: 1
  content: "Stellen Sie sicher, dass Sie die folgenden Tools installieren und Ihre Entwicklungsumgebung einrichten:  \n\n* Aktives Microsoft Teams-Konto mit Profilbild\n\n  > [!TIP]\n  > Stellen Sie sicher, dass das Microsoft Teams-Konto kein Gastkonto ist.\n\n* [ngrok](https://ngrok.com/) oder eine entsprechende Tunnellösung\n\n  > [!NOTE]\n  > Melden Sie sich nach dem Herunterladen von ngrok an, und installieren Sie [authtoken](https://ngrok.com/download).\n\n* Visual Studio 2019 oder die neueste Version\n* [Microsoft 365-Entwicklerkonto](concepts/build-and-test/prepare-your-o365-tenant.md) oder Zugriff auf das Teams-Konto mit den entsprechenden Berechtigungen zum Installieren einer App\n"
- title: Einrichten eines Bots in Azure Bot Service
  durationInMinutes: 5
  content: "Um den Bot bei SSO zu authentifizieren, können Sie den Bot in Azure Bot Service einrichten. Registrieren Sie den Bot bei Azure Bot Service, wenn Sie ihn in Azure entwickeln und hosten. Führen Sie die folgenden Schritte durch:\n\n* Verwenden Sie ngrok, um einen Tunnel zu den Endpunkten Ihres Webservers zu erstellen.\n* Erstellen Sie eine Azure Bot-Ressource, um den Bot bei Azure Bot Service zu registrieren.\n* Erstellen Sie einen geheimen Clientschlüssel, der die SSO-Authentifizierung des Bots ermöglicht.\n* Fügen Sie den Microsoft Teams-Kanal hinzu, um den Bot in einem Teams-Kanal bereitzustellen.\n* Fügen Sie dem von Ihnen erstellten ngrok-Tunnel den Messaging-Endpunkt hinzu.\n\nVerwenden Sie ngrok, um einen Tunnel zu den öffentlich verfügbaren HTTPS-Endpunkten Ihres lokal ausgeführten Webservers zu erstellen. Führen Sie den folgenden Befehl in ngrok aus:\n\n```bash\nngrok http -host-header=rewrite 3978\n```\n\n**So erstellen Sie eine Azure Bot-Ressource**\n\n1. Wechseln Sie zum [Microsoft Azure-Portal](https://portal.azure.com/).\n1. Wählen Sie **Ressource erstellen** aus.\n1. Geben Sie im Suchfeld **Azure Bot** ein, und wählen Sie die EINGABETASTE aus.\n1. Wählen Sie **Azure Bot** aus.\n\n    ![Erstellen einer Azure-Bot-Karte](~/assets/images/bots/createazurebot.png)\n\n1. Wählen Sie **Erstellen** aus.\n1. Geben Sie den Namen des erforderlichen Bot-Handle in **das Bot-Handle ein**.\n1. Wählen Sie in der Dropdownliste **\"Abonnement** \" das Abonnement aus.\n1. Wählen Sie in der Dropdownliste der **Ressourcengruppe** die Ressourcengruppe aus.\n    \n    Um eine neue Ressource zu erstellen, wählen **Sie \"Neu erstellen**\", geben Sie den Ressourcennamen ein, wählen Sie **\"OK**\" aus, und wählen Sie den erforderlichen Speicherort aus der Dropdownliste \" **Speicherort der neuen Ressourcengruppe** \" aus.\n\n    > [!NOTE]\n    > Im Abschnitt \"Microsoft App-ID\" ist \" **Neue Microsoft App-ID erstellen** \" bereits ausgewählt. Sie können vorhandene **App-Registrierung verwenden**, **vorhandene App-ID** und **vorhandenes App-Kennwort** eingeben.\n\n1. Wählen Sie **Überprüfen + erstellen** aus.\n\n    <img src=\"~/assets/images/bots/Azurebotcreate.png\" alt=\"Create resource Azure bot\" width=\"700\"/>\n\n1. Wenn die Prüfung bestanden wurde, wählen Sie **Erstellen** aus.\n\n    Es dauert einige Augenblicke, bis Ihr Botdienst bereitgestellt wurde.\n\n1. Wählen Sie **Zu Ressource wechseln** aus. Der Bot und die zugehörigen Ressourcen werden in der Ressourcengruppe aufgeführt.\n\n    Jetzt wurde Ihr Azure-Bot erstellt.\n\n    ![Azure-Bot-Ressource erstellt](~/assets/images/bots/Azurebotresource.png)\n\n**So erstellen Sie den geheimen Clientschlüssel**\n\n1. Wählen Sie in **Einstellungen** die Option **Konfiguration** aus.\n\n   > [!TIP]\n   > Speichern Sie die **Microsoft App-ID** oder **Client-ID** zur zukünftigen Referenz.\n\n1. Wählen Sie unter **\"Bottyp**\" die Option \"**MultiTenant**\" aus.\n\n     ![Bot-Typ](~/assets/images/bots/bot-type.png)\n\n1. Wählen Sie neben **\"Microsoft-App-ID**\" die Option **\"Verwalten\"** aus.\n\n     ![Microsoft App-ID](~/assets/images/bots/MicrosoftAppID.png)\n\n1. Wählen Sie im Abschnitt \" **Geheime Clientschlüssel** \" die Option **\"Neuer geheimer Clientschlüssel**\" aus. Das Fenster **\"Geheimen Clientschlüssel hinzufügen** \" wird angezeigt.  \n\n1. Geben Sie **Beschreibung** ein, und wählen Sie **Hinzufügen** aus.\n\n    <img src=\"~/assets/images/bots/addclientsecret.png\" alt=\"Add client secret to app\" width=\"500\"/>\n\n1. Wählen Sie in der Spalte **Wert** **In Zwischenablage kopieren** aus, und speichern Sie die Clientgeheimnis-ID zur späteren Referenz.\n\n     ![Wert des geheimen Clientschlüssels](~/assets/images/bots/valueclientsecret.png)\n   \n**So fügen Sie den Microsoft Teams-Kanal hinzu**\n\n1. Wechseln Sie zu **Startseite**.\n\n    <img src=\"~/assets/images/bots/homepage.png\" alt=\"Home page\" width=\"600\"/>\n\n1. Öffnen Sie Ihren Bot, der im Abschnitt **Zuletzt verwendete Ressourcen** aufgeführt ist.\n1. Wählen Sie \"**Kanäle**\" im linken Bereich und dann **\"Teams**\" aus. <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.    \n      ![Öffnen von Teams über Kanäle](~/assets/images/bots/channel-teams.png)    \n      ![Wählen Sie Teams](~/assets/images/bots/select-teams.png)    \n1. Wählen Sie **Speichern** aus.\n1. Aktivieren Sie das Kontrollkästchen, um die Nutzungsbedingungen zu akzeptieren, und wählen Sie **Zustimmen** aus.</br>\n      ![Nutzungsbedingungen](~/assets/images/bots/select-terms-of-service.png)\n\n**So fügen Sie den Messaging-Endpunkt hinzu**\n\n1. Wählen Sie in **den Einstellungen** für den von Ihnen erstellten Azure-Bot **die Option \"Konfiguration**\" aus.\n1. Wechseln Sie zu ngrok.\n1. Kopieren Sie die HTTPS-URL (https to io) wie in der folgenden Abbildung dargestellt:\n\n    ![ngrok HTTPS-URL](~/assets/images/bots/ngrokURL.png)\n\n1. Verwenden Sie im **Messaging-Endpunkt** die https-URL, die von ngrok verfügbar ist, und fügen Sie am Ende der URL **\"/api/messages**\" hinzu.\n\n    <img src=\"~/assets/images/bots/messagingURL.png\" alt=\"Messaging endpoint\" width=\"600\"/>\n\n1. Wählen Sie **Anwenden** aus.\n\n    Sie haben erfolgreich einen Bot in Azure Bot Service eingerichtet, und jetzt müssen Sie eine Bot-Dienstverbindung einrichten.\n"
- title: Konfigurieren von SSO für Ihren Bot
  durationInMinutes: 5
  content: "Um sicherzustellen, dass der Bot-Dienst dem Benutzer die Anmeldung und den Zugriff auf den Bot ermöglicht, müssen Sie SSO für Ihren Bot konfigurieren. Führen Sie dazu die folgenden Schritte aus:\n\n* Fügen Sie der Azure-Botressource den Umleitungs-URI hinzu.\n* Machen Sie den API-Endpunkt verfügbar, um den Speicherort anzugeben, von dem aus auf die Ressourcen zugegriffen werden kann.\n* Autorisieren von Clientanwendungen.\n* Fügen Sie alle erforderlichen API-Berechtigungen für nachgeschaltete Aufrufe hinzu.\n* Aktivieren Sie die implizite Erteilung.\n* Manifest aktualisieren.\n* Einrichten der Bot-Dienstverbindung.\n\n**So fügen Sie der Azure-Botressource den Umleitungs-URI hinzu**\n\n1. Wählen Sie neben **\"Microsoft-App-ID**\" die Option **\"Verwalten\"** aus.</br>\n    ![Verwalten der App-ID](~/assets/images/bots/select-manage.png)\n1. Wählen Sie im linken Bereich Ihrer Botressource die Option **\"Authentifizierung**\" aus.\n1. Wählen Sie unter **Plattformkonfigurationen** die Option **Plattform hinzufügen** aus.\n1. Klicken Sie auf **Web**.\n\n1. Geben Sie **Umleitungs-URIs** ein, `https://token.botframework.com/.auth/web/redirect` und wählen Sie **\"Konfigurieren\" aus**.\n\n    <img src=\"~/assets/images/bots/redirectURI.png\" alt=\"Configure Redirect URI\" width=\"600\"/>\n\n    Der Umleitungs-URI wird der Azure-Botressource hinzugefügt.\n\n    ![Umleitungs-URI zur Botressource hinzugefügt](~/assets/images/bots/redirectURIadded.png)\n\n**So machen Sie DEN API-Endpunkt verfügbar**\n\n1. Wählen Sie im linken Bereich \" **API verfügbar machen**\" aus.\n1. Wählen Sie \"Für den Anwendungs-ID-URI **festlegen** \" aus.\n1. Verwenden Sie den angezeigten Anwendungs-ID-URI, und fügen Sie **api://botid-** am Anfang des URI an.\n\n    <img src=\"~/assets/images/bots/exposeAPI.png\" alt=\"Expose an API\" width=\"500\"/>\n\n1. Wählen Sie **Speichern** aus. Speichern Sie den **Anwendungs-ID-URI** zur zukünftigen Referenz.\n1. Wählen Sie **Bereich hinzufügen**.\n1. Geben Sie **im Bereichsnamen** **access_as_user** ein.\n1. Wechseln Sie in **\"Wer kann zustimmen?\"**, zu **\"Administratoren und Benutzer**\".\n1. Geben Sie die folgenden Werte in die Felder ein:\n\n    | Feld | Wert |\n    | ----- | ----- |\n    | Anzeigename der Administratorzustimmung | Teams können auf das Profil des Benutzers zugreifen. |\n    | Beschreibung der Administratorzustimmung | Ermöglicht Teams das Aufrufen der Web-APIs der App als aktueller Benutzer. |\n    | Anzeigename der Benutzerzustimmung | Teams kann auf Ihr Benutzerprofil zugreifen und Anforderungen in Ihrem Auftrag stellen |\n    | Beschreibung der Benutzer-Zustimmung | Aktivieren Sie Teams, um die APIs dieser App mit den gleichen Rechten wie Sie aufzurufen. |\n\n1. Stellen Sie sicher, **Zustand** auf **Aktiviert** festgelegt ist.\n\n    <img src=\"~/assets/images/bots/addscope.png\" alt=\"Add a scope to app\" width=\"500\"/>\n\n1. Klicken Sie auf **Bereich hinzufügen**. Der Bereichsname stimmt automatisch mit dem Anwendungs-ID-URI überein, wobei **/access_as_user** am Ende hinzugefügt wurde.\n\n    ![API verfügbar gemacht und Bereich hinzugefügt](~/assets/images/bots/ExposeAPIandaddscope.png)\n\n**So autorisieren Sie Clientanwendungen**\n\nFügen Sie die folgenden IDs als **autorisierte Clientanwendungen** hinzu, und aktivieren Sie außerdem das Kontrollkästchen für **autorisierte Bereiche**:      \n* 1fec8e78-bce4-4aaf-ab1b-5451cc387264 (mobile Teams- oder Desktopanwendung)            \n* 5e3ce6c0-2b1f-4285-8d4b-75ee78787346 (Teams-Webanwendung)</br>     \n    ![Hinzufügen einer Clientanwendung zur App](~/assets/images/bots/addclientapplication1.png)        \n\n**So fügen Sie die erforderlichen API-Berechtigungen für nachgeschaltete Aufrufe hinzu**\n\n1. Wählen Sie im linken Bereich **API-Berechtigungen** aus.\n1. Fügen Sie alle benutzerdelegierten Berechtigungen hinzu, die Ihre App für nachgeschaltete APIs benötigt, z. B. User.Read.</br>\n    ![API-Benutzerberechtigungen](~/assets/images/bots/APIpermissions.png)\n\n**So aktivieren Sie die implizite Gewährung**\n\n1. Wählen Sie im linken Bereich **Authentifizierung** aus.\n1. Aktivieren Sie die Kontrollkästchen **Zugriffstokens** und **ID-Tokens**.</br>\n    ![Authentifizierungskontrollkästchen für die App](~/assets/images/bots/authenticationcheckboxes.png)\n1. Wählen Sie **Speichern** aus, um die Änderungen zu speichern.\n\n**So aktualisieren Sie das Manifest**\n\n1. Wählen Sie im linken Bereich **Manifest** aus.\n1. Stellen Sie sicher, dass das Konfigurationselement auf **\"accessTokenAcceptedVersion\": 2** eingestellt ist. Wenn nicht, ändern Sie den Wert in **\"2** \", und wählen Sie **\"Speichern\"** aus. (Wenn Sie Ihren Bot bereits in Teams testen, müssen Sie diese App abmelden und Teams abmelden. Melden Sie sich dann erneut an, um diese Änderung anzuzeigen).</br>\n    ![Aktualisieren des Manifests](~/assets/images/bots/update-manifest.png)</br>\n\n**So richten Sie die Bot-Dienstverbindung ein**\n\n1. Wechseln Sie zur **Seite \"Konfiguration\"** > **, um OAuth-Verbindungseinstellungen hinzuzufügen**.\n1. Wählen Sie **OAuth-Verbindungseinstellungen hinzufügen** aus.\n1. Geben Sie unter **\"Neue Verbindungseinstellung**\" die folgenden Details ein:\n\n    | Feld | Wert oder Beschreibung |\n    | ----- | ----- |\n    | Name | Geben Sie den Namen für die neue Verbindungseinstellung ein. Sie können den Namen in den Einstellungen Ihres Botdienstcodes verwenden. |\n    | Service Provider | Wählen Sie **Azure Active Directory V2** aus. |\n    | Client-ID | Zuvor als **Ihre Microsoft App-ID** gespeichert. |\n    | Geheimer Clientschlüssel | Zuvor als **Wert** der geheimen Client-ID gespeichert. |\n    | Exchange-Token-URL | Verwenden Sie die zuvor abgerufene **Anwendungs-ID-URL** beim Verfügbarmachen des API-Endpunkts. |\n    | Mandanten-ID | Geben Sie **\"Common\" ein**. |\n    | Scopes | Geben Sie **User.Read** ein, und fügen Sie alle erforderlichen **Bereiche** hinzu, während Sie Berechtigungen für nachgeschaltete APIs angeben. |\n\n    <img src=\"~/assets/images/bots/botserviceconnection.png\" alt=\"Bot Service connection\" width=\"300\"/>\n\n1. Wählen Sie **Speichern**.\n1. Wählen Sie **Anwenden** aus.\n"
- title: Konfigurieren und Ausführen ihres Bot-Beispiels
  durationInMinutes: 1
  content: >
    Konfigurieren Sie das Bot-Beispiel, um zu verstehen, wie Unterhaltungsbots in Microsoft Teams authentifiziert werden.


    **So konfigurieren und führen Sie Ihr Bot-Beispiel aus**


    1. Öffnen Sie Visual Studio.

    1. Wählen Sie in Visual Studio **"Repository klonen" aus**.

    1. Geben Sie `https://github.com/OfficeDev/Microsoft-Teams-Samples.git`am **Speicherort des Repositorys** ein. Stellen Sie sicher, dass Sie den **Pfad** notieren, in dem das Repository geklont wird.

    1. Wählen Sie "**Projekt/Lösung** **öffnen** > **"** >  aus.

    1. Wechseln Sie zu **Microsoft-Teams-Beispielen > Beispielen > Ordner "bot-conversation-sso-quickstart > csharp_dotnetcore** ".

    1. Öffnen Sie die Datei **BotSSOCSharp.csproj** .

    1. Öffnen Sie die Datei **"appsettings.json** ".

    1. Aktualisieren Sie die **appsettings.json-Konfiguration** für den Bot, um die `MicrosoftAppId` `MicrosoftAppPassword`und zu verwenden. Verwenden Sie den OAuth-Verbindungsnamen als **Verbindungsnamen**.

        > [!NOTE]
        > Sie können die `MicrosoftAppId` Seite "Konfiguration" des Bots abrufen. Dies `MicrosoftAppPassword` ist der Wert für die geheime Client-ID, die Sie zuvor gespeichert haben.

        ![Appsettings json](~/assets/images/bots/appsettingsjson.png)

    1. Wählen Sie die **F5-Taste** aus, um dieses Projekt auszuführen.

        <br>

        <details>

        <summary><b>Problembehandlung</b></summary>

        Wenn der **Paketfehler "Nicht gefunden** " angezeigt wird, führen Sie die folgenden Schritte aus:

        1.  Wechseln Sie zu **Den Einstellungen** >  des **NuGet-Paket-Manager-Paket-Managers** > .
        1.  Wählen Sie im daraufhin angezeigten Fenster **"Optionen**" **die Option "NuGet-Paket-Manager-Paketquellen** > "**aus**.
        1.  Klicken Sie auf **Hinzufügen**.
        1.  Geben Sie **in "Name**" `nuget.org` und " **Source" die** Eingabetaste ein `https://api.nuget.org/v3/index.json`.
        1.  Wählen Sie **"Aktualisieren"** und **"OK**" aus.
        1.  Erstellen Sie Ihr Projekt neu.
        <br>

        </details>
- title: Konfigurieren und Ausführen der Teams-App
  durationInMinutes: 2
  content: >
    Die umfassendste Methode zum Testen Ihres Bots besteht darin, ein App-Paket zu erstellen und es in Microsoft Teams hochzuladen. Diese Methode ist die einzige Möglichkeit, die vollständige Funktionalität ihres Bots in allen Bereichen zu testen. Sie können die Teams-App konfigurieren und ausführen, indem Sie die `manifest.zip` Datei hochladen.


    **So führen Sie die Teams-App durch Hochladen der manifest.zip-Datei aus**


    1. Wechseln Sie in Visual Studio zum `appPackage/` Ordner.

    1. die Datei `manifest.json` öffnen.

    1. Suchen Sie in der `manifest.json` Datei **{TODO: MicrosoftAppId}** , und ersetzen Sie es durch Ihre Microsoft App-ID.

    1. Wechseln Sie in Windows Explorer zu den **Microsoft-Teams-Beispielen > Beispielen > Ordner "bot-conversation-sso-quickstart" > csharp_dotnetcore > appPackage** .

    1. Zippen Sie den Inhalt des `appPackage/` zu erstellenden `manifest.zip`Ordners.

    1. Wechseln Sie zu Teams.

    1. Wählen Sie zum Hochladen `manifest.zip`**"Store" > "Apps verwalten" aus, > laden Sie eine benutzerdefinierte App hoch**, und öffnen `manifest.zip`Sie sie.

    1. Wählen Sie **"Hinzufügen"** aus, um den Unterhaltungs-Bot zu Ihrem Chat hinzuzufügen.

        Sie können mit diesem Bot interagieren, indem Sie eine Nachricht senden. Der Bot tauscht ein SSO-Token aus und ruft die Graph-API in Ihrem Auftrag auf und gibt die Ergebnisse zurück. Sie bleiben angemeldet, es sei denn, Sie senden eine Nachricht zum **Abmelden**.

    1. Senden Sie eine Nachricht an den Bot. Der Unterhaltungs-Bot fragt zum ersten Mal nach Berechtigungen.

        ![Berechtigungen für Bots](~/assets/images/bots/sbsdesktop-mobile-consent-request.png)

    1. Wählen Sie **"Weiter"** aus, um die Berechtigungen zu akzeptieren.


    1. Wählen Sie **"Für** **angeforderte Berechtigungen** akzeptieren" aus.

        ![Bei Bot angemeldetes Mobile](~/assets/images/bots/sbs-desktop-mobile.png)
- title: Vollständige Herausforderung
  durationInMinutes: 1
  content: >
    Sind Sie auf so etwas gekommen?


    ![Bei Bot angemeldetes Mobile](~/assets/images/bots/sbs-desktop-mobile.png)
- content: Sie haben das Lernprogramm für die ersten Schritte mit SSO in einem Bot für Microsoft Teams mit dem Bot Framework abgeschlossen.
