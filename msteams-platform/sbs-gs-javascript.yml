### YamlMime:Tutorial
title: Erstellen Ihrer ersten Registerkarten-App mit JavaScript
metadata:
  title: Hallo Welt mit JavaScript
  description: Mit diesem Lernmodul erfahren Sie, wie Sie Hallo Welt-App mit JavaScript erstellen, indem Sie ein neues Projekt mit dem Teams-Toolkit einrichten, eine Registerkarten-App erstellen und bereitstellen.
  audience: Developer
  level: Beginner
  ms.date: 05/26/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Übersicht über die ersten Schritte
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 8360175051833a3ba78c8bbb26f5789ab3aba6ee
  ms.sourcegitcommit: 707dad21dc3cf79ac831afe05096c0341bcf2fee
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 10/20/2022
  ms.locfileid: "68653749"
items:
- durationInMinutes: 1
  content: "Starten Sie die Entwicklung von Microsoft Teams-Apps mit Ihrer ersten Teams-App. Sie erstellen eine Registerkarten-App mit Teams. \n\nIhre App verfügt über eine Funktion, die über eine eigene Benutzeroberfläche und UX verfügt:\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png\" alt-text=\"Diagramm, das diese App zeigt, verfügt über drei Features.\":::\n\n> [!NOTE]\n> In diesem Lernprogramm erstellen Sie eine Registerkarten-App mit JavaScript.\n\nIn diesem Lernprogramm lernen Sie Folgendes:\n\n- So richten Sie ein neues Projekt mit dem Teams-Toolkit ein.\n- So erstellen Sie eine Registerkarten-App.\n- Die Struktur der App:\n    - Der Registerkartenbereich mit JavaScript mit React.\n    - Die restlichen Features mit Node.js.\n- So stellen Sie Ihre App bereit.\n"
- title: Voraussetzungen
  durationInMinutes: 1
  content: "\nHier ist eine Liste der Tools, die Sie zum Erstellen und Bereitstellen Ihrer Apps benötigen.\n\n| &nbsp; | Installieren | Zum Benutzen... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | Build-Umgebungen für JavaScript, TypeScript oder SharePoint Framework (SPFx). Verwenden Sie Version 1.55 oder höher. |\n| &nbsp; | [Teams Toolkit](#tabpanel_1_vscode) | Eine Microsoft Visual Studio Code-Erweiterung, die ein Projektgerüst für Ihre App erstellt. Verwenden Sie version 4.0.0. |\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Back-End-JavaScript-Laufzeitumgebung. Verwenden Sie die neueste Version von v16 LTS.|\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams für die Zusammenarbeit mit allen, mit denen Sie zusammenarbeiten, über Apps für Chats, Besprechungen und Anrufe – alles an einem Ort.|\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (empfohlen) oder [Google Chrome](https://www.google.com/chrome/) | Ein Browser mit Entwicklertools. |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure-Tools für Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) und [Azure CLI](/cli/azure/install-azure-cli) | Azure-Tools für den Zugriff auf gespeicherte Daten oder die Bereitstellung eines cloudbasierten Back-End für Ihre Teams-App in Azure. |\n| &nbsp; | [React Developer Tools für Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) ODER [React Developer Tools für Microsoft&nbsp;Edge](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Eine Browser-DevTools-Erweiterung für die Open Source-React JavaScript-Bibliothek. |\n| &nbsp; | [Microsoft Graph-Tester](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer, ein browserbasiertes Tool, mit dem Sie eine Abfrage aus Microsoft Graph-Daten ausführen können. |\n| &nbsp; | [Entwicklerportal für Teams](https://dev.teams.microsoft.com/) | Webbasiertes Portal zum Konfigurieren, Verwalten und Verteilen Ihrer Teams-App, einschließlich an Ihre Organisation oder den Teams-Store. |\n\n\n> [!TIP]\n> Wenn Sie mit Microsoft Graph-Daten arbeiten, sollten Sie mehr über den Microsoft Graph-Explorer erfahren und ein Lesezeichen erstellen. Mit diesem browserbasierten Tool können Sie Microsoft Graph außerhalb einer App abfragen.\n\n\n## <a name=\"prepare-development-environment\"></a>Vorbereiten der Entwicklungsumgebung\n\nNachdem Sie die erforderlichen Tools installiert haben, richten Sie die Entwicklungsumgebung ein.\n\n\n### <a name=\"install-the-teams-toolkit\"></a>Installieren des Teams-Toolkits\n\nDas Teams-Toolkit vereinfacht den Entwicklungsprozess mit Tools zum Bereitstellen und Bereitstellen von Cloudressourcen für Ihre App, zum Veröffentlichen im Teams Store und vieles mehr. \n \nSie können das Toolkit mit Visual Studio Code oder CLI (Befehlszeilenschnittstelle) `TeamsFx`verwenden.\n\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Öffnen Sie Visual Studio Code, und wählen Sie die **Ansicht \"Erweiterungen** \" aus (**STRG+UMSCHALT+X** / **⌘⇧-X** oder **Ansicht > Erweiterungen**).\n1. Geben Sie im Suchfeld das **Teams-Toolkit** ein.\n1. Wählen Sie **\"Installieren\"** neben dem Teams-Toolkit aus.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/install-toolkit-vscodeversion.png\" alt-text=\"Abbildung der Installation der Teams Toolkit-Erweiterung.\":::\n\n Das Microsoft Teams-Toolkit-Symbol wird nach der Installation in der Randleiste von Visual Studio Code angezeigt.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"Abbildung des Teams-Toolkit-Symbols in der Randleiste von Visual Studio Code.\":::\n\nSie finden das Teams-Toolkit auch auf dem [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension).\n\n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cli)\n\nVerwenden Sie den Paket-Manager, um die `npm` TeamsFx CLI zu installieren:\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nJe nach Konfiguration müssen Sie die CLI möglicherweise installieren `sudo` :\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nDiese Bedingung ist auf Linux- und macOS-Systemen häufiger.\n\nStellen Sie sicher, dass Sie den globalen npm-Cache zu Path hinzufügen. Dieser Schritt wird normalerweise als Teil des Node.js-Installationsprogramms ausgeführt.  \n\nSie können die CLI mit dem `teamsfx` Befehl verwenden. Stellen Sie sicher, dass der Befehl funktioniert, indem Sie ausführen `teamsfx -h`.\n\n> [!CAUTION]\n> Bevor Sie TeamsFx in PowerShell-Terminals ausführen können, müssen Sie die \"remotesignierte\" Ausführungsrichtlinie für PowerShell aktivieren.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Einrichten Ihres Teams-Entwicklungsmandanten\n\nEin **Mandant** ist wie ein Raum oder ein Container für Ihre Organisation in Teams, in dem Sie chatten, Dateien freigeben und Besprechungen ausführen. In diesem Bereich laden Und testen Sie ihre App. Lassen Sie uns überprüfen, ob Sie bereit sind, mit dem Mandanten zu entwickeln.\n\n### <a name=\"check-for-sideloading-option\"></a>Option \"Auf Querladen überprüfen\"\n\nNachdem Sie die App erstellt haben, müssen Sie ihre App in Teams laden, ohne sie zu verteilen. Dieser Vorgang wird als Querladen bezeichnet. Melden Sie sich bei Ihrem Microsoft 365-Konto an, um diese Option anzuzeigen.\n\n > [!NOTE]\n > Das Querladen ist für die Vorschau und das Testen von Apps in der lokalen Teams-Umgebung erforderlich. Wenn sie nicht aktiviert ist, können Sie ihre App in Teams nicht lokal in der Vorschau anzeigen und testen.\n\nHaben Sie bereits einen Mandanten, und haben Sie den Administratorzugriff? Lassen Sie uns überprüfen, ob Sie es wirklich tun!\n\nÜberprüfen Sie, ob Sie Apps in Teams querladen können:\n\n 1. Wählen Sie im Teams-Client das **Store-Symbol** aus.\n 1. Wählen Sie **Verwalten Ihrer Apps** aus.\n 1. Wählen Sie **In App veröffentlichen** aus.\n 1. Suchen Sie nach der Option zum **Hochladen einer benutzerdefinierten App**. Wenn die Option angezeigt wird, ist das Querladen von Apps aktiviert.\n\n     :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-custom-new1.png\" alt-text=\"Bot-Startseite\":::\n\n     > [!NOTE]\n     > Wenn Sie nicht die Möglichkeit haben, eine benutzerdefinierte App hochzuladen, wenden Sie sich an Ihren Teams-Administrator.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Erstellen eines kostenlosen Teams-Entwicklermandanten (optional)\n\nWenn Sie nicht über ein Teams-Entwicklerkonto verfügen, können Sie es kostenlos erhalten. Nehmen Sie am Microsoft 365-Entwicklerprogramm teil!\n\n1. Gehen Sie zu [Microsoft 365-Entwicklerprogramm](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Wählen Sie **\"Jetzt teilnehmen\"** aus, und folgen Sie den Anweisungen auf dem Bildschirm.\n1. Wählen Sie auf der Willkommensseite \" **E5-Abonnement einrichten\" aus**.\n1. Einrichten Ihres Administratorkontos. NachDem Sie fertig sind, wird der folgende Bildschirm angezeigt.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Microsoft\":::\n\n1. Melden Sie sich mit dem soeben eingerichteten Administratorkonto bei Teams an. Stellen Sie sicher, dass Sie in Teams über die Option \" **Benutzerdefinierte App hochladen** \" verfügen.\n\n## <a name=\"get-a-free-azure-account\"></a>Abrufen eines kostenlosen Azure-Kontos\n\nWenn Sie Ihre App hosten oder auf Ressourcen in Azure zugreifen möchten, müssen Sie über ein Azure-Abonnement verfügen. [Erstellen Sie ein kostenloses Konto](https://azure.microsoft.com/free/) , bevor Sie beginnen.\n\nJetzt haben Sie alle Tools und richten Ihr Konto ein. Als Nächstes richten wir Ihre Entwicklungsumgebung ein und beginnen mit der Erstellung! Wählen Sie zuerst die App aus, die Sie ausführen möchten.\n"
- title: Erstellen eines Projektarbeitsbereichs für Ihre Registerkarten-App
  durationInMinutes: 1
  content: "\nStarten Sie die Entwicklung von Microsoft Teams-Apps, indem Sie Ihre erste App erstellen. Diese App verwendet die Registerkartenfunktion.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/your-helloworld-app-tab.png\" alt-text=\"Diagramm, das diese App zeigt, verfügt über drei Features. Die Registerkarte ist hervorgehoben.\":::\n\nAuf dieser Seite erfahren Sie Folgendes:\n1. [Einrichten eines neuen Registerkartenprojekts mit dem Teams-Toolkit](#create-your-tab-project-workspace)\n1. [Informationen zur Verzeichnisstruktur Ihrer App](#take-a-tour-of-the-tab-app-source-code)\n\n## <a name=\"create-your-tab-project-workspace\"></a>Erstellen des Registerkartenprojektarbeitsbereichs\n\nWenn die Voraussetzungen erfüllt sind, fangen wir an!\n\n> [!NOTE]\n> Die angezeigte Visual Studio Code-Benutzeroberfläche stammt von Mac. Dies kann je nach Betriebssystem, Teams Toolkit-Version und Umgebung unterschiedlich sein.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vsc)\n\n1. Öffnen Sie Visual Studio Code.\n1. Wählen Sie das Teams-Toolkit-Symbol :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: in der Visual Studio Code-Randleiste aus.\n\n1. Wählen Sie **Neue Microsoft Teams-App erstellen** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Ort des Links „Neues Projekt erstellen“ in der Randleiste des Microsoft Teams-Toolkits.\":::\n\n1. Wählen Sie **\"Neue Teams-App erstellen** \" aus, um eine App mithilfe des Teams-Toolkits zu erstellen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-new-app1.png\" alt-text=\"Der Assistent beginnt mit dem Erstellen eines neuen Projekts\":::\n\n1. Stellen Sie sicher, dass **tab** als die Funktion ausgewählt ist, die Sie in Ihrer App erstellen möchten. Wählen Sie **OK** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-capabilities-tabapp.png\" alt-text=\"App-Funktion auswählen\":::\n\n1. Wählen Sie **JavaScript** als Programmiersprache aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-language-tab.png\" alt-text=\"Screenshot, der zeigt, wie die Programmiersprache ausgewählt wird.\":::\n\n1. Wählen Sie **\"Standardordner** \" aus, um den Projektstammordner am Standardspeicherort zu speichern.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-default-location.png\" alt-text=\"Standardspeicherort auswählen\":::\n\n   Sie können den Standardspeicherort auch mit den folgenden Schritten ändern:\n\n      1. Wählen Sie **\"Durchsuchen\"** aus.\n\n         :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-browse.png\" alt-text=\"Wählen Sie &quot;Nach Speicher suchen&quot; aus.\":::\n\n      1. Wählen Sie den Speicherort für den Projektarbeitsbereich aus.\n\n      1. Wählen Sie den **Ordner auswählen** aus.\n\n          :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-folder.png\" alt-text=\"select-folder\":::\n\n1. Geben Sie `helloworld` als Anwendungsnamen ein. Stellen Sie sicher, dass Sie nur alphanumerische Zeichen verwenden. Drücken Sie die **EINGABETASTE**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/enter-name-tab1.png\" alt-text=\"Screenshot, der zeigt, wo der App-Name eingegeben werden soll.\":::\n\n1. Standardmäßig wird das Projekt innerhalb von 10 Sekunden in einem neuen Fenster geöffnet. Wenn Sie das Fenster im aktuellen Fenster öffnen möchten, wählen Sie **\"Im aktuellen Fenster öffnen**\" aus.    \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/new-window-notification.png\" alt-text=\"Benachrichtigung über das neue Fenster\":::\n\n    Die Teams-Registerkarten-App wird in wenigen Sekunden erstellt.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tap-app-created1.png\" alt-text=\"Screenshot der erstellten App.\":::\n\n    Nachdem Ihre App erstellt wurde, zeigt das Teams-Toolkit die folgende Meldung an:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-project.png\" alt-text=\"Projektvorschau.\":::\n    \n    Sie können **\"Lokales Debuggen** \" auswählen, um eine Vorschau Ihres Projekts anzuzeigen. \n    \n    <details>\n    <summary>Eine kurze Zusammenfassung des Erstellens einer Teams-App.</summary>\n     Schauen Sie sich diese kurze Zusammenfassung zum Erstellen einer Teams-App an.\n\n    ![Erstellen einer Teams-App](~/assets/videos/javascript-tab-app1.gif) </details>\n\n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cli)\n\nVerwenden Sie die `teamsfx`-CLI zum Erstellen Ihres ersten Projekts. Beginnen Sie in dem Ordner, in dem Sie den Projektordner erstellen möchten.\n\n``` bash\nteamsfx new\n```\nSie können die CLI verwenden, um eine neue Teams-App zu erstellen. Die CLI führt Sie durch eine Reihe von Fragen. Jede Frage enthält eine Anleitung zur Beantwortung.\n\nVerwenden Sie beispielsweise die Pfeiltasten, um eine Option auszuwählen. Nachdem Sie die Auswahl treffen, drücken **Sie die EINGABETASTE** , um sie zu bestätigen.\n\n1. Wählen Sie **Neue Microsoft Teams-App erstellen** aus.\n1. Wählen Sie die **Registerkartenfunktion** aus.\n1. Wählen Sie **Azure**-Frontend-Hosting aus.\n1. Wählen Sie keine Cloudressourcen aus.\n1. Wählen Sie **JavaScript** als Programmiersprache aus.\n1. Drücken Sie die **EINGABETASTE**, um den Standardordner des Arbeitsbereichs auszuwählen.\n1. Geben Sie `helloworld` als Namen für Ihre App ein. Der Name der App darf nur alphanumerische Zeichen enthalten.\n\n  Nachdem Sie alle Fragen beantwortet haben, wird Ihr Projekt erstellt.\n\n---\n\n## <a name=\"take-a-tour-of-the-tab-app-source-code\"></a>Machen Sie eine Tour durch den Quellcode der Registerkarten-App\n\nDas Teams-Toolkit stellt alle Komponenten zum Erstellen einer App bereit. Nachdem Sie das Projekt erstellt haben, können Sie die Projektordner und -dateien im **Explorer-Bereich** von Visual Studio Code anzeigen.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/folder-structure-tab-app.png\" alt-text=\"Registerkarte &quot;Struktur&quot;\":::\n\nObwohl Sie ein beliebiges Benutzeroberflächenframework auswählen können (oder keines verwenden), stellt dieser Beispielvorlagencode ein Gerüst mit React Komponenten bereit.\n\nNeben anderen Elementen in dieser Verzeichnisstruktur verwaltet das Toolkit Folgendes:\n\n| Ordnername | Inhalt |\n| --- | --- |\n| `.fx/configs` | Konfigurationsdateien, die Benutzer für die Teams-App anpassen können. |\n| - `.fx/configs/config.<envName>.json` | Konfigurationsdatei für jede Umgebung. |\n| - `.fx/configs/azure.parameters.<envName>.json` | Parameterdatei für die Azure BICEP-Bereitstellung für jede Umgebung. |\n| - `.fx/configs/projectSettings.json` | Globale Projekteinstellungen, die für alle Umgebungen gelten. |\n| - `.fx/states` | Bereitstellungsausgabe, die vom Teams-Toolkit generiert wird.  Das Toolkit erstellt diesen Ordner, nachdem Sie Ressourcen für Ihre App bereitgestellt haben. |\n| - `.fx/states/state.<envName>.json` | Bereitstellen einer Ausgabedatei für jede Umgebung. |\n| - `.fx/states/<env>.userdata` | Vertrauliche Benutzerdaten für die Bereitstellungsausgabe für jede Umgebung. |\n| `tabs` | Code für die zur Laufzeit erforderliche Registerkartenfunktion, z. B. datenschutzhinweis, Nutzungsbedingungen und Konfigurationsregisterkarten. |\n| - `tabs/src/index.jsx` | Einstiegspunkt für die Front-End-App, in der die Hauptkomponente der App gerendert wird `ReactDOM.render()` |\n| - `tabs/src/components/App.jsx` | Code für die Behandlung von URL-Routing in der App. Es ruft das [Microsoft Teams JavaScript-Client-SDK](../msteams-platform/tabs/how-to/using-teams-client-sdk.md) auf, um die Kommunikation zwischen Ihrer App und Microsoft Teams herzustellen. |\n| - `tabs/src/components/Tab.jsx` | Code zum Implementieren der Benutzeroberfläche Ihrer App. |\n| - `tabs/src/components/TabConfig.jsx` | Code zum Implementieren der Benutzeroberfläche, die Ihre App konfiguriert. |\n| `templates/appPackage` | App-Manifestvorlagendateien und die App-Symbole: color.png und outline.png. |\n| - `templates/appPackage/manifest.template.json` | App-Manifest zum Ausführen der App in einer lokalen oder Remoteumgebung.  |\n| `templates/azure` | BICEP-Vorlagendateien |\n\nWenn Sie die Cloudfunktionalität hinzufügen, fügt das Teams-Toolkit dem Projekt die erforderlichen Ordner hinzu. Der `api` Ordner enthält den Code für alle Azure Functions, die Sie schreiben.\n"
- title: Erstellen und Ausführen Ihrer ersten Registerkarten-App
  durationInMinutes: 1
  content: "\nNachdem Sie Ihren Projektarbeitsbereich mit dem Teams-Toolkit eingerichtet haben, erstellen Sie Ihr Registerkartenprojekt. Sie müssen sich bei Ihrem Microsoft 365-Konto anmelden.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Anmelden bei Ihrem Microsoft 365-Konto\n\nVerwenden Sie Ihr Microsoft 365-Konto, um sich bei Teams anzumelden. Wenn Sie einen Mandanten für ein Microsoft 365-Entwicklerprogramm verwenden, ist das Administratorkonto, das Sie während der Registrierung eingerichtet haben, Ihr Microsoft 365-Konto.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Öffnen Sie Visual Studio Code.\n1. Wählen Sie das Microsoft Teams-Toolkit-Symbol :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: in der Randleiste aus.\n1. Wählen Sie **\"Bei M365 anmelden**\" aus.\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können.\n\n1. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Microsoft 365-Konto an.\n1. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden, und kehren Sie zu Visual Studio Code zurück.\n1. Kehren Sie in Visual Studio Code zum Teams-Toolkit zurück.\n\n    Im Abschnitt **KONTEN** der Randleiste wird der Name Ihres Microsoft 365-Kontos angezeigt. Das Teams-Toolkit zeigt **das Querladen aktiviert** an, wenn das Querladen für Ihr Microsoft 365-Konto aktiviert ist.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/m365-sideloading-enabled.png\" alt-text=\"Screenshot, der zeigt, wo Sie sich bei Microsoft 365 und Azure anmelden.\":::\n\n    Jetzt können Sie die App erstellen und in der lokalen Umgebung ausführen!\n\n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cline)\n\n1. Melden Sie sich mit der TeamsFx CLI bei Microsoft 365 an:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden.\n\n2. Melden Sie sich mit der TeamsFx CLI bei Azure an:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden.\n\n    Die Kontoanmeldungen werden zwischen Visual Studio Code und der TeamsFx CLI gemeinsam verwendet.\n\n    Nachdem die Entwicklungsumgebung konfiguriert ist, können Sie Ihre erste Teams-App erstellen, erstellen und bereitstellen.\n\n---\n\n## <a name=\"build-and-run-your-app-locally-in-visual-studio-code\"></a>Erstellen und lokales Ausführen der App in Visual Studio Code\n\nSo erstellen Sie Ihre App und führen sie lokal aus:\n\n1. Wählen Sie in Visual Studio Code **F5** aus, um die Anwendung im Debugmodus auszuführen.\n\n    <!-- markdownlint-disable MD033 -->\n\n    <details>\n    <summary>Erfahren Sie, was geschieht, wenn Sie Ihre App lokal im Debugger ausführen.</summary>\n\n    Falls Sie sich fragen, wenn Sie die **F5-Taste** drücken, teams-Toolkit:\n\n    1. Sucht nach den folgenden Voraussetzungen:\n      * Sie sind mit einem Microsoft 365-Konto angemeldet.\n      * Das Querladen ist für Ihr Microsoft 365-Konto aktiviert.\n      * Unterstützte Node.js Version installiert ist.\n      * Das Entwicklungszertifikat für localhost ist installiert.           \n      * Port ist für die Registerkarten-App verfügbar.\n\n      > [!NOTE]\n      > Wenn das Teams-Toolkit eine bestimmte Voraussetzung nicht überprüfen kann, werden Sie aufgefordert, dies zu überprüfen.\n\n    2. Installieren Sie NPM-Pakete.\n    3. Registriert die App bei Azure AD und konfiguriert die App.\n    4. Registriert die App im Teams-Entwicklerportal und konfiguriert die App.\n    5. Startet die Registerkarten-App.\n    6. Startet Teams in einem Webbrowser und lädt die Registerkarten-App quer.\n\n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/f5-build-and-run.png\" alt-text=\"Screenshot, der zeigt, wenn F5 gedrückt wird.\":::\n\n    > [!NOTE]\n    > Wenn Sie die App zum ersten Mal ausführen, werden alle Abhängigkeiten heruntergeladen, und die App wird erstellt. Nach Abschluss des Builds wird ein Browserfenster geöffnet. Dieser Vorgang kann 3-5 Minuten dauern.\n\n    Das Toolkit fordert Sie bei Bedarf auf, ein lokales Zertifikat zu installieren. Mit diesem Zertifikat kann Microsoft Teams Ihre Anwendung von `https://localhost` laden.\n\n1. Wählen Sie **Ja** aus, wenn das folgende Dialogfenster angezeigt wird:\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/hw-warning.png\" alt-text=\"microsoft\":::\n\n    Oder wählen Sie abhängig vom Betriebssystem **\"Weiter**\" aus:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/ssl-prompt-mac.png\" alt-text=\"Screenshot der Aufforderung zum Installieren eines SSL-Zertifikats, damit Teams Ihre Anwendung von localhost auf dem Mac laden kann.\":::\n\n    Der Teams-Webclient wird in einem Browserfenster geöffnet.\n\n1. Melden Sie sich mit Ihrem Microsoft 365-Konto an, wenn Sie dazu aufgefordert werden.\n\n1. Wählen Sie **\"Hinzufügen\"** aus, wenn Sie aufgefordert werden, die App auf Ihrem lokalen Computer in Teams querzuladen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/add-tab-app-local-debug.png\" alt-text=\"Hinzufügen der App zu Teams\":::\n\n1. Herzlichen Glückwunsch, Ihre erste App wird in Teams ausgeführt!\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tab-app-localdebug.png\" alt-text=\"Screenshot der fertiggestellten App\":::\n\n   Sie können das SSO-Feature hinzufügen, um die Benutzerdetails abzurufen. Sie können normale Debugaktivitäten ausführen, z. B. Haltepunkte festlegen, als wäre es eine andere Webanwendung. Die App unterstützt Hot Reloading. Wenn Sie eine Datei innerhalb des Projekts ändern, wird die Seite neu geladen.\n\n  <!-- markdownlint-disable MD033 -->\n\n  <details>\n  <summary>Erfahren Sie, wie Sie Probleme beheben, wenn Ihre App nicht lokal ausgeführt wird.</summary>\n\n  Um Ihre App erfolgreich in Teams auszuführen, stellen Sie sicher, dass Sie das Querladen in Ihrem Teams-Konto aktiviert haben. Weitere Informationen zum Querladen finden Sie im Abschnitt \"Voraussetzungen\".\n\n  </details>\n\n \n"
- title: Bereitstellen Ihrer ersten Teams-App
  durationInMinutes: 1
  content: "\nSie haben gelernt, die Teams-App mit tab-App zu erstellen, zu erstellen und auszuführen. Der letzte Schritt besteht darin, Ihre App in Azure bereitzustellen.\n\nStellen wir nun die erste App mit Registerkartenfunktion in Azure mithilfe des Teams-Toolkits bereit.\n\n## <a name=\"sign-in-to-your-azure-account\"></a>Anmelden bei Ihrem Azure-Konto\n\nVerwenden Sie dieses Konto, um auf die Microsoft Azure-Portal zuzugreifen und neue Cloudressourcen zur Unterstützung Ihrer App bereitzustellen.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Öffnen Sie Visual Studio Code.\n1. Öffnen Sie den Projektordner, in dem Sie die Registerkarten-App erstellt haben.\n1. Wählen Sie das Microsoft Teams-Toolkit-Symbol  :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: in der Randleiste aus.\n1. Wählen Sie **\"Bei Azure anmelden\"** aus.\n\n    > [!TIP]\n    > Wenn Sie die Azure-Kontoerweiterung installiert haben und dasselbe Konto verwenden, können Sie diesen Schritt überspringen. Verwenden Sie dasselbe Konto wie in anderen Erweiterungen.\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können.\n1. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an.\n1. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden, und kehren Sie zu Visual Studio Code zurück.\n\n    Im Abschnitt **KONTEN** der Randleiste werden die beiden Konten separat angezeigt. Außerdem wird die Anzahl der verwendbaren Azure-Abonnements aufgelistet, die Ihnen zur Verfügung stehen. Stellen Sie sicher, dass Mindestens ein verwendbares Azure-Abonnement verfügbar ist. Wenn nicht, melden Sie sich ab, und verwenden Sie ein anderes Konto.\n\n    Jetzt können Sie Ihre App in Azure bereitstellen!\n\n    Herzlichen Glückwunsch, Sie haben eine Teams-App erstellt! \n    Jetzt fahren wir fort und erfahren, wie Sie eine der Apps mithilfe des Teams-Toolkits in Azure bereitstellen.\n\n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cline)\n\n1. Melden Sie sich mit der TeamsFx CLI bei Microsoft 365 an:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden.\n\n2. Melden Sie sich mit der TeamsFx CLI bei Azure an:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden.\n\n    Die Kontoanmeldungen werden zwischen Visual Studio Code und der TeamsFx CLI gemeinsam verwendet.\n\n    Herzlichen Glückwunsch, Sie haben eine Teams-App erstellt! \n    Jetzt fahren wir fort und erfahren, wie Sie eine der Apps mithilfe des Teams-Toolkits in Azure bereitstellen.\n\n---\n\n  [!INCLUDE [Provision and Deploy your app on Azure](~/includes/get-started/azure-provisioning-instructions-tab.md)]\n\n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>Erfahren Sie, was geschieht, wenn Sie Ihre App in Azure bereitstellen</summary>\n\n  Vor der Bereitstellung wurde die Anwendung lokal ausgeführt:\n\n  * Das Back-End unter Verwendung von **Azure Functions Core Tools** ausgeführt.\n  * Der HTTP-Endpunkt der Anwendung, an dem Microsoft Teams die Anwendung lädt, wird lokal ausgeführt.\n\n  Die Bereitstellung erfolgt in zwei Schritten. Sie stellen die Ressourcen in einem aktiven Azure-Abonnement bereit und stellen dann den Back-End- und Frontend-Code für die Anwendung in Azure bereit oder laden sie hoch.\n\n  * Das Back-End verwendet, wenn konfiguriert, verschiedene Azure-Dienste, einschließlich Azure App Service und Azure Storage.\n  * Die Front-End-Anwendung wird in einem Azure Storage-Konto bereitgestellt, das für statisches Webhosting konfiguriert ist.\n\n  </details>\n"
- title: Herzlichen Glückwunsch!
  durationInMinutes: 1
  content: "\nSie haben es geschafft!\n\nSie haben eine Registerkarten-App erstellt.\n\nNachdem Sie nun gelernt haben, eine einfache App zu erstellen, können Sie mit dem Erstellen komplexerer Apps beginnen. Versuchen Sie zunächst, Ihren vorhandenen Apps Funktionen hinzuzufügen.\n\nSo fügen Sie Ihrer vorhandenen App Funktionen hinzu:\n\n1. Wählen Sie im Abschnitt **\"Entwicklung**\" der Randleiste des Teams-Toolkits die Option \"**Features hinzufügen**\" aus.\n\n1. Wählen Sie die Funktion aus, die Sie Ihrer App hinzufügen möchten.\n\nDas ist alles. Das Teams-Toolkit fügt der Verzeichnisstruktur Ihrer App das Gerüst für die neue Funktion hinzu. Befolgen Sie die Verfahren zum Erstellen und Bereitstellen der App, und Ihre App verfügt über mehrere Funktionen. \n\nSie haben das Lernprogramm zum Erstellen der Registerkarten-App mit JavaScript abgeschlossen."
