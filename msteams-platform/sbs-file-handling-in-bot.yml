### YamlMime:Tutorial
title: Hochladen einer Datei in Teams mithilfe eines Bots
metadata:
  title: Hochladen einer Datei in Teams mithilfe eines Bots
  description: Erfahren Sie, wie Sie Dateien von einem Bot in Teams hochladen und eine Datei empfangen, die als Anlage an einen Bot gesendet wird.
  audience: Developer
  level: Beginner
  ms.date: 28/12/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/bots-filesv4.md
  nextTutorialTitle: Weitere Informationen finden Sie unter Senden und Empfangen von Dateien über den Bot.
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 8ea4bb70c0acb8eb646b214e19adb134e54b420c
  ms.sourcegitcommit: 6926cf5eee55d5047c11ca13afc7f6f23e270396
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 10/27/2022
  ms.locfileid: "68740497"
items:
- durationInMinutes: 1
  content: "Der Bot verwendet die Teams-API, um Dateien mit Benutzern in den persönlichen Chats zu senden und zu empfangen. Die in Teams freigegebenen Dateien können als Karten angezeigt werden und eine umfassende In-App-Anzeige ermöglichen. Der Bot hilft auch bei der Implementierung von Features wie Spesenabrechnung, Bilderkennung, Dateiarchivierung und E-Signaturen, die das Bearbeiten von Dateiinhalten beinhalten. \n\n**Wichtige Features des Hochladens von Dateien in Teams mithilfe eines Bots:** \n\n  * Laden Sie Dateien mithilfe eines Bots in Teams hoch.\n  * Empfangen einer Datei, die als Anlage an den Bot gesendet wird.\n  * Rufen Sie in der Nachricht gesendete Inlinebilder ab.\n\nDiese Schritt-für-Schritt-Anleitung hilft Ihnen beim Hochladen einer Datei in Teams mithilfe eines Bots. Die folgende Ausgabe wird angezeigt:\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/output-sbs.png\" alt-text=\"Screenshot der endgültigen Ausgabe\":::\n"
- title: Voraussetzungen
  durationInMinutes: 1
  content: "Stellen Sie sicher, dass Sie die folgenden Tools installieren und Ihre Entwicklungsumgebung einrichten: \n\n | &nbsp; | Installieren | Zum Benutzen... |\n | --- | --- | --- |\n | **Required** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams für die Zusammenarbeit mit allen, mit denen Sie zusammenarbeiten, über Apps für Chats, Besprechungen, Anrufe und alles an einem Ort.|\n | &nbsp; | [Visual Studio 2022, Version 17.3](https://visualstudio.microsoft.com)<br> Installieren Sie eine der beiden folgenden Workloads:<br> • ASP.NET und Webentwicklung <br> • Plattformübergreifende .NET Core-Entwicklung | Sie können die Unternehmensversion in Visual Studio 2022 und die Workloads installieren. |\n | &nbsp; | [.NET Core SDK Version 3.1](https://dotnet.microsoft.com/en-us/download) | Angepasste Bindungen für lokales Debuggen und Azure Functions App-Bereitstellungen. Wenn Sie das .NET 3.1-SDK (oder höher) nicht global installiert haben, kann die portable Version installiert werden. |\n | &nbsp; | [ngrok](https://ngrok.com/download) | Teams-App-Features (Konversationsbots, Nachrichtenerweiterungen und eingehende Webhooks) erfordern eingehende Verbindungen. Ein Tunnel verbindet Ihr Entwicklungssystem mit Teams. Dies ist nicht für Apps erforderlich, die nur Registerkarten enthalten. Dieses Paket wird im Projektverzeichnis installiert (mit npm `devDependencies`). |\n\n  > [!NOTE]\n  > Registrieren Sie sich nach dem Herunterladen von ngrok, und installieren Sie [authtoken](https://ngrok.com/download).\n"
- title: Einrichten einer lokalen Umgebung
  durationInMinutes: 1
  content: "\n1. Öffnen Sie [BotBuilder-Samples](https://github.com/Microsoft/BotBuilder-Samples).\n1. Wählen Sie **Code** aus.\n1. Wählen Sie im Dropdownmenü **Mit GitHub Desktop öffnen** aus.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/botbuilder-sample_1.png\" alt-text=\"Screenshot: Klonen des Repositorys\":::\n\n1. Wählen Sie **Klonen** aus. \n"
- title: Erstellen und Registrieren Ihres Bots
  durationInMinutes: 5
  content: "Die folgenden Schritte helfen Ihnen beim Erstellen und Registrieren Ihres Bots in Azure-Portal:\n\n* Erstellen Sie eine Azure Bot-Ressource, um den Bot bei Azure Bot Service zu registrieren.\n* Erstellen Sie einen geheimen Clientschlüssel, um die SSO-Authentifizierung des Bots zu aktivieren.\n* Fügen Sie den Teams-Kanal hinzu, um den Bot bereitzustellen.\n* Erstellen Sie mithilfe von ngrok einen Tunnel zu den Endpunkten Ihres Webservers.\n* Fügen Sie dem erstellten ngrok-Tunnel einen Messagingendpunkt hinzu.\n\n**So erstellen Sie eine Azure Bot-Ressource**\n\n1. Gehen Sie zum [Azure-Portal](https://portal.azure.com/).\n1. Wählen Sie **Ressource erstellen** aus.\n1. Geben Sie in das Suchfeld **Azure-Bot ein**.\n1. Drücken Sie die **EINGABETASTE**.\n1. Wählen Sie **Azure Bot aus**.\n\n   :::image type=\"content\" source=\"./assets/images/azure-bot_1.png\" alt-text=\"Azure-Bot.\":::\n\n1. Wählen Sie **Erstellen** aus.\n1. Geben Sie den erforderlichen Namen des Bothandles im **Bothandle ein**.\n1. Wählen Sie in der Dropdownliste **Abonnement** Ihr Abonnement aus.\n1. Wählen Sie in der Dropdownliste **Ressourcengruppe** Ihre vorhandene Ressourcengruppe aus.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/selection-of-resource_1.png\" alt-text=\"Azure-Ressourcenauswahl\":::\n   \n   Um eine neue Ressourcengruppe zu erstellen, wählen **Sie Neu erstellen** aus, > geben Sie den Ressourcennamen ein, > klicken Sie auf **OK**. Wählen Sie in der Dropdownliste **Neuer Ressourcengruppenstandort** den erforderlichen Standort aus.\n   \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/bots/newresource.png\" alt-text=\"Auswahl des neuen Ressourcenspeicherorts\":::\n\n1. Im Abschnitt **Microsoft App ID** ist standardmäßig **Create new Microsoft App ID (Neue Microsoft-App-ID erstellen** ) ausgewählt. \n\n    Sie können auch **Vorhandene App-Registrierung verwenden** auswählen und vorhandene **App-ID**, **App-Mandanten-ID** und **MSI-Ressourcen-ID** eingeben.\n\n    > [!NOTE]\n    > Sie können nicht mehr als einen Bot mit derselben **Microsoft-App-ID** erstellen.\n\n1. Wählen Sie **App-Typ** als **mehrinstanzenfähig** aus.\n\n1. Wählen Sie **Überprüfen + erstellen** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/review-create_1.png\" alt-text=\"Erstellen eines neuen Bots\":::   \n\n1. Wenn die Prüfung bestanden wurde, wählen Sie **Erstellen** aus. \n\n    Es dauert einige Augenblicke, bis Ihr Botdienst bereitgestellt wurde.\n\n1. Wählen Sie **Zu Ressource wechseln** aus. \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/deployment_1.png\" alt-text=\"Ressource auswählen\":::\n    \n    Ihr Azure-Bot wird erstellt.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/azure-bot-created_1.png\" alt-text=\"Erstellen eines Bots\":::\n\n **So erstellen Sie einen geheimen Clientschlüssel**\n\n   Führen Sie die folgenden Schritte aus, wenn Sie eine neue **Microsoft-App-ID** erstellt haben:\n\n1. Wählen Sie im linken Bereich **Konfiguration** aus. \n\n   > [!TIP]\n   > Speichern Sie die **Microsoft-App-ID** oder **Client-ID** zur späteren Referenz.\n\n1. Wählen Sie neben **Microsoft App ID** die Option **Verwalten** aus.\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label_1.png\" alt-text=\"Bot verwalten\":::\n\n1. Wählen Sie im Abschnitt **Geheime Clientschlüssel** **die Option Neuer geheimer Clientschlüssel** aus. \n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/newclientsecret_2.png\" alt-text=\"Hinzufügen eines geheimen Clientschlüssels\" border=\"true\":::\n\n        \n   Das Fenster **Geheimen Clientschlüssel hinzufügen** wird angezeigt.\n\n1. Geben Sie **Beschreibung** ein.\n\n1. Klicken Sie auf **Hinzufügen**.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-client-secret_1.png\" alt-text=\"Hinzufügen eines geheimen Clientschlüssels und einer Beschreibung\"::: \n\n   \n1. Wählen Sie in der Spalte **Wert** **die Option In Zwischenablage kopieren** aus.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/copy-value_1.png\" alt-text=\"Wert in die Zwischenablage kopieren\":::\n\n         \n   > [!TIP]\n   > Speichern Sie den Wert **geheimer Clientschlüssel** oder das App-Kennwort zur späteren Referenz.\n\n**So fügen Sie den Teams-Kanal hinzu**\n\n1. Wählen Sie **Start** aus.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/go-to-home_1.png\" alt-text=\"Start auswählen\":::    \n\n   \n1. Wählen Sie Unter **Zuletzt verwendete Ressourcen** Ihren Bot aus.\n\n1. Wählen Sie im linken Bereich **Kanäle** und dann **Microsoft Teams aus.** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n   :::image type=\"content\" source=\"~/assets/images/adaptive-cards/channel-teams_1.png\" alt-text=\"Auswählen von Teams in Kanälen\":::\n  \n1. Aktivieren Sie das Kontrollkästchen, um die **Nutzungsbedingungen** zu akzeptieren.\n\n1. Wählen Sie **Zustimmen** aus.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/terms_1.png\" alt-text=\"Begriffe auswählen\":::\n\n  \n1. Wählen Sie **Anwenden** aus.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/apply-teams_1.png\" alt-text=\"Microsoft Teams\":::\n\n  \n**So erstellen Sie einen Tunnel für den lokalen Webserver**\n\nVerwenden Sie ngrok oder die Eingabeaufforderung, um einen Tunnel zu den öffentlich verfügbaren HTTPS-Endpunkten Ihres lokal ausgeführten Webservers zu erstellen. Führen Sie den folgenden Befehl in ngrok aus:\n\n ```bash\n ngrok http --host-header=localhost 3978\n ```\n\n> [!TIP]\n> Wenn **sie auf ERR_NGROK_4018** stoßen, führen Sie die Schritte in der Eingabeaufforderung aus, um sich zu registrieren und ngrok zu authentifizieren. Führen Sie anschließend den Befehl `ngrok http --host-header=localhost 3978` aus.\n\n**So fügen Sie einen Messagingendpunkt hinzu**\n\n   1. Kopieren Sie in ngrok die HTTPS-URL.\n   \n      :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url_3.png\" alt-text=\"ngrok HTTPS-URL\":::\n      \n      > [!NOTE]\n      > Die HTTPS-URL in Ihrem ngrok ist Ihr vollqualifizierter Domänenname.\n      > ist `WebAppDomain` ein vollqualifizierter Domänenname, der nicht enthalten `https://` ist.\n\n   1.  Wählen Sie **unter Einstellungen** für den von Ihnen erstellten Azure-Bot **die Option Konfiguration** aus.\n\n   1.  Verwenden Sie im **Messagingendpunkt** die https-URL, die von ngrok verfügbar ist, und fügen Sie am Ende der URL **/api/messages** hinzu.\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-api-teams-bot_1.png\" alt-text=\"Hinzufügen einer API\":::\n    \n   1. Wählen Sie **Anwenden** aus.\n\n      Sie haben erfolgreich einen Bot in Azure Bot Service eingerichtet.\n"
- title: Aktualisieren der Azure AD-App-Registrierung
  durationInMinutes: 5
  content: "1. Gehen Sie zum [Azure-Portal](https://portal.azure.com/).\n\n1. Wählen Sie **Azure Active Directory** aus.\n\n1. Wählen Sie im linken Bereich **App-Registrierungen aus**.\n\n1. Wählen Sie Ihren Bot aus.\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/select-your-bot_1.png\" alt-text=\"Auswahl des Bots\":::\n\n1. Wählen Sie **Api verfügbar machen** aus.\n\n1. Wählen Sie **Festlegen** aus.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/set-api_1.png\" alt-text=\"Einstellungs-API\":::\n\n1. Legen Sie den **Anwendungs-ID-URI** im Format fest `api://your ngrok/botid-{your AppID}`.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/app-id-uri1_1.png\" alt-text=\"Umleitungs-URI\":::\n\n   Die folgende Abbildung zeigt den Domänennamen:\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/expose-api_1.png\" alt-text=\"api\":::\n\n    > [!NOTE]\n    > Wenn Sie einen Tunnelingdienst wie ngrok verwenden, stellen Sie sicher, dass Sie den Wert aktualisieren, wenn sich Ihre ngrok-Unterdomäne ändert.\n    > Beispiel: `api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`, wobei `f631****.ngrok.io` der name der neuen ngrok-Unterdomäne ist.\n\n1. Wählen Sie **Bereich hinzufügen**. \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/selectscope_2.png\" alt-text=\"Auswahl des Bereichs\":::\n\n1. Geben Sie `access_as_user` im daraufhin angezeigten Bereich als **Bereichsnamen** ein.\n\n1. Legen Sie **Wer kann zustimmen?** auf fest `Admins and users`.\n\n1. Um die Eingabeaufforderungen für die Administrator- und Benutzereinwilligung mit geeigneten Werten für `access_as_user` den Bereich zu konfigurieren, geben Sie die folgenden Informationen in den Feldern an:</br>\n\n     * Geben Sie `Teams can access the user’s profile` als **Admin Anzeigenamen für die Zustimmung ein**.\n\n     * Geben Sie `Allows Teams to call the app’s web APIs as the current user` **als Admin Einwilligungsbeschreibung** ein.\n\n     * Geben Sie `Teams can access the user profile and make requests on the user’s behalf` als **Anzeigenamen für die Benutzereinwilligung** ein.\n\n     * Geben Sie `Enable Teams to call this app’s APIs with the same rights as the user` als **Beschreibung der Benutzereinwilligung ein**.\n\n1. Stellen Sie sicher, **Zustand** auf **Aktiviert** festgelegt ist.\n\n1. Wählen Sie **Bereich hinzufügen** aus, um sie zu speichern.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-a-scope_1.png\" alt-text=\"Hinzufügen von Bereich\":::\n\n    > [!NOTE]\n    > Der **Bereichsname** sollte mit dem **Anwendungs-ID-URI** übereinstimmen, der `/access_as_user` am Ende angefügt ist.</br>\n       `api://9179****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/access-as-user_1.png\" alt-text=\"Zugriff als Benutzer anzeigen\":::\n\n1. Identifizieren Sie im Bereich **Autorisierte Clientanwendungen** die Anwendungen, die Sie für die Webanwendung Ihrer App autorisieren möchten.\n\n1. **Hinzufügen einer Clientanwendung** auswählen. \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/selectclientapp_1.png\" alt-text=\"Client-App\":::\n\n1. Geben Sie **Client-ID** ein: `1fec8e78-bce4-4aaf-ab1b-5451cc387264` für die mobile Teams- oder Desktopanwendung.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/client-id-mobile_1.png\" alt-text=\"Mobile Client\":::  \n\n   Sie können **Client-ID**: `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` für die Teams-Webanwendung eingeben.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/client-web_1.png\" alt-text=\"Client-ID web\":::\n\n   Die folgende Abbildung zeigt die **Client-ID**:\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/client-id-teams-bot.png\" alt-text=\"zeigt IDs an\":::   \n\n1. Wählen Sie im linken Bereich **API-Berechtigungen aus**. \n\n   > [!NOTE]\n   > Benutzer müssen den API-Berechtigungen nur zustimmen, wenn die Azure Active Directory-App in einem anderen Mandanten registriert ist.\n\n1. Wählen Sie **Berechtigung hinzufügen** aus.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-permission_1.png\" alt-text=\"Berechtigung hinzugefügt\":::\n\n1. Wählen Sie **Microsoft Graph** aus.\n\n1. Wählen Sie **Delegierte Berechtigungen** aus.\n\n1. Fügen Sie **die Berechtigung User.Read** in hinzu.\n\n1. Wählen Sie **Berechtigungen hinzufügen** aus.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-permissions_1.png\" alt-text=\"Delegierte Berechtigungen hinzugefügt\":::\n\n1. Wählen Sie im linken Bereich **Authentifizierung** aus, um einen Umleitungs-URI festzulegen.\n\n   > [!NOTE]\n   > Wenn einer App keine Zustimmung des IT-Administrators erteilt wird, müssen Benutzer bei der ersten Verwendung einer App ihre Zustimmung erteilen.\n\n     1. Wählen Sie **Plattform hinzufügen** aus.\n    \n     1. Klicken Sie auf **Web**.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/configure-web_1.png\" alt-text=\"Webkonfiguration\"::: \n\n     1. Geben Sie den Umleitungs-URI für Ihre App ein, indem Sie an den vollqualifizierten Domänennamen anhängen `auth-end` :</br> \n       `https://your ngrok/auth-end`. </br>\n\n     1. Aktivieren Sie **implizite Genehmigung und Hybridflows** , indem Sie die folgenden Kontrollkästchen aktivieren:\n         * **ID-Token**\n         * **Zugriffstoken**\n\n     1. Wählen Sie **Konfigurieren** aus.  \n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/configuration-web_1.png\" alt-text=\"Konfiguration\":::\n\n  **So aktualisieren Sie das Manifest**\n\n  1. Wählen Sie im linken Bereich **Manifest** aus.\n\n  1. Legen Sie das Konfigurationselement **\"accessTokenAcceptedVersion\":2** fest. Wenn sie nicht festgelegt ist, ändern Sie den Wert in `2` , und wählen **Sie Speichern** aus.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/manifest-value.png\" alt-text=\"Öffnen der Manifestdatei\":::\n    \n     > [!NOTE]\n     > Wenn Sie Ihren Bot bereits in Teams testen, melden Sie sich von dieser App ab, und melden Sie sich bei Teams ab. Melden Sie sich erneut an, um diese Änderung anzuzeigen.\n\n  **So richten Sie Bot Service Verbindung ein**\n\n  1. Wechseln Sie zur **Konfigurationsseite** > **OAuth-Verbindungseinstellungen hinzufügen**.\n\n  1. Wählen Sie **OAuth-Verbindungseinstellungen hinzufügen** aus.\n\n  1. Geben Sie unter **Neue Verbindungseinstellung** die folgenden Details ein:\n\n      * **Geben Sie den Namen** ein `name for your new connection setting. You can use the name in the settings of your bot service code`.\n      * **Dienstanbieter** wählen Sie aus `Azure Active Directory V2`.\n      * **Client-ID** : Sie sind `Microsoft App ID`.\n      * **Geheimer Clientschlüssel** `Value of the client secret ID`.\n      * **Die Tokenaustausch-URL** verwendet die `Application ID URI` zuvor abgerufene beim Verfügbarmachen des API-Endpunkts.\n      * **Geben Sie die Mandanten-ID** ein `common`.\n      * **Bereiche** geben ein `User.Read`.\n \n  1. Wählen Sie **Speichern** aus.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/new-connection-setting_1.png\" alt-text=\"Festlegen einer neuen Verbindung\":::\n"
- title: Einrichten von App-Einstellungen und Manifestdateien
  durationInMinutes: 2
  content: "1. Navigieren Sie im geklonten Repository zu **appsettings.json** .\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/appsettings-file_1.png\" alt-text=\"App-Einstellungsmanifest\":::\n                  \n1. Öffnen Sie **appsettings.json** in Visual Studio.\n\n1. Aktualisieren Sie die folgenden Informationen:\n\n     * Legen Sie auf **MultiTenant** fest`\"MicrosoftAppType\"`.\n     * Legen Sie `\"MicrosoftAppId\"` auf die **Microsoft-App-ID** Ihres Bots fest.\n     * Legen Sie `\"MicrosoftAppPassword\"` auf den Wert der geheimen Client-ID Ihres Bots fest.\n     * Legen Sie für den MultiTenant-Bot als leer fest `\"MicrosoftAppTenantId\"` .\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/appsettings-json1_1.png\" alt-text=\"appsettings-Datei in Visual Studio\":::\n       \n1. Wechseln Sie im geklonten Repository zu **manifest.json** .\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-app-manifest_1.png\" alt-text=\"Manifestdatei öffnen\":::\n     \n1. Öffnen Sie **manifest.json** in Visual Studio, und nehmen Sie die folgenden Änderungen vor:\n\n   Ersetzen Sie alle Vorkommen von `<<YOUR-MICROSOFT-APP-ID>>` durch die **Microsoft App-ID** Ihres Bots.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/bot-id_1.png\" alt-text=\"Bot-ID ersetzen.\"lightbox=\"../msteams-platform/assets/images/teams-file-upload-bot/bot-id_1.png\"::: \n"
- title: Erstellen und Ausführen des Diensts
  durationInMinutes: 2
  content: "**So erstellen Sie den Dienst mithilfe von Visual Studio oder der Befehlszeile und führen diesen aus**\n\n# <a name=\"visual-studio\"></a>[Visual Studio](#tab/visualstudio)\n\n  1. Starten Sie Visual Studio.\n  \n  1. Wechseln Sie zu **Datei** > **Projekt/Projektmappe öffnen** > .\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/VS-open-file_1.png\" alt-text=\"Visual Studio\":::      \n   \n  1. Wählen Sie im Ordner **56.teams-file-upload** die Datei **TeamsFileUpload.csproj** aus.\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/csproj-folder_1.png\" alt-text=\"folder\":::        \n\n  1. Öffnen Sie **Projektmappen-Explorer** unter **Ansicht**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-task-module/solutionexplorer_1.png\" alt-text=\"view\":::\n\n  1. Klicken Sie mit der rechten Maustaste auf **TeamsFileUpload**.\n\n  1. Wählen Sie **Als Startprojekt festlegen** aus.\n     \n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-file-upload_1.png\" alt-text=\"Startprojekt\":::\n     \n  1. Press **F5** to run the project.\n\n  1. Wählen Sie **Ja** aus, wenn das folgende Dialogfenster angezeigt wird:\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/certificate_1.png\" alt-text=\"ca\":::\n\n     \n     Eine Webseite wird mit der Meldung **Ihr Bot ist bereit!** geöffnet.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/file-bot.png\" alt-text=\"Ihr Bot ist bereit\":::\n\n  \n\n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cli)\n\nWechseln Sie zu **BotBuilder-Samples > Samples > csharp_dotnetcore > 50.teams-messaging-extensions-search** im Eingabeaufforderungsfenster, und geben Sie den folgenden Befehl ein:\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Teams-Messaging-Extensions-Search/dotnetruncmd.png)\n"
- title: Hinzufügen eines Bots zum Hochladen von Dateien in Teams
  durationInMinutes: 2
  content: "1. Wechseln Sie in Ihrem geklonten Repository zu **csharp_dotnetcore** > **56.teams-file-upload** > **TeamsAppManifest**.\n\n1. Erstellen Sie eine .zip mit den folgenden Dateien, die im Ordner **TeamsAppManifest** vorhanden sind: \n  * manifest.json\n  * icon-outline.png\n  * icon-color.png \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-upload-manifest_1.png\" alt-text=\"Manifestordner\":::\n\n 1. Wechseln Sie zu **Microsoft Teams**.\n\n 1. Wählen Sie im linken Bereich **Apps** > **Verwalten Sie Ihre Apps** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/AppStore1_1.png\" alt-text=\"Hinzufügen einer App\":::\n\n 1. Wählen Sie **Benutzerdefinierte App hochladen** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/upload-custom-app_1.png\" alt-text=\"Benutzerdefinierte Apps\":::\n\n 1. Wählen Sie **Öffnen** aus, um die .zip Datei hochzuladen, die Sie im Ordner **TeamsAppManifest** erstellt haben.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-manifest_1.png\" alt-text=\"Manifest geöffnet\"::: \n\n 1. Klicken Sie auf **Hinzufügen**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-file-bot_1.png\" alt-text=\"Hinzufügen\"::: \n\n  1. Geben Sie im Bereich Nachricht verfassen **hallo** ein, und warten Sie einige Sekunden, bis sie mit einer Karte antwortet.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/respond-bot.png\" alt-text=\"Karte per Bot senden\":::\n"
- title: Interagieren mit dem Bot in Teams
  durationInMinutes: 2
  content: "1. Senden Sie eine Nachricht an den Bot. Es antwortet mit einer Karte für die Berechtigung zum Hochladen der Datei.\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-1.png\" alt-text=\"Bot-Sendekarte\":::\n\n1. Wählen Sie **Zulassen** aus. Eine `teams-logo.png` Datei wird in das Dateiverzeichnis hochgeladen, das zum Download bereit ist.\n     \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-2.png\" alt-text=\"Teams-Logo\":::\n\n1. Senden Sie eine Datei als Anlage in Teams an den Bot. Er antwortet mit einer Meldung `Received and Saved`. Sie können die Anlage auf der Registerkarte **Dateien** anzeigen.\n    \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-3.png\" alt-text=\"Datei senden\":::\n\n1. Senden sie ein Bild als Anlage. Er antwortet mit einer Meldung `Received and saved`. Sie können das Bild im Chatfenster und auf der Registerkarte **Dateien** anzeigen.\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-4.png\" alt-text=\"Empfangen\":::\n  \n    > [!NOTE]\n    >  Nachdem der Bot im persönlichen Bereich installiert wurde, nimmt der Benutzer eine Persönliche Chatunterhaltung mit dem Bot auf.\n  \n"
- title: Abschließen der Herausforderung
  durationInMinutes: 1
  content: "Haben Sie sich so etwas einfallen lassen?\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/output-sbs.png\" alt-text=\"Endgültiges Bild\"::: \n"
- content: Sie haben das Tutorial abgeschlossen. Jetzt können Sie Dateien in Teams mithilfe eines Bots hochladen.
