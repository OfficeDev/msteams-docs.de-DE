### YamlMime:Tutorial
title: Erstellen einer suchbasierten Messaging-Erweiterung
metadata:
  title: Erstellen einer suchbasierten Messaging-Erweiterung
  description: In diesem Lernprogramm erfahren Sie, wie Sie eine suchbasierte Messaging-Erweiterung erstellen.
  audience: Developer
  level: Beginner
  ms.date: 01/27/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: messaging-extensions/how-to/search-commands/define-search-command.md
  nextTutorialTitle: Weitere Informationen zu Suchbefehlen
  ms.custom: mvc
  ms.localizationpriority: High
  ms.openlocfilehash: 9445f7b63e00a0341eb996f9368ea64a95ed5587
  ms.sourcegitcommit: 2fdca6fb0ade3f6b460eb9a4dfea0a8e2ab8d3b9
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 03/08/2022
  ms.locfileid: "63360372"
items:
- durationInMinutes: 1
  content: "Messaging-Erweiterungen ermöglichen Benutzern die Interaktion mit Webdiensten im Microsoft Teams-Client. Sie helfen bei der Suche in einem externen System über den Bereich zum Verfassen von Nachrichten, das Befehlsfeld oder direkt aus einer Nachricht. \n\n**Wichtige Features der suchbasierten Messaging-Erweiterung**\n\n* Benutzern das Durchsuchen externer Systeme gestatten.\n* Einfügen von Suchergebnissen in eine Nachricht in Form einer Karte.\n\nDiese schrittweise Anleitung hilft Ihnen beim Erstellen einer suchbasierten Messaging-Erweiterung. Die folgende Ausgabe wird angezeigt:\n\n![Final](~/assets/images/Teams-Messaging-Extensions-Search/final_output.png)\n"
- title: Voraussetzungen
  durationInMinutes: 1
  content: "Stellen Sie sicher, dass Sie die folgenden Tools installieren und Ihre Entwicklungsumgebung einrichten:  \n\n* [Microsoft Teams](https://teams.microsoft.com/) mit gültigem Konto\n* [.NET Core SDK](https://dotnet.microsoft.com/download) Version 3.1\n* [Neueste Version von Visual Studio](https://visualstudio.microsoft.com/downloads/)\n* [ngrok](https://ngrok.com/download) neueste Version oder eine entsprechende Tunnelinglösung\n\n  > [!NOTE]\n  > Registrieren Sie sich nach dem Herunterladen von ngrok, und installieren Sie [authtoken](https://ngrok.com/download).\n"
- title: Einrichten einer lokalen Umgebung
  durationInMinutes: 1
  content: "Klonen `BotBuilder-Samples` Sie das Repository in Ihrem lokalen GitHub:  \n\n 1. Öffnen [Sie BotBuilder-Beispiele](https://github.com/microsoft/BotBuilder-Samples).\n 1. Wählen Sie **\"Code**\" aus.\n 1. Wählen Sie im Dropdownmenü **\"Öffnen mit GitHub Desktop**\" aus.\n\n    ![Klon-Repository](~/assets/images/Teams-Messaging-Extensions-Search/clonerepository.png)\n\n 1. Wählen Sie **\"Klonen\" aus**. \n"
- title: Erstellen und Registrieren Ihres Bots im Azure AD Portal
  durationInMinutes: 5
  content: "Führen Sie die folgenden Schritte aus, um Ihren Bot in Microsoft Azure Active Directory (Azure AD) zu erstellen und zu registrieren, einen Tunnel mithilfe von ngrok zu erstellen und den Messaging-Endpunkt hinzuzufügen:\n\n* Erstellen Sie eine Azure Bot-Ressource, um den Bot beim Azure Bot Service zu registrieren.\n* Erstellen Sie einen geheimen Clientschlüssel, um die SSO-Authentifizierung des Bots zu aktivieren.\n* Fügen Sie Microsoft Teams Kanal hinzu, um den Bot in einem Teams Kanal bereitzustellen.\n* Verwenden Sie ngrok, um einen Tunnel zu den Endpunkten Ihres Webservers zu erstellen.\n* Fügen Sie dem ngrok-Tunnel, den Sie erstellt haben, einen Messaging-Endpunkt hinzu.\n\n**So erstellen Sie eine Azure Bot-Ressource**\n\n1. Gehen Sie zum [Azure-Portal](https://portal.azure.com/).\n1. Wählen Sie **Ressource erstellen** aus.\n1. Geben Sie in das Suchfeld **Azure Bot** ein.\n1. Drücken Sie **die EINGABETASTE**.\n1. Wählen Sie **Azure Bot** aus.\n\n     ![Erstellen einer Azure-Botkarte](~/assets/images/bots/createazurebot.png)\n\n1. Wählen Sie **Erstellen** aus.\n1. Geben Sie den erforderlichen Bot-Handlenamen in **das Bot-Handle ein**.\n1. Wählen Sie in der **Dropdownliste \"Abonnement** \" **die Option \"msteams.nonprod.pub.msft.aplt**\" aus.\n1. Wählen Sie in der Dropdownliste \" **Ressourcengruppe** \" Ihre vorhandene Ressourcengruppe aus. \n\n    ![Ressourcen-Azure-Bot auswählen](~/assets/images/Teams-Messaging-Extensions-Search/review-plus-create.png) \n\n   Sie können auch eine neue Ressourcengruppe erstellen (wählen Sie **Neue** > Geben Sie den Ressourcennamen ein > klicken Sie auf **\"OK**\").\n\n1. Wenn Sie eine neue Ressourcengruppe erstellt haben, wählen Sie den erforderlichen Speicherort aus der Dropdownliste \" **Speicherort der neuen Ressourcengruppe** \" aus.\n\n    ![Neuer Ressourcengruppenspeicherort](~/assets/images/meetings-side-panel/newresource.png)\n\n1. Wählen Sie **\"MultiTenant** \" unter **\"Bottyp\" aus**.\n\n    ![Bot-Typ](~/assets/images/Teams-Messaging-Extensions-Search/bot-type.png) \n\n1. Im Abschnitt **\"Microsoft App ID** \" ist standardmäßig **\"Neue Microsoft App-ID erstellen** \" ausgewählt. \n\n   Sie können entweder vorhandene **App-Registrierung** verwenden und **vorhandene App-ID** und **vorhandenes App-Kennwort** eingeben oder **neue Microsoft App-ID** erstellen auswählen.\n\n   > [!NOTE]\n   > Sie können nicht mehr als einen Bot mit derselben **Microsoft App-ID** erstellen.\n\n1. Wählen Sie **Überprüfen + erstellen** aus.\n\n    ![Erstellen einer Microsoft-App-ID](~/assets/images/meeting-token-generator/meeting-token-generator-appidcreate.png)\n\n1. Wenn die Überprüfung erfolgreich ist, wählen Sie \" **Erstellen**\" aus. \n\n    Es dauert ein paar Minuten, bis Ihr Bot-Dienst bereitgestellt wurde. \n\n1. Wählen Sie **Zu Ressource wechseln** aus. \n\n    ![Bereitstellen der App](~/assets/images/Teams-Messaging-Extensions-Search/botdeployment.png)\n\n    Ihr Azure-Bot wird erstellt.\n\n    ![Azure-Botressource erstellt](~/assets/images/Teams-Messaging-Extensions-Search/bot-page.png)\n\n**So erstellen Sie einen geheimen Clientschlüssel**\n\n  Führen Sie die folgenden Schritte aus, wenn Sie eine neue **Microsoft App-ID** erstellt haben:\n\n1. Wählen Sie im linken Bereich \" **Konfiguration\" aus**. \n\n   > [!TIP]\n   > Speichern Sie die **Microsoft App-ID** oder **Client-ID** für zukünftige Verweise.\n\n1. Wählen Sie neben **der Microsoft-App-ID** die Option **\"Verwalten\"** aus.\n\n    ![Microsoft-App-ID](~/assets/images/Teams-Messaging-Extensions-Search/config1.png)\n\n1. Wählen Sie im Abschnitt **\"Geheime Clientschlüssel** \" **die Option \"Neuer geheimer Clientschlüssel\" aus**. \n\n    ![Neuer geheimer Clientschlüssel](~/assets/images/meetings-side-panel/newclientsecret.png)\n\n   Das Fenster \" **Geheimen Clientschlüssel hinzufügen** \" wird angezeigt.  \n\n1. Enter **Description**.\n\n1. Klicken Sie auf **Hinzufügen**.\n\n    ![Hinzufügen eines geheimen Clientschlüssels zur App](~/assets/images/Teams-Messaging-Extensions-Search/clientsecret.png)\n\n1. In the **Value** column, select **Copy to clipboard**.\n\n     ![Wert des geheimen Clientschlüssels](~/assets/images/Teams-Messaging-Extensions-Search/clientvalue.png)\n   \n   > [!TIP]\n   > Speichern Sie den Wert für **geheime Clientschlüssel oder das App-Kennwort** für zukünftige Verweise.\n\n**So fügen Sie den Teams Kanal hinzu**\n\n1. Wählen Sie **Start** aus.\n\n    ![Startseite](~/assets/images/Teams-Messaging-Extensions-Search/gotohome.png)\n\n1. Wählen Sie Ihren Bot aus **den zuletzt verwendeten Ressourcen** aus.\n\n1. Wählen Sie im linken Bereich **Kanäle** aus. \n\n1. Auswählen **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. Aktivieren Sie das Kontrollkästchen, um die **Nutzungsbedingungen** zu akzeptieren.\n\n1. Wählen Sie **\"Zustimmen\" aus**.\n\n      ![Nutzungsbedingungen](~/assets/images/meetings-side-panel/terms.png)\n\n1. Wählen Sie **Speichern** aus.\n\n      ![Auswählen Teams](~/assets/images/Teams-Messaging-Extensions-Search/config-teams.png)   \n\n**So erstellen Sie einen Tunnel für lokalen Webserver**\n\nVerwenden Sie ngrok, um einen Tunnel zu den öffentlich verfügbaren HTTPS-Endpunkten Ihres lokal ausgeführten Webservers zu erstellen. Führen Sie den folgenden Befehl in ngrok aus:\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n> [!TIP]\n> Wenn **sie auf ERR_NGROK_4018** stoßen, führen Sie die Schritte in der Eingabeaufforderung aus, um sich anzumelden und ngrok zu authentifizieren. Führen Sie anschließend den Befehl `ngrok http -host-header=localhost 3978` aus.\n\n**So fügen Sie einen Messaging-Endpunkt hinzu**\n\n1. Kopieren Sie von ngrok die HTTPS-URL (https zu io).\n\n    ![ngrok HTTPS-URL](~/assets/images/Teams-Messaging-Extensions-Search/ngrok.png)\n\n    > [!NOTE]\n    > Die HTTPS-URL in Ihrem ngrok ist Ihr vollqualifizierte Domänenname.\n    > Es `WebAppDomain` handelt sich um einen vollqualifizierten Domänennamen, der nicht darin enthalten `https://` ist.\n\n1. Wählen Sie **in Einstellungen** für den azure-Bot, den Sie erstellt haben, die Option **\"Konfiguration**\" aus.\n\n1. Verwenden Sie im **Messaging-Endpunkt** die HTTPS-URL, die über ngrok verfügbar ist, und fügen Sie am Ende der URL **/api/messages** hinzu.\n\n    ![Messaging-Endpunkt](~/assets/images/Teams-Messaging-Extensions-Search/messaging-endpoint.png)\n\n1. Wählen Sie **Anwenden** aus.\n\n    Sie haben erfolgreich einen Bot im Azure Bot Service eingerichtet.\n"
- title: Aktualisieren der Azure AD-App-Registrierung
  durationInMinutes: 1
  content: "1. Wechseln Sie zum [Microsoft Azure Portal](https://portal.azure.com/).\n\n1. Wählen Sie **Azure Active Directory** aus.\n\n1. Wählen Sie im linken Navigationsbereich **App-Registrierungen aus**.\n\n1. Wählen Sie Ihren Bot aus.\n\n   ![App-Registrierung](~/assets/images/Teams-Messaging-Extensions-Search/appregister.png)\n\n1. Wählen Sie unter **Verwalten** die Option **Eine API verfügbar machen** aus.\n\n1. Wählen Sie **\"Festlegen\" aus**.\n\n   ![Bereitstellen einer API](~/assets/images/Teams-Messaging-Extensions-Search/exposeanapi.png)\n\n1. Legen Sie den **Anwendungs-ID-URI** in Form von `api://{AppID}`fest.\n\n   ![Link festlegen](~/assets/images/Teams-Messaging-Extensions-Search/setlink.png)\n\n1. Fügen Sie den `WebAppDomain` Wert zwischen `api://` und `/{AppID}`.</br>\n    `api://9179****.ngrok.io/{AppID}`</br>\n    \n   Die folgende Abbildung zeigt den Domänennamen:\n    \n    ![App-ID-URI](~/assets/images/Teams-Messaging-Extensions-Search/appIDuri.png)\n\n    > [!NOTE]\n    > Wenn Sie einen Tunneldienst wie ngrok verwenden, stellen Sie sicher, dass Sie den Wert aktualisieren, wenn sich Ihre ngrok-Unterdomäne ändert.\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`, wobei `f631****.ngrok.io` der neue ngrok-Unterdomänenname angegeben ist.\n\n1. Wählen Sie **Bereich hinzufügen**. \n\n   ![Bereich auswählen](~/assets/images/meetings-side-panel/selectscope.png)\n\n1. Geben Sie `access_as_user` im angezeigten Bereich als **Bereichsname** ein.\n\n1. Set **Wer can consent?** to `Admins and users`.\n\n1. Um die Aufforderungen zur Administrator- und Benutzerzustimmung mit den entsprechenden Werten für `access_as_user` den Bereich zu konfigurieren, geben Sie die folgenden Informationen in den Feldern an:</br>\n\n     * Geben Sie `Teams can access the user’s profile` den **Anzeigenamen der Administratorzustimmung ein**.\n\n     * Geben Sie `Allows Teams to call the app’s web APIs as the current user` eine **Beschreibung der Administratorzustimmung ein**.\n\n     * Geben Sie `Teams can access the user profile and make requests on the user’s behalf` den **Anzeigenamen der Zustimmung des Benutzers ein**.\n\n     * Geben Sie `Enable Teams to call this app’s APIs with the same rights as the user` als **Beschreibung der Zustimmung des Benutzers** ein.\n\n1. Stellen Sie sicher, **Zustand** auf **Aktiviert** festgelegt ist.\n\n1. Wählen Sie **\"Bereich** hinzufügen\" aus, der gespeichert werden soll.\n\n    ![Hinzufügen eines Bereichs](~/assets/images/Teams-Messaging-Extensions-Search/addascope.png)\n\n    > [!NOTE]\n    > Der **Bereichsname** sollte mit dem **Anwendungs-ID-URI** übereinstimmen, `/access_as_user` der am Ende angefügt ist.</br>\n       `api://9179****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    ![Scopes](~/assets/images/Teams-Messaging-Extensions-Search/scopes.png) \n\n1. Identifizieren Sie im Bereich **Autorisierte Clientanwendungen** die Anwendungen, die Sie für die Webanwendung Ihrer App autorisieren möchten. \n\n1. **Hinzufügen einer Clientanwendung** auswählen. \n\n    ![Clientanwendung auswählen](~/assets/images/meetings-side-panel/selectclientapp.png) \n\n1. Geben Sie **die Client-ID** ein: `1fec8e78-bce4-4aaf-ab1b-5451cc387264` für Teams mobile oder Desktopanwendung. \n\n    ![Hinzufügen von Clientanwendung 1](~/assets/images/meetings-side-panel/addclientapplication1.png) \n\n   Sie können **die Client-ID** eingeben: `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` für Teams Webanwendung.\n\n    ![Hinzufügen von Clientanwendung 2](~/assets/images/meetings-side-panel/addclientapplication2.png) \n\n1. Wählen Sie **autorisierte Bereiche aus**.\n\n    ![Hinzufügen von Clientanwendung 2](~/assets/images/Teams-Messaging-Extensions-Search/authorizedscope.png) \n\n   In der folgenden Abbildung werden die Client-IDs angezeigt:\n\n    ![Clientanwendungen](~/assets/images/meetings-side-panel/clientapps.png) \n\n1. Wählen Sie im linken Bereich **API-Berechtigungen aus**. \n\n   > [!NOTE]\n   > Benutzer müssen den API-Berechtigungen nur zustimmen, wenn die Azure AD-App in einem anderen Mandanten registriert ist.\n\n1. Wählen Sie **Berechtigung hinzufügen** aus.\n\n    ![Berechtigung hinzufügen](~/assets/images/meetings-side-panel/addpermission.png)\n\n1. Wählen Sie **Microsoft Graph** aus.\n\n1. Wählen Sie **Delegierte Berechtigungen** aus.\n\n1. Fügen Sie die folgenden Berechtigungen hinzu:</br>\n     * **email**\n     * **offline_access**\n     * **Openid**\n     * **profile**\n     * **User.Read**\n\n1. Wählen Sie **Berechtigungen hinzufügen** aus.\n\n     ![Andere Berechtigungen](~/assets/images/meetings-side-panel/other-permissions.png)\n\n1. Wählen Sie im linken Bereich **\"Authentifizierung** \" aus, um einen Umleitungs-URI festzulegen. \n\n   > [!NOTE]\n   > Wenn einer App keine Zustimmung des IT-Administrators erteilt wird, müssen Benutzer die Zustimmung erteilen, wenn sie eine App zum ersten Mal verwenden.\n           \n     1. Wählen Sie **Plattform hinzufügen** aus.\n     1. Klicken Sie auf **Web**.\n\n        ![Netz](~/assets/images/Teams-Messaging-Extensions-Search/webauth.png)\n\n     1. Geben Sie den Umleitungs-URI für Ihre App ein, indem Sie den vollqualifizierten `auth-end` Domänennamen anfügen:</br> \n       `https://9179****.ngrok.io/auth-end`. </br>\n\n     1. Aktivieren Sie **implizite Genehmigungen und Hybridflüsse** , indem Sie die folgenden Kontrollkästchen aktivieren:\n         * **ID-Token**\n         * **Zugriffstoken**\n\n     1. Wählen Sie **Konfigurieren** aus.\n\n        ![Authentifizierungsende](~/assets/images/Teams-Messaging-Extensions-Search/authend.png)\n"
- title: Einrichten von App-Einstellungen und Manifestdateien
  durationInMinutes: 1
  content: "1. Navigieren Sie zu **\"appsettings.json** \" im geklonten Repository.\n\n    ![Speicherort der App-Einstellungen](~/assets/images/Teams-Messaging-Extensions-Search/appsettingslocation.png)\n\n1. Öffnen Sie **\"appsettings.json\"** in der neuesten Version von Visual Studio, und aktualisieren Sie die folgenden Informationen:  \n\n     * Auf **MultiTenant** festgelegt`\"MicrosoftAppType\"`.\n     * Legen Sie `\"MicrosoftAppId\"` die **Microsoft-App-ID** Ihres Bots fest.\n     * Legen Sie `\"MicrosoftAppPassword\"` den **Wert** des **geheimen Clientschlüssels** fest.\n     * Als leer festgelegt `\"MicrosoftAppTenantId\"` .\n     * Auf den vollqualifizierten Domänennamen (https auf io) festgelegt `\"BaseUrl\"` .\n\n    ![App-Einstellungen](~/assets/images/Teams-Messaging-Extensions-Search/appsettings.png)\n\n1. Navigieren Sie zu **\"manifest.json\"** im geklonten Repository.\n\n    ![Speicherort der Manifestdatei](~/assets/images/Teams-Messaging-Extensions-Search/manifestlocation.png)\n\n1. Öffnen Sie **\"manifest.json\"** in der neuesten Version von Visual Studio, und nehmen Sie die folgenden Änderungen vor:\n\n     * Ersetzen Sie `<<YOUR-BASE-URL-DOMAIN>>` dies durch Ihren `WebAppDomain` Namen.\n     * Ersetzen Sie alle Vorkommen durch `<<YOUR-MICROSOFT-APP-ID>>` die **Microsoft App-ID** Ihres Bots.\n\n    ![Manifest](~/assets/images/Teams-Messaging-Extensions-Search/manifest.png)\n"
- title: Erstellen und Ausführen des Diensts
  durationInMinutes: 1
  content: "**So erstellen Sie den Dienst und führen ihn mit der neuesten Version von Visual Studio oder der Befehlszeile aus**\n\n# <a name=\"latest-version-of-visual-studio\"></a>[Neueste Version von Visual Studio](#tab/latestversionofvisualstudio)\n\n   1. Starten Sie die neueste Version von Visual Studio.\n   1. Navigieren Sie zu **FileOpen** >  >  **Project/Solution**.\n\n      ![Datei öffnen](~/assets/images/meeting-token-generator/meeting-token-generator-VSopenfile.png)\n\n   1. Wählen Sie die Datei **\"TeamsMessagingExtensionsSearch.csproj** \" aus dem Ordner **\"50.teams-messaging-extensions-search** \" aus.\n\n      ![CS proj-Datei](~/assets/images/Teams-Messaging-Extensions-Search/fileready.png)\n\n   1. Öffnen Sie **den Projektmappen-Explorer** aus der **Ansicht**.\n\n      ![Projektmappen-Explorer](~/assets/images/Teams-Messaging-Extensions-Search/solutionexplorer.png)\n\n   1. Klicken Sie mit der rechten Maustaste, um **TeamsMessagingExtensionsSearch** auszuwählen.\n\n   1. Wählen Sie **\"Als Start Project festlegen**\" aus.\n\n      ![Projektmappen-Explorer](~/assets/images/Teams-Messaging-Extensions-Search/startup.png)\n\n   1. Press **F5** to run the project.\n\n   1. Wählen Sie **\"Ja** \" aus, wenn das folgende Dialogfeld angezeigt wird:\n\n      ![Vertrauensstellungszertifikat](~/assets/images/Teams-Messaging-Extensions-Search/certificate.png)\n\n      Eine Webseite wird mit der Meldung geöffnet, **dass Ihr Bot bereit ist!**\n\n      ![App bereit](~/assets/images/Teams-Messaging-Extensions-Search/appisready.png) \n\n    \n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cli)\n\nNavigieren Sie im Eingabeaufforderungsfenster zu **BotBuilder-Samples > Beispielen > csharp_dotnetcore > 50.teams-messaging-extensions-search** , und geben Sie den folgenden Befehl ein:\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Teams-Messaging-Extensions-Search/dotnetruncmd.png)\n"
- title: Hinzufügen einer Suchnachrichten-Erweiterungs-App
  durationInMinutes: 1
  content: "1. Navigieren Sie in Ihrem geklonten Repository zu **csharp_dotnetcore > 50.teams-messaging-extensions-search > TeamsAppManifest**.\n\n1. Erstellen Sie eine .zip mit den folgenden Dateien, die im Ordner **\"TeamsAppManifest** \" vorhanden sind: \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![ZIP-Datei](~/assets/images/Teams-Messaging-Extensions-Search/zipfile.png) \n\n1. Wechseln Sie zu **Microsoft Teams**.\n\n1. Wählen Sie **Apps** aus.\n\n   ![ZIP-Datei](~/assets/images/Teams-Messaging-Extensions-Search/AppStore.png)\n\n1. Wählen Sie in der unteren linken Ecke die Option **\"Apps verwalten\" aus**.\n\n   ![Apps verwalten](~/assets/images/Teams-Messaging-Extensions-Search/manageapps.png)\n\n1. Wählen Sie **Hochladen einer App im App-Katalog Ihrer Organisation** aus. \n\n   ![Hochladen benutzerdefinierte App](~/assets/images/Teams-Messaging-Extensions-Search/uploadapp.png)\n\n1. Wählen Sie **\"Öffnen** \" aus, um die .zip Datei hochzuladen, die Sie im Ordner **\"TeamsAppManifest** \" erstellt haben.\n\n   ![ZIP-Datei auswählen](~/assets/images/Teams-Messaging-Extensions-Search/selectzipopen.png)\n\n1. Klicken Sie auf **Hinzufügen**.\n\n   ![Hinzufügen der App](~/assets/images/Teams-Messaging-Extensions-Search/addapp.png)\n\n   In einem Chat wird ein Popup geöffnet.\n\n   ![Chat](~/assets/images/Teams-Messaging-Extensions-Search/popup.png)\n"
- title: Interagieren mit der App in Teams
  durationInMinutes: 1
  content: >
    1. Wählen Sie im Popup eine beliebige Option aus.


    1. Geben Sie Text ein, und wählen Sie **"Senden**" aus.

       ![Option](~/assets/images/Teams-Messaging-Extensions-Search/option1.png)

       1. Wählen Sie **"Nuget-Paket" aus**.

          ![Nuget](~/assets/images/Teams-Messaging-Extensions-Search/nuget.png)

       1. Wählen Sie **Project** aus.

          ![Project](~/assets/images/Teams-Messaging-Extensions-Search/project.png)
- title: Vollständige Herausforderung
  durationInMinutes: 1
  content: >
    Haben Sie sich so etwas einfallen lassen?


    ![Final](~/assets/images/Teams-Messaging-Extensions-Search/final_output.png)
- content: Sie haben das Lernprogramm abgeschlossen, um mit Teams Suche nach Messaging-Erweiterungen zu beginnen!
