### YamlMime:Tutorial
title: Erstellen eines Bots mit SSO-Authentifizierung
metadata:
  title: Erstellen eines Bots mit SSO-Authentifizierung
  description: In diesem Lernprogramm erfahren Sie, wie Sie einen Bot mit SSO-Authentifizierung erstellen.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/authentication/auth-aad-sso-bots.md
  nextTutorialTitle: Weitere Informationen zur Bot-Authentifizierung
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 77d8e14a842037d5793cf2c4a43868db4bdcf86c
  ms.sourcegitcommit: 73e6767127cb27462f819acd71a1e480580bcf83
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 06/06/2022
  ms.locfileid: "65906411"
items:
- durationInMinutes: 1
  content: >
    Teams-Bots sind Unterhaltungsbots, die sich wiederholende automatisierte Aufgaben ausführen, die von den Benutzern ausgeführt werden, z. B. kundendienst. Der Benutzer muss sich mehrmals ohne SSO-Authentifizierung (Single Sign-On) anmelden. Bei SSO-Authentifizierungsmethoden müssen sich die Benutzer nicht mehrmals beim Bot anmelden.


    Ein Bot verhält sich je nach Unterhaltung, an der er beteiligt ist, unterschiedlich:


    * Bots in Kanal- und Gruppenchatunterhaltungen erfordern, dass die Benutzer den Bot @mention

    * Für Bots in einer 1:1-Unterhaltung ist keine @Erwähnung erforderlich. Alle vom Benutzer gesendeten Nachrichten werden an den Bot weitergeleitet.


    Diese schrittweise Anleitung hilft Ihnen beim Erstellen eines Bots mit SSO-Authentifizierung. Die folgende Ausgabe wird angezeigt:

     :::image type="content" source="~/assets/images/bots/sbs-desktop-mobile.png" alt-text="Bei Bot angemeldetes Mobile" border="true":::
- title: Voraussetzungen
  durationInMinutes: 1
  content: "Stellen Sie sicher, dass Sie die folgenden Tools installieren und Ihre Entwicklungsumgebung einrichten:  \n\n* [Neueste Version von ngrok](https://ngrok.com/download) oder einer gleichwertigen Tunnellösung\n\n  > [!NOTE]\n  > Melden Sie sich nach dem Herunterladen von ngrok an, und installieren Sie [authtoken](https://ngrok.com/download).\n\n* [Neueste Version von Visual Studio](https://visualstudio.microsoft.com/downloads/)\n\nStellen Sie sicher, dass Sie über die folgenden Konten verfügen, und richten Sie Ihre Entwicklungsumgebung ein: \n\n* [Microsoft-Konto](https://teams.microsoft.com/)\n\n  > [!TIP]\n  > Stellen Sie sicher, dass das Microsoft Teams-Konto kein Gastkonto ist.\n\n* [Microsoft 365-Entwicklerkonto](https://developer.microsoft.com/en-us/microsoft-365/dev-program) oder Zugriff auf das Teams-Konto mit den entsprechenden Berechtigungen zum Installieren einer App  \n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Einrichten Ihres Teams-Entwicklungsmandanten\n\n   Ein **Mandant** ist wie ein Raum oder Container, in dem Sie chatten, Dateien freigeben und Besprechungen für Ihre Organisation in Teams ausführen. Sie können die App auch querladen und testen.\n\n### <a name=\"check-for-sideloading-option\"></a>Option \"Auf Querladen überprüfen\"\n\n   Nachdem Sie die App erstellt haben, müssen Sie Ihre App in Teams laden, ohne sie zu stören. Dies wird als Querladen bezeichnet. Melden Sie sich bei Ihrem Microsoft 365-Konto an, um diese Option anzuzeigen.\n\n   > [!NOTE]\n   > Das Querladen ist für die Vorschau und das Testen von Apps in der lokalen Teams-Umgebung erforderlich. Aktivieren Sie das Querladen, um eine Vorschau anzuzeigen und Ihre App lokal in Teams zu testen.\n\n   Haben Sie bereits einen Mandanten, und haben Sie den Administratorzugriff? Lassen Sie uns überprüfen, ob Sie es wirklich tun!\n\nSo überprüfen Sie das Querladen von Apps in Teams:\n\n1. Wählen Sie im Teams-Client **\"Store**\" aus.\n1. Wählen Sie **Verwalten Ihrer Apps** aus.\n1. Wählen Sie **In App veröffentlichen** aus.\n1. Suchen Sie nach der Option zum **Hochladen einer benutzerdefinierten App**. Wenn die Option angezeigt wird, ist das Querladen von Apps aktiviert.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/upload-custom-app1.png\" alt-text=\"Abbildung zeigt die Option zum Hochladen einer benutzerdefinierten App in Teams.\":::\n\n    > [!NOTE]\n    > Wenden Sie sich an den Teams-Administrator, wenn Sie nicht die Möglichkeit haben, eine benutzerdefinierte App hochzuladen.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Erstellen eines kostenlosen Teams-Entwicklermandanten (optional)\n\nWenn Sie nicht über ein Teams-Entwicklerkonto verfügen, können Sie es kostenlos erhalten. Nehmen Sie am Microsoft 365-Entwicklerprogramm teil!\n\n1. Gehen Sie zu [Microsoft 365-Entwicklerprogramm](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Wählen Sie **\"Jetzt teilnehmen\"** aus, und folgen Sie den Anweisungen auf dem Bildschirm.\n1. Wählen Sie auf der Willkommensseite \" **E5-Abonnement einrichten** \" aus.\n1. Richten Sie ein Administratorkonto ein. NachDem Sie fertig sind, wird der folgende Bildschirm angezeigt.\n\n      :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Microsoft\" border=\"true\":::\n\n1. Melden Sie sich mit dem neuen Administratorkonto bei Teams an. Jetzt sollten Sie über die Option \" **Benutzerdefinierte App hochladen** \" verfügen.\n"
- title: Erstellen und Registrieren Ihres Bots
  durationInMinutes: 5
  content: "Die folgenden Schritte helfen Ihnen beim Erstellen und Registrieren Ihres Bots im Azure-Portal:\n\n1. Erstellen einer Azure Bot-Ressource zum Registrieren des Bots bei Azure Bot Service\n1. Erstellen eines geheimen Clientschlüssels zum Aktivieren der SSO-Authentifizierung des Bots\n1. Hinzufügen des Teams-Kanals zum Bereitstellen des Bots\n1. Verwenden von ngrok zum Erstellen eines Tunnels zu den Endpunkten Ihres Webservers\n1. Hinzufügen des Messaging-Endpunkts zum erstellten ngrok-Tunnel\n\n**So erstellen Sie eine Azure Bot-Ressource**\n\n1. Gehen Sie zum [Azure-Portal](https://portal.azure.com/). Möglicherweise werden Sie aufgefordert, sich mit Ihren Microsoft-Kontoanmeldeinformationen anzumelden.\n\n1. Wählen Sie **Ressource erstellen** aus.\n\n   :::image type=\"content\" source=\"~/assets/images/bots/Createaresource.png\" alt-text=\"Ressource erstellen\" border=\"true\":::\n\n1. Geben Sie im Suchfeld **den Azure-Bot ein**.\n\n   :::image type=\"content\" source=\"~/assets/images/bots/searchazurebot.png\" alt-text=\"Ressource erstellen\" border=\"true\":::\n\n1. Drücken Sie die **EINGABETASTE**.\n\n1. Wählen Sie **Azure Bot** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/selectazurebot.png\" alt-text=\"Azure Bot auswählen\" border=\"true\":::\n\n1. Wählen Sie **Erstellen** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/createazurebot.png\" alt-text=\"Erstellen einer Azure-Bot-Karte\" border=\"true\":::\n\n   Eine Azure Bot-Seite erstellen wird angezeigt.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/azurebotpage.png\" alt-text=\"Azure Bot-Seite\" border=\"true\":::\n\n1. Geben Sie die folgenden Details ein, um azure bot zu erstellen.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/Azurebotcreate.png\" alt-text=\"Azure-Bot-Ressource erstellen\" border=\"true\":::\n\n    1. Geben Sie den Namen des erforderlichen Bot-Handle im **Bot-Handle** ein, und es ist ein eindeutiger Bezeichner für Ihren Bot.\n\n    1. Wählen Sie Ihr **Abonnement** aus der Dropdownliste aus.\n\n    1. Wählen Sie Ihre **Ressourcengruppe** aus der Dropdownliste aus, die Sie für Ihre Bot-App bereitstellen möchten.\n    \n     \n       Mit den folgenden Schritten können Sie auch eine neue Ressourcengruppe erstellen:\n\n          1. Um eine neue Ressourcengruppe zu erstellen, wählen **Sie \"Neue** > Geben Sie den Ressourcennamen ein> klicken Sie auf **\"OK**\".\n\n               :::image type=\"content\" source=\"~/assets/images/bots/newresourcecreation.png\" alt-text=\"Neue Ressourcenerstellung\" border=\"true\":::\n\n          1. Wenn Sie eine neue Ressourcengruppe erstellt haben, wählen Sie den erforderlichen Speicherort aus der Dropdownliste \" **Speicherort der neuen Ressourcengruppe** \" aus.\n    \n               :::image type=\"content\" source=\"~/assets/images/bots/newresource.png\" alt-text=\"Neue Ressource\" border=\"true\":::\n\n    1. Wählen Sie **\"App-Typ** \" als **\"Mehrere Mandanten\" aus**.\n\n        :::image type=\"content\" source=\"~/assets/images/bots/Review-Create.png\" alt-text=\"Erstellen von Rezensionen\" border=\"true\":::\n\n    1. Im Abschnitt **\"Microsoft-App-ID** \" ist standardmäßig \" **Neue Microsoft-App-ID erstellen** \" ausgewählt.\n\n       Sie können entweder \" **Vorhandene App-Registrierung verwenden\"** und \" **Vorhandene App-ID** und **vorhandenes App-Kennwort**\" eingeben oder \" **Neue Microsoft-App-ID erstellen\"** auswählen.\n\n       > [!NOTE]\n       > Sie können nicht mehr als einen Bot mit derselben **Microsoft App-ID** erstellen.\n\n    1. Wählen Sie **Überprüfen + erstellen** aus.\n\n1. Nachdem die Überprüfung erfolgreich war, wählen Sie **\"Erstellen\"** aus.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/validationpass.png\" alt-text=\"Gültigkeitsprüfungsdurchlauf\" border=\"true\":::\n\n   Es dauert einige Augenblicke, bis Ihr Botdienst bereitgestellt wird, und die folgende Seite wird angezeigt:\n\n     :::image type=\"content\" source=\"~/assets/images/bots/provisionpage.png\" alt-text=\"Bereitstellungsseite\" border=\"true\":::\n\n1. Wählen Sie **Zu Ressource wechseln** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/gotoresource.png\" alt-text=\"Ressource\" border=\"true\":::\n\n   Ihr Azure-Bot wird erstellt, und Sie können die **Ressourcengruppe** und **die Abonnement-ID** im Azure-Bot sehen.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/Azurebotresource.png\" alt-text=\"Azure-Bot-Ressource erstellt\" border=\"true\":::\n\n**So erstellen Sie den geheimen Clientschlüssel**\n\n Führen Sie die folgenden Schritte aus, um den geheimen Clientschlüssel zu erstellen:\n\n1. Wählen Sie im linken Bereich **\"Konfiguration**\" aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/selectconfigure.png\" alt-text=\"Wählen Sie &quot;Konfigurieren&quot; aus.\" border=\"true\":::\n\n   > [!Important]\n   > Speichern Sie die **Microsoft App-ID** oder **Client-ID** zur zukünftigen Referenz.\n\n1. Wählen Sie neben **\"Microsoft-App-ID**\" die Option **\"Verwalten\"** aus.\n\n      :::image type=\"content\" source=\"~/assets/images/bots/MicrosoftAppID.png\" alt-text=\"Microsoft App-ID\" border=\"true\":::\n\n1. Wählen Sie im Abschnitt \" **Geheime Clientschlüssel** \" die Option **\"Neuer geheimer Clientschlüssel**\" aus.\n\n      :::image type=\"content\" source=\"~/assets/images/bots/newclientsecret.png\" alt-text=\"Neuer geheimer Clientschlüssel\" border=\"true\":::\n\n   Das Fenster **\"Geheimen Clientschlüssel hinzufügen** \" wird angezeigt.\n\n1. Geben Sie **\"Beschreibung**\" ein.\n\n1. Klicken Sie auf **Hinzufügen**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/addclientsecret.png\" alt-text=\"Hinzufügen eines geheimen Clientschlüssels zur App\" border=\"true\":::\n\n1. Wählen Sie in der Spalte **\"Wert** \" **die Option \"In Zwischenablage kopieren\"** aus. \n\n    :::image type=\"content\" source=\"~/assets/images/bots/valueclientsecret.png\" alt-text=\"Wert des geheimen Clientschlüssels\" border=\"true\":::\n\n   > [!Important]\n   > Speichern Sie den Wert für **geheime Clientschlüssel** oder das App-Kennwort zur zukünftigen Referenz.\n   \n**Hinzufügen eines Bots zum Teams-Kanal**\n\n1. Wählen Sie **Start** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/selecthome.png\" alt-text=\"Homepage\" border=\"true\":::\n\n1. Wählen Sie Ihren Bot aus **den zuletzt verwendeten Ressourcen** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/selectrecentresources.png\" alt-text=\"Zuletzt verwendete Ressourcen auswählen\" border=\"true\":::\n\n1. Wählen Sie \" **Kanäle** \" im linken Bereich aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/selectchannel.png\" alt-text=\"Zuletzt verwendet auswählen\" border=\"true\":::\n\n1. Microsoft **Teams** auswählen <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>. \n\n    :::image type=\"content\" source=\"~/assets/images/bots/selectmicrosoftteams.png\" alt-text=\"Microsoft Teams auswählen\" border=\"true\":::\n\n1. Aktivieren Sie das Kontrollkästchen, um die **Nutzungsbedingungen** zu akzeptieren.\n\n1. Wählen Sie **\"Zustimmen\"** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/Terms-of-service.png\" alt-text=\"Bedingungen\" border=\"true\":::\n\n1. Wählen Sie **Anwenden** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/apply.png\" alt-text=\"Apply\" border=\"true\":::\n\n**So erstellen Sie einen Tunnel für den lokalen Webserver**\n\nVerwenden Sie ngrok, um einen Tunnel zu den öffentlich verfügbaren HTTPS-Endpunkten Ihres lokal ausgeführten Webservers zu erstellen. Führen Sie den folgenden Befehl in ngrok aus:\n\n   ```bash\n   ngrok http -host-header=localhost 3978\n   ```\n   > [!TIP]\n   > Wenn **ERR_NGROK_4018** auftreten, führen Sie die Schritte aus, wie in der Eingabeaufforderung angezeigt, um ngrok zu registrieren und zu authentifizieren. Führen Sie anschließend den Befehl `ngrok http -host-header=localhost 3978` aus.\n\n**So fügen Sie den Messaging-Endpunkt hinzu**\n\n1. Kopieren Sie von ngrok die HTTPS-URL.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/ngrokURL.png\" alt-text=\"ngrok HTTPS-URL\" border=\"true\":::\n\n    > [!NOTE]\n    > Die HTTPS-URL in Ihrer ngrok ist Ihr vollqualifizierter Domänenname. Dies `WebAppDomain` ist ein vollqualifizierter Domänenname, der nicht darin enthalten `https://` ist.\n\n1. Wechseln Sie zurück zum Azure-Portal.\n\n1. Wählen Sie in **den Einstellungen** für den von Ihnen erstellten Azure-Bot **die Option \"Konfiguration**\" aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/selectconfiguration.png\" alt-text=\"Konfiguration auswählen\" border=\"true\":::\n\n1. Verwenden Sie im **Messaging-Endpunkt** die https-URL, die von ngrok verfügbar ist, und fügen Sie am Ende der URL **\"/api/messages**\" hinzu.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/messagingURL.png\" alt-text=\"Messaging-Endpunkt\" border=\"true\":::\n\n1. Wählen Sie **Anwenden** aus.\n\n    Sie haben erfolgreich einen Bot in Azure Bot Service eingerichtet.\n"
- title: Konfigurieren von SSO für Ihren Bot
  durationInMinutes: 5
  content: "**So fügen Sie der Azure-Botressource den Umleitungs-URI hinzu**\n\n1. Wählen Sie **Verwalten** aus.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/MicrosoftAppID.png\" alt-text=\"Verwalten der App-ID\" border=\"true\":::\n\n1. Wählen Sie im linken Bereich die Option **\"Authentifizierung**\" aus.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/selectauthentication.png\" alt-text=\"Authentifizierung auswählen\" border=\"true\":::\n\n1. Wählen Sie in **Plattformkonfigurationen** \" **Plattform hinzufügen\"** aus, um die Plattform auszuwählen, auf der Sie die Bot-App hosten möchten. \n\n    :::image type=\"content\" source=\"~/assets/images/bots/addaplatform.png\" alt-text=\"Hinzufügen einer Plattform\" border=\"true\":::\n\n1. Für dieses Lernprogramm wählen Sie **\"Web\" aus**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/selectweb.png\" alt-text=\"Web auswählen\" border=\"true\":::\n    \n1. Geben Sie **Umleitungs-URIs** ein, da `https://token.botframework.com/.auth/web/redirect` dies der URI ist, auf den Azure AD die Antwort für die Benutzerauthentifizierung sendet.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/redirectURI1.png\" alt-text=\"Umleitungs-URI 1\" border=\"true\":::\n\n1. Aktivieren Sie **implizite Genehmigungs- und Hybridflüsse** , indem Sie die folgenden Kontrollkästchen aktivieren:\n\n    * **ID-Token**\n    * **Zugriffstoken**\n\n1. Wählen Sie **Konfigurieren** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/selectimplictgrant.png\" alt-text=\"Wählen Sie &quot;Implizct Grant&quot; aus.\" border=\"true\":::\n\n    Der Umleitungs-URI wird der Azure-Botressource hinzugefügt.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/redirectURIadded.png\" alt-text=\"Umleitungs-URI zur Botressource hinzugefügt\" border=\"true\":::\n\n**So machen Sie DEN API-Endpunkt verfügbar**\n\n1. Wählen Sie im linken Bereich \" **API verfügbar machen**\" aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/exposeanapi.png\" alt-text=\"Bereitstellen einer API\" border=\"true\":::\n\n1. Wählen Sie **\"Festlegen\" aus**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/appidURI.png\" alt-text=\"Anwendungs-ID-URI\" border=\"true\":::\n\n1. Verwenden Sie den angezeigten Anwendungs-ID-URI, und fügen Sie **api://botid-** am Anfang des URI an.\n\n1. Wählen Sie **Speichern**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/exposeAPI.png\" alt-text=\"Bereitstellen einer API\" border=\"true\":::\n\n   > [!Important]\n   > Speichern Sie den **Anwendungs-ID-URI** zur zukünftigen Referenz.\n\n1. Wählen Sie **Bereich hinzufügen**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/Addascope.png\" alt-text=\"Bereitstellen einer API\" border=\"true\":::\n\n   Ein Bereichsbereich hinzufügen wird angezeigt.\n\n1. Geben Sie die Details zum Konfigurieren des Bereichs ein.    \n\n     :::image type=\"content\" source=\"~/assets/images/bots/addscope.png\" alt-text=\"Hinzufügen eines Bereichs zur App\" border=\"true\":::\n\n      1. Geben Sie `access_as_user` als **Bereichsnamen** ein.\n\n         > [!NOTE]\n         > Der **Bereichsname** sollte mit dem **Anwendungs-ID-URI** übereinstimmen, `/access_as_user` der am Ende angefügt ist.\n\n      1. Legen Sie **fest, wer zustimmen kann?** auf `Admins and users`.\n\n      1. Geben Sie die folgenden Informationen in den Feldern an, um die Aufforderungen zur Administrator- und Benutzerzustimmung mit den entsprechenden Werten für `access_as_user` den Bereich zu konfigurieren:</br>\n\n          * Als **Anzeigename der Administratorzustimmung** eingeben `Teams can access the user’s profile`\n\n          * Beschreibung der **Administratorzustimmung** eingeben `Allows Teams to call the app’s web APIs as the current user`\n\n          * Als **Anzeigename der Benutzerzustimmung** eingeben `Teams can access the user profile and make requests on the user’s behalf`\n\n          * Als **Beschreibung der Zustimmung des Benutzers** eingeben `Enable Teams to call this app’s APIs with the same rights as you have`\n\n      1. Stellen Sie sicher, **Zustand** auf **Aktiviert** festgelegt ist.\n\n1. Wählen Sie **\"Zu speichernden Bereich hinzufügen\"** aus.\n\n   Ihr Anwendungs-ID-URI wird mit **dem Bereichsnamen** erstellt.\n\n      :::image type=\"content\" source=\"~/assets/images/bots/ExposeAPIandaddscope.png\" alt-text=\"API verfügbar gemacht und Bereich hinzugefügt\" border=\"true\":::\n\n1. Identifizieren Sie im Bereich **Autorisierte Clientanwendungen** die Anwendungen, die Sie für die Webanwendung Ihrer App autorisieren möchten.\n\n1. **Hinzufügen einer Clientanwendung** auswählen.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/addaclientapplication.png\" alt-text=\"Hinzufügen einer Clientanwendung\" border=\"true\":::\n\n   Ein Clientanwendungsbereich hinzufügen wird angezeigt.\n\n1. Geben Sie die Client-ID für Desktop- und Webanwendung separat ein, die Sie autorisieren möchten. Es ist die Anwendungs-ID der Clientanwendung, die Sie autorisieren möchten.\n   \n   |**Client-ID**|**Zur Autorisierung**|\n   |--------|-------------|\n   | `1fec8e78-bce4-4aaf-ab1b-5451cc387264` | Teams-Desktop- oder mobile Anwendung |\n   | `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` | Teams-Webanwendung |\n\n1. Wählen Sie **autorisierte Bereiche** aus, um zu bestimmen, welcher Tokentyp vom Dienst zurückgegeben wird.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/add-desktop-app.png\" alt-text=\"Hinzufügen einer Clientanwendung zur App\" border=\"true\":::\n   \n1. Wählen Sie **Anwendung hinzufügen** aus.\n\n    Die folgende Abbildung zeigt die Client-ID:\n\n      :::image type=\"content\" source=\"~/assets/images/bots/clientapps.png\" alt-text=\"Client-Apps\" border=\"true\":::\n\n**Konfigurieren von Graph-Berechtigungen**\n\n1. Wählen Sie im linken Bereich **API-Berechtigungen aus**.\n\n      :::image type=\"content\" source=\"~/assets/images/bots/selectapipermissions.png\" alt-text=\"API-Berechtigungen auswählen\" border=\"true\":::\n\n   > [!NOTE]\n   > Benutzer müssen den API-Berechtigungen nur zustimmen, wenn die Bot-App in einem anderen Mandanten registriert ist.\n\n1. Wählen Sie **Berechtigung hinzufügen** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/configure-permission.png\" alt-text=\"API-Benutzerberechtigungen\" border=\"true\":::\n\n   Die Seite \"API-Berechtigung anfordern\" wird angezeigt:\n\n1. Wählen Sie **Microsoft Graph aus**.\n    \n    :::image type=\"content\" source=\"~/assets/images/bots/selectmicrosoftgraph.png\" alt-text=\"Microsoft Graph auswählen\" border=\"true\":::\n\n1. Wählen Sie **Delegierte Berechtigungen** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-graph-permissions.png\" alt-text=\"Graph-Berechtigungen auswählen\" border=\"true\":::\n\n1. Wählen Sie in der Dropdownliste \"**Benutzer**\" die Berechtigung \"**User.Read**\" aus.\n\n1. Wählen Sie **Berechtigungen hinzufügen** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/userread.png\" alt-text=\"Benutzerlesevorgang\" border=\"true\":::\n\n**So aktualisieren Sie das Manifest**\n\n1. Wählen Sie im linken Bereich \" **Manifest\"** aus.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/selectmanifest.png\" alt-text=\"Manifest auswählen\" border=\"true\":::\n\n1. Stellen Sie sicher, dass das Konfigurationselement auf **\"accessTokenAcceptedVersion\": 2** eingestellt ist. Wenn nicht, ändern Sie den Wert in **\"2** \", und wählen Sie **\"Speichern\"** aus.\n\n   > [!NOTE]\n   > Wenn Sie Ihren Bot bereits in Teams testen, müssen Sie sich von dieser App und Teams abmelden. Melden Sie sich dann erneut an, um diese Änderung zu sehen.</br>\n    \n      :::image type=\"content\" source=\"~/assets/images/bots/update-manifest.png\" alt-text=\"Aktualisieren des Manifests\" border=\"true\":::\n\n**So richten Sie eine Bot-Dienstverbindung ein**\n\n1. Wählen Sie **auf der Seite \"Konfiguration**\" die Option **\"OAuth-Verbindungseinstellungen hinzufügen\"** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/selectconfiguration1.png\" alt-text=\"Konfiguration auswählen1\" border=\"true\":::\n\n    :::image type=\"content\" source=\"~/assets/images/bots/botserviceconnection.png\" alt-text=\"Bot-Dienstverbindung\" border=\"true\":::\n\n1. Geben Sie auf der Seite **\"Neue Verbindungseinstellung\"** die folgenden Details ein:\n\n    | Feld | Wert oder Beschreibung |\n    | ----- | ----- |\n    | Name | Geben Sie den Namen für die neue Verbindungseinstellung ein. Sie können den Namen in den Einstellungen Ihres Botdienstcodes verwenden. |\n    | Service Provider | Wählen Sie **Azure Active Directory V2** aus. |\n    | Client-ID | Zuvor als **Ihre Microsoft App-ID** gespeichert. |\n    | Geheimer Clientschlüssel | Zuvor als **Wert** der geheimen Client-ID gespeichert. |\n    | Exchange-Token-URL | Verwenden Sie die zuvor abgerufene **Anwendungs-ID-URL** beim Verfügbarmachen des API-Endpunkts. |\n    | Mandanten-ID | Geben Sie **\"Common\" ein**. |\n    | Scopes | Geben Sie **User.Read** ein, und fügen Sie alle erforderlichen **Bereiche** hinzu, während Sie Berechtigungen für nachgeschaltete APIs angeben. |\n\n1. Wählen Sie **Speichern**.\n\n1. Wählen Sie **Anwenden** aus.\n\n   Sie haben jetzt SSO für Ihren Bot konfiguriert.\n"
- title: Konfigurieren und Ausführen ihres Bot-Beispiels
  durationInMinutes: 1
  content: "1. Öffnen Sie **Visual Studio**.\n\n1. Wählen Sie **Klonen eines Repositorys** aus.\n\n1. Geben Sie `https://github.com/OfficeDev/Microsoft-Teams-Samples.git`am **Speicherort des Repositorys** ein. Stellen Sie sicher, dass Sie den **Pfad** notieren, in dem das Repository geklont wird.\n\n1. Navigieren Sie zu **\"Projekt****/Projekt öffnen** > \" > .\n\n    :::image type=\"content\" source=\"~/assets/images/bots/project-solution.png\" alt-text=\"Bot-Dienstverbindung\" border=\"true\":::\n\n1. Wählen Sie die Datei **\"BotSSOCSharp.csproj** \" aus **csharp_dotnetcore** Ordner aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/filepath.png\" alt-text=\"Dateipfad\" border=\"true\":::\n\n1. Öffnen Sie die Datei **\"appsettings.json** \".\n\n1. Aktualisieren Sie die **appsettings.json-Konfiguration** für den Bot, um die `MicrosoftAppId` `MicrosoftAppPassword`und zu verwenden. Verwenden Sie den OAuth-Verbindungsnamen als **Verbindungsnamen**.\n\n    > [!NOTE]\n    > Sie können die `MicrosoftAppId` Seite \"Konfiguration\" des Bots abrufen. Dies `MicrosoftAppPassword` ist der Wert für die geheime Client-ID, die Sie zuvor in Azure gespeichert haben.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/appsettingsjson.png\" alt-text=\"Appsettings json\" border=\"true\":::\n\n1. Wählen Sie **F5**  aus, um das Projekt auszuführen.\n\n1. Wählen Sie **Ja** aus, wenn das folgende Dialogfenster angezeigt wird:\n\n    :::image type=\"content\" source=\"~/assets/images/bots/certificate.png\" alt-text=\"Ca\" border=\"true\":::\n\n   Eine Webseite mit der Nachricht **\"Bot ist bereit\" wird** geöffnet.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/yourbot.png\" alt-text=\"Ca\" border=\"true\":::\n    \n    <br>\n\n    <details>\n\n    <summary><b>Problembehandlung</b></summary>\n\n    Wenn der **Paketfehler \"Nicht gefunden** \" angezeigt wird, führen Sie die folgenden Schritte aus:\n\n    1.  Wechseln Sie zu **Den Einstellungen** >  des **NuGet-Paket-Manager-Paket-Managers** > .\n    1.  Wählen Sie im daraufhin angezeigten Fenster **\"Optionen**\" **die Option \"NuGet-Paket-Manager-Paketquellen** > \"**aus**.\n    1.  Klicken Sie auf **Hinzufügen**.\n    1.  Geben Sie **in \"Name**\" `nuget.org` und \" **Source\" die** Eingabetaste ein `https://api.nuget.org/v3/index.json`.\n    1.  Wählen Sie **\"Aktualisieren\"** und **\"OK**\" aus.\n    1.  Erstellen Sie Ihr Projekt neu.\n    <br>\n\n    </details>\n"
- title: Konfigurieren und Ausführen der Teams-App
  durationInMinutes: 2
  content: "1. Öffnen Sie in Visual Studio den Ordner **\"appPackage** \".\n\n1. Öffnen Sie die Datei **manifest.json** .\n\n1. Ersetzen Sie alle Vorkommen von **{TODO: MicrosoftAppId}** durch die **Microsoft App-ID** Ihres Bots.\n\n1. Navigieren Sie in Ihrem geklonten Repository zu **bot-conversation-sso-quickstart > csharp_dotnetcore > appPackage-Ordner** .\n\n1. Erstellen Sie eine .zip mit den folgenden Dateien, die im **Manifestordner** vorhanden sind: \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n    :::image type=\"content\" source=\"~/assets/images/bots/manifest.png\" alt-text=\"Manifest\" border=\"true\":::\n\n1. Wechseln Sie zum Teams-Client.\n1. Wählen Sie **\"Store\"** aus.\n1. Wählen Sie **Verwalten Ihrer Apps** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/manage-your-app.png\" alt-text=\"Verwalten Ihrer App\" border=\"true\":::\n\n1. Wählen Sie **Benutzerdefinierte App hochladen** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/upload-custom-app.png\" alt-text=\"Benutzerdefinierte App hochladen\" border=\"true\":::\n\n1. Wählen Sie **\"Öffnen** \" aus, um die .zip Datei hochzuladen, die Sie im **Manifestordner** erstellt haben.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/open-app.png\" alt-text=\"App öffnen\" border=\"true\":::\n\n1. Wählen Sie **\"Hinzufügen\"** aus, um den Unterhaltungs-Bot zu Ihrem Chat hinzuzufügen.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/add-conversation-bot.png\" alt-text=\"Unterhaltungs-Bot hinzufügen\" border=\"true\":::\n\n    Sie können mit dem Bot interagieren, indem Sie eine Nachricht senden. Der Bot tauscht ein SSO-Token aus und ruft die Graph-API in Ihrem Auftrag auf. Sie bleiben angemeldet, es sei denn, Sie senden eine Nachricht zum **Abmelden**.\n\n1. Senden Sie eine Nachricht an den Bot. Der Unterhaltungs-Bot bittet zum ersten Mal um Zustimmung.\n\n1. Wählen Sie **\"Weiter\"** aus, um dem Teams-Client Berechtigungen für den Zugriff auf den Bot zu erteilen.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/sbsdesktop-mobile-consent-request1.png\" alt-text=\"Berechtigungen für Bots\" border=\"true\":::\n    \n    > [!NOTE]\n    > Jetzt haben Sie SSO mit Ihrer Bot-App konfiguriert und es ist das einzige Mal, dass Sie ihre Zustimmung geben müssen.\n\n1. Wählen Sie für mobile Geräte **die Option \"Für** **angeforderte Berechtigungen** akzeptieren\" aus.\n\n    > [!NOTE]\n    > Jetzt haben Sie SSO mit Ihrer Bot-App auf Mobilgeräten konfiguriert, und es ist das einzige Mal, dass Sie ihre Zustimmung geben müssen.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/sbsdesktop-mobile-consent-request.png\" alt-text=\"Bei Bot angemeldetes Mobile\" border=\"true\":::\n"
- title: Vollständige Herausforderung
  durationInMinutes: 1
  content: >
    Sind Sie auf so etwas gekommen?

     :::image type="content" source="~/assets/images/bots/sbs-desktop-mobile.png" alt-text="Bei Bot angemeldetes Mobile" border="true":::
- content: Sie haben das Lernprogramm für die ersten Schritte mit dem Erstellen eines Bots mit SSO-Authentifizierung abgeschlossen.
