### YamlMime:Tutorial
title: Registerkarte "Erstellen" mit adaptiven Karten
metadata:
  title: Registerkarte "Erstellen" mit adaptiven Karten
  description: In diesem Lernprogramm erfahren Sie, wie Sie adaptive Karten auf einer Registerkarte für Teams einrichten.
  audience: Developer
  level: Beginner
  ms.date: 12/23/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: tabs/how-to/authentication/tab-sso-overview.md
  nextTutorialTitle: Weitere Informationen zur Registerkartenauthentifizierung
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 38b8d2c6aab61bbe2f96205a4ec3415ab8a47e1a
  ms.sourcegitcommit: e16b51a49756e0fe4eaf239898e28d3021f552da
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 06/04/2022
  ms.locfileid: "65887639"
items:
- durationInMinutes: 1
  content: >
    Registerkarten mit adaptiven Karten sind eine neue Möglichkeit zum Erstellen von Registerkarten in Teams. Anstatt Webinhalte in einen IFrame einzubetten, können Sie adaptive Karten auf einer Registerkarte rendern. Während das Front-End mit adaptiven Karten gerendert wird, wird das Back-End von einem Bot unterstützt. Der Bot ist dafür verantwortlich, Anforderungen zu akzeptieren und mit der gerenderten adaptiven Karte angemessen zu reagieren.


    Sie können Ihre Registerkarten mit relevanten Benutzeroberflächenbausteinen erstellen, die auf Desktop, Web und Mobilgeräten nativ sind.


    Dieser Artikel hilft Ihnen dabei, Folgendes zu verstehen:


    * Die erforderlichen Änderungen am App-Manifest.

    * Gibt an, wie die Aufrufaktivität Informationen auf der Registerkarte mit adaptiven Karten anfordert und sendet.

    * Auswirkung auf den Aufgabenmodulworkflow.


    Diese schrittweise Anleitung hilft Ihnen beim Erstellen von Registerkarten mit adaptiven Karten auf dem Desktop und mobilen Geräten. Die folgende Ausgabe wird angezeigt:


    ![Screenshot von Desktop Mobile](~/assets/images/adaptive-cards/desktop-mobile-screenshot.png)
- title: Voraussetzungen
  durationInMinutes: 1
  content: >
    Stellen Sie sicher, dass Sie die folgenden Tools installieren und Ihre Entwicklungsumgebung einrichten


    * Microsoft Teams mit einem Konto (kein Gastkonto).

    * [Visual Studio Code](https://code.visualstudio.com/)

    * [.NET Core SDK](https://dotnet.microsoft.com/download) , Version 3.1

    * [ngrok](https://ngrok.com/) oder [Tunnelrelay](https://github.com/OfficeDev/microsoft-teams-tunnelrelay)

    * [Microsoft 365-Entwicklerkonto](https://docs.microsoft.com/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) oder Zugriff auf das Teams-Konto mit den entsprechenden Berechtigungen zum Installieren einer App.
- title: Erstellen einer Bot-Registrierung im Microsoft Azure-Portal
  durationInMinutes: 2
  content: "Registerkarten für adaptive Karten erfordern Azure Bot Service zum Erstellen von Registerkarten in Teams. Registrieren Sie den Bot bei Azure Bot Service, wenn Sie ihn in Azure entwickeln und hosten. Führen Sie folgende Schritte aus:\n1. Verwenden Sie ngrok, um einen Tunnel zu den Endpunkten Ihres Webservers zu erstellen.\n1. Erstellen Sie eine Azure Bot-Ressource, um den Bot bei Azure Bot Service zu registrieren.\n1. Erstellen Sie einen geheimen Clientschlüssel, der die SSO-Authentifizierung des Bots ermöglicht.\n1. Fügen Sie den Microsoft Teams-Kanal hinzu, um den Bot in einem Teams-Kanal bereitzustellen.\n1. Fügen Sie dem von Ihnen erstellten ngrok-Tunnel den Messaging-Endpunkt hinzu.\n\nVerwenden Sie ngrok, um einen Tunnel zu den öffentlich verfügbaren HTTPS-Endpunkten Ihres lokal ausgeführten Webservers zu erstellen. Führen Sie den folgenden Befehl in ngrok aus:\n\n```bash\nngrok http -host-header=rewrite 3978\n```\n\n**So erstellen Sie eine Azure Bot-Ressource**\n\n1. Öffnen Sie [das Azure-Portal](https://portal.azure.com/).\n1. Wählen Sie **Ressource erstellen** aus.\n1. Suchen Sie im Suchfeld nach **einem Azure-Bot** .\n1. Wählen Sie **Azure Bot** aus.\n\n    ![Azure Bot](~/assets/images/adaptive-cards/azure-bot.png)\n\n1. Wählen Sie **Erstellen** aus.\n1. Geben Sie den Namen des Bot-Handle in das Feld **Bot-Handle** ein.\n1. Wählen Sie Ihr **Abonnement** aus der Dropdownliste aus.\n1. Wählen Sie Ihre **Ressourcengruppe** aus der Dropdownliste aus.\n    \n    Um eine neue Ressourcengruppe zu erstellen, wählen **Sie \"Neu erstellen**\", geben Sie den Ressourcennamen ein, wählen Sie **\"OK**\" aus, und wählen Sie \"Erforderlicher Speicherort\" aus der Dropdownliste \" **Speicherort der neuen Ressourcengruppe** \" aus.\n\n1. Wählen Sie den **App-Typ** als **Mehrinstanzenfähig** für die **Microsoft-App-ID** aus.\n\n    ![Mehrinstanzenfähig](~/assets/images/adaptive-cards/multi-tenant.png)\n\n    > [!NOTE]\n    > Im Abschnitt **\"Erstellungstyp** der Microsoft-App-ID\" ist \" **Neue Microsoft-App-ID erstellen** \" bereits ausgewählt, um einen neuen Bot zu erstellen. Sie können auch die Option \" **Vorhandene App-Registrierung verwenden**\" auswählen, wenn Sie bereits einen Bot registriert haben. Geben Sie die Microsoft-App-ID in das Feld \" **Vorhandene App-ID\"** ein, und geben Sie den Wert in das Feld \" **Vorhandenes App-Kennwort\"** ein.\n\n1. Wählen Sie **Überprüfen + erstellen** aus.\n\n    ![Erstellen von Azure Bot](~/assets/images/adaptive-cards/create-azure-bot.png)\n\n1. Wenn die Prüfung bestanden wurde, wählen Sie **Erstellen** aus.\n\n    Es dauert einige Augenblicke, bis Ihr Botdienst bereitgestellt wurde.\n\n    ![Azure Bot-Prüfung](~/assets/images/adaptive-cards/validation-pane.png)\n\n1. Wählen Sie **Zu Ressource wechseln** aus. Der Bot und die zugehörigen Ressourcen werden in der Ressourcengruppe aufgeführt.\n\n    ![Hilfreiche Ressource:](~/assets/images/adaptive-cards/go-to-resource-card.png)\n\n    Jetzt wird Ihr Azure-Bot erstellt.\n\n    ![Azure-Bot-Ressource erstellt](~/assets/images/adaptive-cards/azure-bot-ui.png)\n\n**So erstellen Sie den geheimen Clientschlüssel**\n\n1. Wählen Sie in **Einstellungen** die Option **Konfiguration** aus. Speichern Sie die **Microsoft App-ID** (Client-ID) zur zukünftigen Referenz.\n\n    ![Microsoft App-ID](~/assets/images/adaptive-cards/config-microsoft-app-id.png)\n\n    > [!NOTE]\n    > Stellen Sie sicher **, dass \"MultiTenant** \" unter **\"Bottyp**\" ausgewählt ist.\n\n1. Wählen Sie neben der **Microsoft App-ID** die Option **Verwalten** aus.\n\n    ![Bot verwalten](~/assets/images/adaptive-cards/manage-bot-label.png)\n\n1. Wählen Sie im Abschnitt **Geheime Clientschlüssel** die Option **Neuer geheimer Clientschlüssel** aus. Das Fenster **Geheimen Clientschlüssel hinzufügen** wird angezeigt.  \n\n    ![Neuer geheimer Clientschlüssel](~/assets/images/adaptive-cards/new-client-secret.png)\n\n1. Geben Sie **Beschreibung** ein, und wählen Sie **Hinzufügen** aus.\n\n    ![Geheimer Clientschlüssel](~/assets/images/adaptive-cards/client-secret.png)\n\n1. Wählen Sie in der Spalte **Wert** **In Zwischenablage kopieren** aus, und speichern Sie die Clientgeheimnis-ID zur späteren Referenz.\n\n    ![Wert des geheimen Clientschlüssels](~/assets/images/adaptive-cards/client-secret-value.png)\n   \n**So fügen Sie den Microsoft Teams-Kanal hinzu**\n\n1. Wechseln Sie zu **Startseite**.\n\n    ![Bot-Homepage](~/assets/images/adaptive-cards/bot-home-page.png)\n\n1. Öffnen Sie Ihren Bot, der im Abschnitt **Zuletzt verwendete Ressourcen** aufgeführt ist.\n1. Wählen Sie \"**Kanäle**\" im linken Bereich und dann **\"Teams**\" aus. <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n    ![Kanal Teams](~/assets/images/adaptive-cards/channel-teams.png)\n\n1. Aktivieren Sie das Kontrollkästchen, um die Nutzungsbedingungen zu akzeptieren, und wählen Sie **Zustimmen** aus.</br>\n\n    ![Wählen Sie Vertragsbedingungen](~/assets/images/adaptive-cards/select-terms-of-service.png)\n\n1. Wählen Sie **Speichern**.\n\n    ![Wählen Sie Teams](~/assets/images/adaptive-cards/select-teams.png)\n\n**So fügen Sie den Messaging-Endpunkt hinzu**\n\n1. Wechseln **Sie zur Startseite**, und wählen Sie im linken Bereich unter **\"Einstellungen\"** die Option **\"Konfiguration**\" aus.\n1. Wechseln Sie zu ngrok.\n1. Kopieren Sie die HTTPS-URL (https to io) wie in der folgenden Abbildung dargestellt:\n\n    ![ngrok HTTPS-URL](~/assets/images/adaptive-cards/ngrok-url.png)\n\n1. Fügen Sie im **Messaging-Endpunkt** die von ngrok generierte HTTPS-URL hinzu, und fügen Sie am Ende der URL **\"/api/messages**\" hinzu.\n\n    ![Messaging-Endpunkt](~/assets/images/adaptive-cards/ngrok-messaging-endpoint.png)\n\n1. Wählen Sie **Anwenden** aus.\n\n    Sie haben erfolgreich einen Bot in Azure Bot Service eingerichtet, und jetzt müssen Sie eine Bot-Dienstverbindung einrichten.\n"
- title: Einrichten der Botdienstverbindung
  durationInMinutes: 5
  content: "Um sicherzustellen, dass der Bot-Dienst dem Benutzer die Anmeldung und den Zugriff auf den Bot ermöglicht, müssen Sie SSO für Ihren Bot konfigurieren. Führen Sie dazu die folgenden Schritte aus:\n\n1. Hinzufügen des Umleitungs-URI zur Azure-Botressource\n1. API-Endpunkt verfügbar machen\n1. Autorisieren von Clientanwendungen\n1. Hinzufügen aller erforderlichen API-Berechtigungen für nachgeschaltete Aufrufe\n1. Implizite Gewährung aktivieren\n1. Aktualisieren des Manifests\n1. Einrichten der Bot-Dienstverbindung\n\n**So fügen Sie der Azure-Botressource den Umleitungs-URI hinzu**\n\n1. Wählen Sie \" **Verwalten\"** neben **\"Microsoft-App-ID**\" aus.\n\n    ![Bot verwalten](~/assets/images/adaptive-cards/manage-bot-label.png)\n\n1. Wählen Sie im linken Bereich Ihrer Botressource die **Option \"Authentifizierung** \" aus.\n1. Wählen Sie unter **Plattformkonfigurationen** die Option **Plattform hinzufügen** aus.\n1. Klicken Sie auf **Web**.\n1. Geben Sie **Umleitungs-URIs** ein, `https://token.botframework.com/.auth/web/redirect` und wählen Sie **\"Konfigurieren\" aus**.\n\n    ![Konfigurieren der Webumleitungs-URL](~/assets/images/adaptive-cards/configure-web-redirect-url.png)\n\n    Der Umleitungs-URI wird der Azure-Botressource hinzugefügt.\n\n    ![Webumleitungs-URL anzeigen](~/assets/images/adaptive-cards/web-redirect-url-display.png)\n\n**So machen Sie DEN API-Endpunkt verfügbar**\n\n1. Wählen Sie im linken Bereich \" **API verfügbar machen** \" aus.\n1. Wählen Sie \"Für den Anwendungs-ID-URI **festlegen** \" aus.\n1. Verwenden Sie die **Anwendungs-ID-URL**, die anstelle der `https://` **ngrok-URL** angezeigt und angefügt `api://` wird, und fügen Sie sie am Anfang der App-ID-URL hinzu.\n\n    ![App-ID-URI](~/assets/images/adaptive-cards/app-id-url.png)\n\n1. Wählen Sie **Speichern** aus.\n1. Wählen Sie **Bereich hinzufügen**.\n1. Geben Sie **im Bereichsnamen** **access_as_user** ein.\n1. Wechseln Sie in **\"Wer kann zustimmen?\"**, zu **\"Administratoren und Benutzer**\".\n1. Geben Sie die folgenden Werte in die Felder ein:\n\n    | Feld | Wert |\n    | ----- | ----- |\n    | Anzeigename der Administratorzustimmung | Teams können auf das Profil des Benutzers zugreifen. |\n    | Beschreibung der Administratorzustimmung | Ermöglicht Teams das Aufrufen der Web-APIs der App als aktueller Benutzer. |\n    | Anzeigename der Benutzerzustimmung | Teams kann auf Ihr Benutzerprofil zugreifen und Anforderungen in Ihrem Auftrag stellen |\n    | Beschreibung der Benutzer-Zustimmung | Aktivieren Sie Teams, um die APIs dieser App mit den gleichen Rechten wie Sie aufzurufen. |\n\n1. Stellen Sie sicher, **Zustand** auf **Aktiviert** festgelegt ist.\n\n    ![Hinzufügen eines Bereichs](~/assets/images/adaptive-cards/add-scope.png)\n\n1. Klicken Sie auf **Bereich hinzufügen**. Der Bereichsname stimmt automatisch mit dem Anwendungs-ID-URI überein, wobei **/access_as_user** am Ende hinzugefügt wurde.\n\n**So autorisieren Sie Clientanwendungen**\n\nFügen Sie die folgenden IDs als **autorisierte Clientanwendungen** hinzu, aktivieren Sie das Kontrollkästchen für **autorisierte Bereiche** , und wählen **Sie \"Anwendung hinzufügen\"** aus.      \n* 1fec8e78-bce4-4aaf-ab1b-5451cc387264 (mobile Teams- oder Desktopanwendung)            \n* 5e3ce6c0-2b1f-4285-8d4b-75ee78787346 (Teams-Webanwendung)</br>\n\n    ![Hinzufügen einer Clientanwendung](~/assets/images/adaptive-cards/add-client-aapplication.png)      \n\n**So fügen Sie die erforderlichen API-Berechtigungen für nachgeschaltete Aufrufe hinzu**\n\n1. Wählen Sie im linken Bereich **API-Berechtigungen** aus.\n1. Wählen Sie **Berechtigung hinzufügen** aus. **Das Fenster \"API-Berechtigungen anfordern** \" wird angezeigt.\n1. Wählen Sie **Microsoft-APIs aus**. Wählen Sie dann **Microsoft Graph** und **dann delegierte Berechtigungen** aus.\n1. Fügen Sie alle **delegierten Benutzerberechtigungen** hinzu, die Ihre App für nachgeschaltete APIs benötigt, z. B. User.Read.</br>\n\n    ![API-Berechtigungen](~/assets/images/adaptive-cards/add-permissions.png)\n\n**So aktivieren Sie die implizite Gewährung**\n\n1. Wählen Sie im linken Bereich **Authentifizierung** aus.\n1. Aktivieren Sie Kontrollkästchen **für Zugriffstoken** und **ID-Token** .</br>\n\n    ![Authentifizierungstoken](~/assets/images/adaptive-cards/authentication-tokens.png)\n\n1. Wählen Sie **Speichern** aus, um die Änderungen zu speichern.\n\n**So aktualisieren Sie das Manifest**\n\n1. Wählen Sie im linken Bereich **Manifest** aus.\n1. Stellen Sie sicher, dass das Konfigurationselement auf **\"accessTokenAcceptedVersion\": 2** eingestellt ist. Wenn nicht, ändern Sie den Wert in **\"2** \", und wählen Sie **\"Speichern\"** aus.\n    \n    > [!NOTE]\n    > Wenn Sie Ihren Bot bereits in Teams testen, müssen Sie diese App abmelden und Teams abmelden. Melden Sie sich dann erneut an, um diese Änderung zu sehen.\n\n    ![Manifest aktualisieren](~/assets/images/adaptive-cards/manifest.png)\n\n**So richten Sie die Bot-Dienstverbindung ein**\n\n1. Wechseln **Sie zur Startseite**, und wählen Sie im linken Bereich unter **\"Einstellungen\"** die Option **\"Konfiguration**\" aus.\n1. Wählen Sie **OAuth-Verbindungseinstellungen hinzufügen** aus.\n1. Geben Sie unter **\"Neue Verbindungseinstellung**\" die folgenden Details ein:\n\n    | Feld | Wert oder Beschreibung |\n    | ----- | ----- |\n    | Name | Geben Sie den Namen für die neue Verbindungseinstellung ein. Sie können den Namen in den Einstellungen Ihres Botdienstcodes verwenden. |\n    | Service Provider | Wählen Sie **Azure Active Directory V2** aus. |\n    | Client-ID | Zuvor als **Ihre Microsoft App-ID** gespeichert. |\n    | Geheimer Clientschlüssel | Zuvor als **Wert** der geheimen Client-ID gespeichert. |\n    | Exchange-Token-URL | Verwenden Sie die zuvor abgerufene **Anwendungs-ID-URL** beim Verfügbarmachen des API-Endpunkts. |\n    | Mandanten-ID | Geben Sie **\"Common\" ein**. |\n    | Scopes | Geben Sie **User.Read** ein, und fügen Sie alle erforderlichen **Bereiche** hinzu, während Sie Berechtigungen für nachgeschaltete APIs angeben. |\n\n    :::image type=\"content\" source=\"./assets/images/adaptive-cards/oauth-connection-setting.png\" alt-text=\"Bot-Dienstverbindung\":::\n\n1. Wählen Sie **Speichern** aus.\n"
- title: Konfigurieren des Bots
  durationInMinutes: 1
  content: >
    Konfigurieren Sie das Bot-Beispiel, um zu verstehen, wie Unterhaltungsbots in Microsoft Teams authentifiziert werden.


    **So konfigurieren und führen Sie Ihr Bot-Beispiel aus**


    1. Wechseln Sie zum Repository https://github.com/OfficeDev/Microsoft-Teams-Samples.git.

    1. Wählen Sie **"Code** " und dann die Dropdownliste aus.

    1. Wählen Sie **"ZIP herunterladen"** aus.

        ![Repository herunterladen](~/assets/images/adaptive-cards/repo-download.png)

    1. Achten Sie darauf, den Pfad des heruntergeladenen Repositorys zu notieren.

    1. Wählen Sie im Datei-Explorer das **Projekt** aus.

    1. Wechseln Sie zu **Microsoft-Teams-Samples > Beispielen > tab-adaptive-cards > csharp > TabWithAdpativeCardFlow** folder.

    1. Öffnen Sie die Datei **"appsettings.json** " in Visual Studio Code.

    1. Aktualisieren Sie die **appsettings.json-Konfiguration** für den Bot, um den `MicrosoftAppId``MicrosoftAppPassword`ngrok-URI zu verwenden, und fügen Sie den ngrok-URI als `ApplicationBaseUrl`hinzu.

    1. Verwenden Sie den OAuth-Verbindungsnamen als **Verbindungsnamen**.

        > [!NOTE]
        > Sie können die `MicrosoftAppId` Seite "Konfiguration" des Bots abrufen. Dies `MicrosoftAppPassword` ist der Wert für die geheime Client-ID, die Sie zuvor gespeichert haben.

        ![Appsettings Json](~/assets/images/adaptive-cards/appsettings-json.png)

    1. Wählen Sie **Speichern** aus.
- title: Konfigurieren und Hochladen der App in Teams
  durationInMinutes: 2
  content: >
    Die umfassendste Methode zum Testen Ihres Bots besteht darin, ein App-Paket zu erstellen und es in Microsoft Teams hochzuladen. Diese Methode ist die einzige Möglichkeit, die vollständige Funktionalität ihres Bots in allen Bereichen zu testen. Sie können die Teams-App konfigurieren und ausführen, indem Sie die `manifest.zip` Datei hochladen.


    **So führen Sie die Teams-App durch Hochladen der manifest.zip-Datei aus**


    1. Wechseln Sie im **Datei-Explorer zu Microsoft-Teams-Samples > Beispielen > tab-adaptive-cards > csharp > TabWithAdpativeCardFlow > AppPackage** , um den Ordner zu öffnen.

    1. Öffnen Sie die `manifest.json` Datei in Visual Studio Code.

    1. Suchen Sie in der `manifest.json` Datei **{contentBotId}** , fügen Sie Ihre Microsoft App-ID hinzu, und speichern Sie.

        ![Manifestkonfiguration](~/assets/images/adaptive-cards/manifest-vsc.png)

    1. Wechseln Sie im Datei-Explorer zum **Ordner "AppPackage** ".

    1. Zippen Sie den Inhalt des **AppPackage-Ordners** , um zu erstellen `manifest.zip`.

        > [!NOTE]
        > Der `manifest.zip` Ordner sollte keine zusätzlichen Ordner enthalten. Es sollte **eine** MANIFEST-JSON-Quelldatei, ein **Farbsymbol** und ein **Gliederungssymbol** im ZIP-Ordner enthalten.

    1. Wechseln Sie zu Teams.

    1. Wählen Sie zum Hochladen `manifest.zip`**"Store" > "Apps verwalten" aus, > laden Sie eine benutzerdefinierte App hoch**, und öffnen `manifest.zip`Sie sie.

    1. Wählen Sie **"Hinzufügen"** aus, um die Registerkarte zu Ihrem Chat hinzuzufügen.

        ![Registerkarte in der Teams-App](~/assets/images/adaptive-cards/tab-in-teams.png)

        Sie können mit dieser Registerkarte interagieren, indem Sie sich anmelden.

    1. Senden Sie eine Nachricht an die Registerkarte.

        ![Screenshot von Desktop Mobile](~/assets/images/adaptive-cards/desktop-mobile-screenshot.png)
- title: Interagieren mit der Registerkarte in Teams
  durationInMinutes: 1
  content: "Registerkarten ermöglichen Ihnen den Zugriff auf Dienste und Inhalte in einem dedizierten Bereich innerhalb eines Kanals oder in einem Chat.\n\nFühren Sie die folgenden Schritte aus, um die Registerkarte zu verwenden:\n\n1. Wählen Sie im linken Bereich der Teams die Auslassungszeichen ●●● und dann Ihre App aus der Liste aus.\n1. Registerkarte mit adaptiver Karte mit Aktionssteuerelementen.\n\n    ![Registerkarte mit adaptiver Karte mit Aktionssteuerelementen](~/assets/images/adaptive-cards/adaptive-cards-tab-action-controls.png)\n\n1. Wählen Sie **\"Anmelden\"** und dann ein Konto aus, um auf die Registerkarte zuzugreifen.\n\n    ![Anmelden](~/assets/images/adaptive-cards/sign-in-page.png)\n\n1. Wählen Sie auf der Startseite \" **Aufgabenmodul anzeigen** \" aus.\n\n    ![Aufgabenmodul anzeigen](~/assets/images/adaptive-cards/tab-home-page.png)\n\n1. Tab/Fetch ist die erste Aufrufanforderung, die Ihr Bot empfängt, wenn ein Benutzer eine Registerkarte für adaptive Karten öffnet. Wenn Ihr Bot die Anforderung empfängt, sendet er entweder eine Tab-Fortsetzungsantwort oder eine Tab-Authentifizierungsantwort.\n\n    ![Beispielaufgabenmodul](~/assets/images/adaptive-cards/sample-task-module.png)\n\n1. **Submit-Funktion der adaptiven Karte**\n    **Die Aufgabe/Absenden-Anforderung** wird an Ihren Bot mit den entsprechenden Daten über die Aktion ausgelöst. \n\n    ![Karte \"Aufgabe übermitteln\"](~/assets/images/adaptive-cards/task-submit.png)\n\n1. Die Registerkarte hält Sie angemeldet, es sei denn, Sie wählen **\"Abmelden\" aus**.\n\n    ![Abmelden](~/assets/images/adaptive-cards/sign-out.png)\n\n1. Aktualisieren Sie, um **sich erneut anzumelden** .\n\n    ![Erfolgreiche Abmeldung](~/assets/images/adaptive-cards/success-sign-out.png)\n"
- title: Vollständige Herausforderung
  durationInMinutes: 1
  content: >
    Sind Sie auf so etwas gekommen?


    ![Screenshot von Desktop Mobile](~/assets/images/adaptive-cards/desktop-mobile-screenshot.png)
- content: Sie haben das Lernprogramm für die ersten Schritte mit adaptiven Karten für Microsoft Teams mit dem Bot Framework abgeschlossen.
