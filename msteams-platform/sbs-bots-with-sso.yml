### YamlMime:Tutorial
title: Erstellen eines Bots mit SSO-Authentifizierung
metadata:
  title: Erstellen eines Bots mit SSO-Authentifizierung
  description: In diesem Tutorial erfahren Sie, wie Sie einen Bot mit SSO-Authentifizierung erstellen.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/authentication/auth-aad-sso-bots.md
  nextTutorialTitle: Weitere Informationen zur Botauthentifizierung
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: fcfff8a5fc1f38c4afdb7b6b64e752dc2234512f
  ms.sourcegitcommit: 6926cf5eee55d5047c11ca13afc7f6f23e270396
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 10/27/2022
  ms.locfileid: "68740746"
items:
- durationInMinutes: 1
  content: >
    Teams-Bots sind Konversationsbots, die sich wiederholende automatisierte Aufgaben ausführen, die von den Benutzern ausgeführt werden, z. B. kundendienst. Der Benutzer muss sich mehrmals ohne einmaliges Anmelden (Single Sign-On, SSO) anmelden. Bei SSO-Authentifizierungsmethoden müssen sich die Benutzer nicht mehrmals beim Bot anmelden.


    Ein Bot verhält sich je nach Der Konversation, an der er beteiligt ist, unterschiedlich:


    * Bots in Kanal- und Gruppenchatunterhaltungen erfordern, dass die Benutzer den Bot @mention.

    * Für Bots in einer 1:1-Unterhaltung ist keine @Erwähnung erforderlich. Alle vom Benutzer gesendeten Nachrichten werden an den Bot weitergeleitet.


    Diese Schritt-für-Schritt-Anleitung hilft Ihnen beim Erstellen eines Bots mit SSO-Authentifizierung. Die folgende Ausgabe wird angezeigt:

     :::image type="content" source="~/assets/images/bots/sbs-desktop-mobile.png" alt-text="Mobile Anmeldung beim Bot":::
- title: Voraussetzungen
  durationInMinutes: 1
  content: "Stellen Sie sicher, dass Sie die folgenden Tools installieren und Ihre Entwicklungsumgebung einrichten:  \n\n | &nbsp; | Installieren | Zum Benutzen... |\n | --- | --- | --- |\n | **Required** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft Teams mit einem Konto (kein Gastkonto)](https://www.microsoft.com/microsoft-teams/download-app) |  Microsoft Teams für die Zusammenarbeit mit allen, mit denen Sie zusammenarbeiten, über Apps für Chats, Besprechungen, Anrufe und alles an einem Ort. |\n | &nbsp; | [Visual Studio 2022, Version 17.3](https://visualstudio.microsoft.com)<br> Installieren Sie eine der beiden folgenden Workloads:<br> • ASP.NET und Webentwicklung <br> • Plattformübergreifende .NET Core-Entwicklung | Sie können die Unternehmensversion in Visual Studio 2022 und die Workloads installieren. |\n | &nbsp; | [Microsoft 365-Entwicklerkonto](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | Zugriff auf das Teams-Konto mit den entsprechenden Berechtigungen zum Installieren einer App. |\n | &nbsp; | [ngrok](https://ngrok.com/download) | Teams-App-Features (Konversationsbots, Nachrichtenerweiterungen und eingehende Webhooks) erfordern eingehende Verbindungen. Ein Tunnel verbindet Ihr Entwicklungssystem mit Teams. Dies ist nicht für Apps erforderlich, die nur Registerkarten enthalten. Dieses Paket wird im Projektverzeichnis installiert (mit npm `devDependencies`). |\n\n  > [!NOTE]\n  > Registrieren Sie sich nach dem Herunterladen von ngrok, und installieren Sie [authtoken](https://ngrok.com/download).\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Einrichten Ihres Teams-Entwicklungsmandanten\n\nEin **Mandant** ist wie ein Raum oder Container, in dem Sie chatten, Dateien freigeben und Besprechungen für Ihre Organisation in Teams ausführen. Sie können die App auch querladen und testen.\n\n### <a name=\"check-for-sideloading-option\"></a>Option \"Auf Querladen überprüfen\"\n\nNachdem Sie die App erstellt haben, müssen Sie ihre App in Teams laden, ohne sie zu verteilen. Dieses Laden wird als Querladen bezeichnet. Melden Sie sich bei Ihrem Microsoft 365-Konto an, um diese Option anzuzeigen.\n\n > [!NOTE]\n > Das Querladen ist für die Vorschau und das Testen von Apps in der lokalen Teams-Umgebung erforderlich. Aktivieren Sie Querladen, um eine Vorschau ihrer App in Teams lokal anzuzeigen und zu testen.\n\nVerfügen Sie bereits über einen Mandanten und über Administratorzugriff? Lassen Sie uns überprüfen, ob Sie dies wirklich tun!\n\nSo überprüfen Sie das Querladen von Apps in Teams:\n\n1. Wählen Sie im Teams-Client **Apps** aus.\n1. Wählen **Sie Apps verwalten** > **App hochladen** aus.\n1. Suchen Sie nach der Option **Hochladen einer benutzerdefinierten App**. Wenn die Option angezeigt wird, ist das Querladen von Apps aktiviert.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/upload-custom-app1_1.png\" alt-text=\"Abbildung: Option zum Hochladen einer benutzerdefinierten App in Teams\":::\n\n    > [!NOTE]\n    > Wenn Sie nicht die Möglichkeit haben, eine benutzerdefinierte App hochzuladen, wenden Sie sich an den Teams-Administrator.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Erstellen eines kostenlosen Teams-Entwicklermandanten (optional)\n\nWenn Sie nicht über ein Teams-Entwicklerkonto verfügen, können Sie es kostenlos erhalten. Nehmen Sie am Microsoft 365-Entwicklerprogramm teil!\n\n1. Gehen Sie zu [Microsoft 365-Entwicklerprogramm](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Wählen Sie **Jetzt beitreten** aus, und folgen Sie den Anweisungen auf dem Bildschirm.\n1. Wählen Sie auf der Willkommensseite **E5-Abonnement** einrichten aus.\n1. Richten Sie ein Administratorkonto ein. Nachdem Sie fertig sind, wird der folgende Bildschirm angezeigt.\n\n      :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Microsoft\":::\n\n1. Melden Sie sich mit dem neuen Administratorkonto bei Teams an. Nun sollten Sie über die Option **Benutzerdefinierte App hochladen** verfügen.\n"
- title: Erstellen und Registrieren Ihres Bots
  durationInMinutes: 5
  content: "Die folgenden Schritte helfen Ihnen beim Erstellen und Registrieren Ihres Bots in Azure-Portal:\n\n1. Erstellen Sie eine Azure Bot-Ressource, um den Bot bei Azure Bot Service zu registrieren.\n1. Erstellen Sie einen geheimen Clientschlüssel, um die SSO-Authentifizierung des Bots zu aktivieren.\n1. Fügen Sie den Teams-Kanal hinzu, um den Bot bereitzustellen.\n1. Erstellen Sie mithilfe von ngrok einen Tunnel zu den Endpunkten Ihres Webservers.\n1. Fügen Sie dem erstellten ngrok-Tunnel einen Messagingendpunkt hinzu.\n\n**So erstellen Sie eine Azure Bot-Ressource**\n\n1. Gehen Sie zum [Azure-Portal](https://portal.azure.com/).\n\n1. Wählen Sie **Ressource erstellen** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/Createaresource_1.png\" alt-text=\"Ressource erstellen\":::\n\n1. Geben Sie in das Suchfeld **Azure-Bot ein**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/searchazurebot_1.png\" alt-text=\"Ressource erstellen\":::\n\n1. Drücken Sie die **EINGABETASTE**.\n\n1. Wählen Sie **Azure Bot aus**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/selectazurebot_1.png\" alt-text=\"Auswählen von Azure Bot\":::\n\n1. Wählen Sie **Erstellen** aus.\n\n    :::image type=\"content\" source=\"./assets/images/bots/azure-bot_1.png\" alt-text=\"Azure-Bot.\":::\n\n   Das Fenster **Azure Bot erstellen** wird angezeigt.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/azurebotpage.png\" alt-text=\"Screenshot: Seite des Azure-Bots\":::\n\n1. Geben Sie die folgenden Details ein, um einen Azure-Bot zu erstellen.\n\n    1. Geben Sie den erforderlichen Namen des Bothandles im **Bothandle ein**.\n\n    1. Wählen Sie in der Dropdownliste Ihr **Abonnement** und Ihre **Ressourcengruppe** aus.\n\n         :::image type=\"content\" source=\"~/assets/images/bots/Azurebotcreate.png\" alt-text=\"Screenshot: Details zum Erstellen eines Azure-Bots für Ressourcen\":::\n  \n    1. Um eine neue Ressourcengruppe zu erstellen, wählen **Sie Neu erstellen** aus, > geben Sie den Ressourcennamen > **OK** ein. Wählen Sie nun in der Dropdownliste **Neuer Speicherort der Ressourcengruppe** den erforderlichen Standort aus.\n    \n         :::image type=\"content\" source=\"~/assets/images/bots/newresource.png\" alt-text=\"Screenshot: Speicherort der neuen Ressourcengruppe\":::\n    \n    1. Wählen Sie **App-Typ** als **mehrinstanzenfähig** aus. \n\n    1. Im Abschnitt **Microsoft App ID** ist standardmäßig **Create new Microsoft App ID (Neue Microsoft-App-ID erstellen** ) ausgewählt.\n\n       Sie können auch **Vorhandene App-Registrierung verwenden** auswählen und vorhandene **App-ID**, **App-Mandanten-ID** und **MSI-Ressourcen-ID** eingeben.\n\n         :::image type=\"content\" source=\"~/assets/images/bots/Review-Create_1.png\" alt-text=\"Screenshot: Auswahl der Option &quot;Mehrinstanzenfähig&quot; \":::\n\n       > [!NOTE]\n       > Sie können nicht mehr als einen Bot mit derselben **Microsoft-App-ID** erstellen.\n\n    1. Wählen Sie **Überprüfen + erstellen** aus.\n\n1. Nachdem die Überprüfung bestanden wurde, wählen Sie **Erstellen** aus.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/validationpass_1.png\" alt-text=\"Screenshot: Überprüfungsdurchlauf\":::\n\n   Es dauert einige Augenblicke, bis Ihr Botdienst bereitgestellt wurde.\n\n1. Wählen Sie **Zu Ressource wechseln** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/gotoresource_1.png\" alt-text=\"Ressource\":::\n\n   Ihr Azure-Bot wird erstellt. Die Details zu **Ressourcengruppe** und **Abonnement-ID** werden im Azure-Bot angezeigt.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/Azurebotresource_1.png\" alt-text=\"Azure-Bot-Ressource erstellt\":::\n\n**So erstellen Sie einen geheimen Clientschlüssel**\n\n Führen Sie die folgenden Schritte aus, um einen geheimen Clientschlüssel zu erstellen:\n\n1. Wählen Sie im linken Bereich **Konfiguration** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/selectconfigure_1.png\" alt-text=\"Wählen Sie Konfigurieren aus.\":::\n\n   > [!Tip]\n   > Speichern Sie die **Microsoft-App-ID** oder **Client-ID** zur späteren Referenz.\n\n1. Wählen Sie neben **Microsoft App ID** die Option **Verwalten** aus.\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label_1.png\" alt-text=\"Bot verwalten\":::\n\n1. Wählen Sie im Abschnitt **Geheime Clientschlüssel** **die Option Neuer geheimer Clientschlüssel** aus.\n\n      :::image type=\"content\" source=\"~/assets/images/bots/newclientsecret_2.png\" alt-text=\"Screenshot: Auswahl des neuen geheimen Clientschlüssels\":::\n\n   Das Fenster **Geheimen Clientschlüssel hinzufügen** wird angezeigt.\n\n1. Geben Sie **Beschreibung** ein.\n\n1. Klicken Sie auf **Hinzufügen**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/addclientsecret_1.png\" alt-text=\"Screenshot: Hinzufügen eines geheimen Clientschlüssels zur App\":::\n\n1. Wählen Sie in der Spalte **Wert** das Symbol In Zwischenablage kopieren aus, um die Wertdetails zu kopieren. \n\n    :::image type=\"content\" source=\"~/assets/images/bots/valueclientsecret.png\" alt-text=\"Screenshot: Wert des geheimen Clientschlüssels, der in die Zwischenablage kopiert wurde\":::\n\n   > [!Tip]\n   > Speichern Sie den Wert **geheimer Clientschlüssel** oder das App-Kennwort zur späteren Referenz.\n   \n**Hinzufügen eines Bots zum Teams-Kanal**\n\n1. Wählen Sie **Start** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/selecthome_1.png\" alt-text=\"Homepage\":::\n\n1. Wählen Sie Unter **Zuletzt verwendete Ressourcen** Ihren Bot aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-recent-resources_1.png\" alt-text=\"Zuletzt verwendete Ressourcen auswählen\":::\n\n1. Wählen Sie im linken Bereich **Kanäle** aus. \n\n    :::image type=\"content\" source=\"~/assets/images/bots/selectchannel_1.png\" alt-text=\"Wählen Sie Zuletzt verwendet aus.\":::\n\n1. Microsoft **Teams** auswählen <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>. \n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-microsoft-teams_1.png\" alt-text=\"Microsoft Teams auswählen\":::\n\n1. Aktivieren Sie das Kontrollkästchen, um die **Nutzungsbedingungen** zu akzeptieren.\n\n1. Wählen Sie **Zustimmen** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/Terms-of-service_1.png\" alt-text=\"Bedingungen\":::\n\n1. Wählen Sie **Anwenden** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/apply_1.png\" alt-text=\"Screenshot: Option &quot;Anwenden&quot;\":::\n\n**So erstellen Sie einen Tunnel für den lokalen Webserver**\n\nVerwenden Sie ngrok, um einen Tunnel zu den öffentlich verfügbaren HTTPS-Endpunkten Ihres lokal ausgeführten Webservers zu erstellen. Führen Sie den folgenden Befehl in ngrok aus:\n\n   ```bash\n   ngrok http --host-header=localhost 3978\n   ```\n   > [!TIP]\n   > Wenn **sie auf ERR_NGROK_4018** stoßen, führen Sie die in der Eingabeaufforderung angezeigten Schritte aus, um sich zu registrieren und zu authentifizieren. Führen Sie anschließend den Befehl `ngrok http --host-header=localhost 3978` aus.\n\n**So fügen Sie einen Messagingendpunkt hinzu**\n\n1. Kopieren Sie in ngrok die HTTPS-URL.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url1_1.png\" alt-text=\"ngrok HTTPS-URL\":::\n\n    > [!NOTE]\n    > Die HTTPS-URL in Ihrem ngrok ist Ihr vollqualifizierter Domänenname.\n    > ist `WebAppDomain` ein vollqualifizierter Domänenname, der nicht enthalten `https://` ist.\n\n1. Zurück zum Azure-Portal.\n\n1. Wählen Sie **unter Einstellungen** für den von Ihnen erstellten Azure-Bot **die Option Konfiguration** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-configuration_1.png\" alt-text=\"Konfiguration auswählen\":::\n\n1. Verwenden Sie im **Messagingendpunkt** die https-URL, die von ngrok verfügbar ist, und fügen Sie am Ende der URL **/api/messages** hinzu.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/messagingURL_2.png\" alt-text=\"Messagingendpunkt\":::\n\n1. Wählen Sie **Anwenden** aus.\n\n    Sie haben erfolgreich einen Bot in Azure Bot Service eingerichtet.\n"
- title: Konfigurieren des einmaligen Anmeldens für Ihren Bot
  durationInMinutes: 5
  content: "**So fügen Sie der Azure-Botressource Umleitungs-URI hinzu**\n\n1. Wählen Sie **Start** > **Azure Active Directory aus**.\n\n1. Wählen Sie im linken Bereich **App-Registrierungen** aus.\n\n1. Wählen Sie Ihren Bot aus.\n\n1. Wählen Sie im linken Bereich **Authentifizierung** aus, um einen Umleitungs-URI festzulegen.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/select-authentication_1.png\" alt-text=\"Wählen Sie Authentifizierung aus.\":::\n\n1. Wählen Sie unter **Plattformkonfigurationen** die Option **Plattform hinzufügen** aus, um die Plattform auszuwählen, auf der Sie die Bot-App hosten möchten. \n\n1. Wählen Sie für dieses Tutorial **Web** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-web_1.png\" alt-text=\"Screenshot: Auswahl des Webs\":::\n    \n1. Geben Sie **Umleitungs-URIs** als `https://token.botframework.com/.auth/web/redirect` und diesen URI ein, für den Azure AD eine Antwort für die Benutzerauthentifizierung sendet.\n\n1. Aktivieren Sie **implizite Genehmigung und Hybridflows** , indem Sie die folgenden Kontrollkästchen aktivieren:\n\n    * **ID-Token**\n    * **Zugriffstoken**\n\n1. Wählen Sie **Konfigurieren** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-implict-grant_1.png\" alt-text=\"Screenshot: Auswahl von &quot;Konfigurieren&quot;\":::\n\n    Der Umleitungs-URI wird der Azure-Botressource hinzugefügt.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/redirectURIadded.png\" alt-text=\"Screenshot: Umleitungs-URI, der der Botressource hinzugefügt wurde\":::\n\n**So machen Sie den API-Endpunkt verfügbar**\n\n1. Wählen Sie im linken Bereich **Api verfügbar machen** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/expose-an-api_1.png\" alt-text=\"Bereitstellen einer API\":::\n\n1. Wählen Sie **Festlegen** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/appidURI.png\" alt-text=\"Screenshot: Option &quot;festlegen&quot;\":::\n\n1. Legen Sie den Anwendungs-ID-URI im Format fest `api://botid-{your AppID}`.\n\n1. Wählen Sie **Speichern** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/exposeAPI_1.png\" alt-text=\"Screenshot: Option &quot;Speichern&quot;\":::\n\n   > [!NOTE]\n   > Wenn Sie einen Tunnelingdienst wie ngrok verwenden, stellen Sie sicher, dass Sie den Wert aktualisieren, wenn sich Ihre ngrok-Unterdomäne ändert.\n   > Beispiel: `api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`, wobei `f631****.ngrok.io` der name der neuen ngrok-Unterdomäne ist.\n\n1. Wählen Sie **Bereich hinzufügen**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/Addascope_1.png\" alt-text=\"Screenshot: Hinzufügen eines Bereichs\":::\n\n   Das Fenster **Bereich hinzufügen** wird angezeigt.\n\n1. Geben Sie die Details zum Konfigurieren des Bereichs ein.    \n\n      1. Geben Sie `access_as_user` als **Bereichsname ein**.\n\n         > [!NOTE]\n         > Der **Bereichsname** sollte mit dem **Anwendungs-ID-URI** übereinstimmen, der `/access_as_user` am Ende angefügt ist.\n\n      1. Legen Sie **Wer kann zustimmen?** auf fest `Admins and users`.\n\n      1. Um die Eingabeaufforderungen für die Administrator- und Benutzereinwilligung mit geeigneten Werten für `access_as_user` den Bereich zu konfigurieren, geben Sie die folgenden Informationen in den Feldern an:</br>\n\n          * Geben Sie `Teams can access the user’s profile` als **Admin Anzeigenamen für die Zustimmung ein**.\n\n          * Geben Sie `Allows Teams to call the app’s web APIs as the current user` **als Admin Einwilligungsbeschreibung** ein.\n\n          * Geben Sie `Teams can access the user profile and make requests on the user’s behalf` als **Anzeigenamen für die Benutzereinwilligung** ein.\n\n          * Geben Sie `Enable Teams to call this app’s APIs with the same rights as you have` als **Beschreibung der Benutzereinwilligung ein**.\n\n      1. Stellen Sie sicher, **Zustand** auf **Aktiviert** festgelegt ist.\n\n      1. Wählen Sie **Bereich hinzufügen** aus, um sie zu speichern.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/addscope.png\" alt-text=\"Screenshot: Konfigurieren des Bereichs.\":::\n\n   Der Anwendungs-ID-URI wird mit **dem Bereichsnamen** erstellt.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/ExposeAPI_2.png\" alt-text=\"Screenshot: API verfügbar gemacht und Bereich hinzugefügt\":::\n\n1. Identifizieren Sie im Bereich **Autorisierte Clientanwendungen** die Anwendungen, die Sie für die Webanwendung Ihrer App autorisieren möchten.\n\n1. **Hinzufügen einer Clientanwendung** auswählen.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/addaclientapplication.png\" alt-text=\"Screenshot: Hinzufügen einer Clientanwendung\":::\n\n   Das Fenster **Clientanwendung hinzufügen** wird angezeigt.\n\n1. Geben Sie die Client-ID für Desktop und Webanwendung separat ein, die Sie autorisieren möchten. Dies ist die Anwendungs-ID der Clientanwendung, die Sie autorisieren möchten.\n   \n   |**Client-ID**|**Zum Autorisieren**|\n   |--------|-------------|\n   | `1fec8e78-bce4-4aaf-ab1b-5451cc387264` | Teams-Desktop- oder mobile Anwendung |\n   | `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` | Teams-Webanwendung |\n\n1. Wählen Sie **Autorisierte Bereiche** aus, um zu bestimmen, welcher Tokentyp vom Dienst zurückgegeben wird.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/add-desktop-app.png\" alt-text=\"Screenshot: Auswahl autorisierter Bereiche\":::\n   \n1. Wählen Sie **Anwendung hinzufügen** aus.\n\n    Die folgende Abbildung zeigt die Client-ID:\n\n      :::image type=\"content\" source=\"~/assets/images/bots/clientapps.png\" alt-text=\"Screenshot: Hinzufügen der Client-ID\":::\n\n**Konfigurieren von Graph-Berechtigungen**\n\n1. Wählen Sie im linken Bereich **API-Berechtigungen aus**.\n\n      :::image type=\"content\" source=\"~/assets/images/bots/select-api-permissions_1.png\" alt-text=\"Api-Berechtigungen auswählen\":::\n\n   > [!NOTE]\n   > Benutzer müssen den API-Berechtigungen nur zustimmen, wenn die Bot-App in einem anderen Mandanten registriert ist.\n\n1. Wählen Sie **Berechtigung hinzufügen** aus.\n\n   Das Fenster **API-Berechtigung anfordern** wird angezeigt.\n\n1. Wählen Sie **Microsoft Graph** aus.\n    \n    :::image type=\"content\" source=\"~/assets/images/bots/select-microsoft-graph_2.png\" alt-text=\"Screenshot: Auswahl von Microsoft Graph\":::\n\n1. Wählen Sie **Delegierte Berechtigungen** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-graph-permissions.png\" alt-text=\"Screenshot: Auswahl delegierter Berechtigungen\":::\n\n1. Wählen Sie in der Dropdownliste **Benutzer** die Berechtigung **User.Read** aus.\n\n1. Wählen Sie **Berechtigungen hinzufügen** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/userread.png\" alt-text=\"Screenshot: Auswahl von Benutzerlesevorgang\":::\n\n**So aktualisieren Sie das Manifest**\n\n1. Wählen Sie im linken Bereich **Manifest** aus.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/select-manifest_1.png\" alt-text=\"Manifest auswählen\":::\n\n1. Stellen Sie sicher, dass das Konfigurationselement auf **\"accessTokenAcceptedVersion\": 2** eingestellt ist. Wenn nicht, ändern Sie den Wert in **2** , und wählen **Sie Speichern** aus.\n\n   > [!NOTE]\n   > Wenn Sie Ihren Bot bereits in Teams testen, müssen Sie sich von dieser App und Von Teams abmelden. Melden Sie sich dann erneut an, um diese Änderung zu sehen.</br>\n    \n      :::image type=\"content\" source=\"~/assets/images/bots/update-manifest.png\" alt-text=\"Screenshot: Aktualisierung des Manifests\":::\n\n**So richten Sie eine Bot-Dienstverbindung ein**\n\n1. Wählen Sie **auf der Seite Konfiguration** die Option **OAuth-Verbindungseinstellungen hinzufügen** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-configuration_2.png\" alt-text=\"Wählen Sie Konfiguration1 aus.\":::\n\n   Das Fenster **Neue Verbindungseinstellung** wird angezeigt.\n\n     \n\n1. Geben Sie unter **Neue Verbindungseinstellung** die folgenden Details ein:\n\n    | Feld | Wert oder Beschreibung |\n    | ----- | ----- |\n    | Name | Geben Sie den Namen für Ihre neue Verbindungseinstellung ein. Sie können den Namen in den Einstellungen Ihres Botdienstcodes verwenden. |\n    | Service Provider | Wählen Sie **Azure Active Directory V2** aus. |\n    | Client-ID | Zuvor als **Ihre Microsoft-App-ID** gespeichert. |\n    | Geheimer Clientschlüssel | Zuvor als **Wert** der id des geheimen Clientschlüssels gespeichert. |\n    | Tokenaustausch-URL | Verwenden Sie die zuvor abgerufene **Anwendungs-ID-URL** beim Verfügbarmachen des API-Endpunkts. |\n    | Mandanten-ID | Geben Sie **common** ein. |\n    | Scopes | Geben Sie **User.Read** ein, und fügen Sie auch alle erforderlichen **Bereiche** hinzu, während Sie Berechtigungen für Downstream-APIs angeben. |\n\n    :::image type=\"content\" source=\"~/assets/images/bots/botserviceconnection.png\" alt-text=\"Screenshot: Bot-Dienstverbindung\":::\n\n1. Wählen Sie **Speichern** aus.\n\n   Sie haben nun SSO für Ihren Bot konfiguriert.\n"
- title: Konfigurieren und Ausführen ihres Botbeispiels
  durationInMinutes: 1
  content: "1. Öffnen Sie **Visual Studio**.\n\n1. Wählen Sie **Repository klonen aus**.\n\n1. Geben Sie im **Repositoryspeicherort** ein `https://github.com/OfficeDev/Microsoft-Teams-Samples.git`. Notieren Sie sich den **Pfad** , in dem das Repository geklont ist.\n\n1. Wechseln Sie zu **Datei** > **Projekt/Projektmappe öffnen** > .\n\n    :::image type=\"content\" source=\"~/assets/images/bots/project-solution_1.png\" alt-text=\"Screenshot: Navigation zu Projekt/Projektmappe\":::\n\n1. Wählen Sie in **csharp_dotnetcore** Ordner die Datei **BotSSOCSharp.csproj** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/filepath_1.png\" alt-text=\"Screenshot: Ordnerpfad\":::\n\n1. Öffnen Sie die Datei **appsettings.json** .\n\n1. Aktualisieren Sie die **Appsettings.json-Konfiguration** für den Bot, um und `MicrosoftAppId` `MicrosoftAppPassword`zu verwenden. Verwenden Sie den OAuth-Verbindungsnamen als **Verbindungsname**.\n\n    > [!NOTE]\n    > Sie können die auf `MicrosoftAppId` der Seite Konfiguration des Bots abrufen. ist `MicrosoftAppPassword` der Wert für die id des geheimen Clientschlüssels, den Sie zuvor in Azure gespeichert haben.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/appsettingsjson.png\" alt-text=\"Screenshot: Option &quot;appsettings json&quot;\"lightbox=\"~/assets/images/bots/appsettingsjson.png\":::\n\n1. Wählen Sie **F5**  aus, um das Projekt auszuführen.\n\n1. Wählen Sie **Ja** aus, wenn das folgende Dialogfenster angezeigt wird:\n\n    :::image type=\"content\" source=\"~/assets/images/bots/certificate.png\" alt-text=\"Screenshot: Auswahl der Option &quot;Ja&quot;, wenn das Dialogfeld angezeigt wird\":::\n\n   Eine Webseite wird mit der Meldung **Bot is Ready** geöffnet.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/yourbot.png\" alt-text=\"Screenshot der Webseite, die besagt, dass der Bot bereit ist.\":::\n    \n    <br>\n\n    <details>\n\n    <summary><b>Problembehandlung</b></summary>\n\n    Wenn der Fehler **Paket nicht gefunden** angezeigt wird, führen Sie die folgenden Schritte aus:\n\n    1.  Wechseln Sie zu **Extras** > **NuGet-Paket-Manager-Paket-Manager-Einstellungen** > .\n    1.  Wählen Sie im daraufhin angezeigten Fenster **Optionen** **die Option NuGet-Paket-Manager-Paketquellen** > **aus**.\n    1.  Klicken Sie auf **Hinzufügen**.\n    1.  Geben Sie **unter Name** die Zeichenfolge `nuget.org` ein, und geben Sie unter **Quelle** ein `https://api.nuget.org/v3/index.json`.\n    1.  Wählen Sie **Aktualisieren** und **OK** aus.\n    1.  Erstellen Sie Ihr Projekt neu.\n    <br>\n\n    </details>\n"
- title: Konfigurieren und Ausführen der Teams-App
  durationInMinutes: 2
  content: "1. Öffnen Sie in Visual Studio den Ordner **appPackage** .\n\n1. Öffnen Sie die Datei **manifest.json** .\n\n1. Ersetzen Sie alle Vorkommen von **{TODO: MicrosoftAppId}** durch die **Microsoft App-ID** Ihres Bots.\n\n1. Navigieren Sie in Ihrem geklonten Repository zu **bot-conversation-sso-quickstart > csharp_dotnetcore > Ordner appPackage** .\n\n1. Erstellen Sie eine .zip mit den folgenden Dateien, die im **Manifestordner** vorhanden sind: \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n    :::image type=\"content\" source=\"~/assets/images/bots/manifest_1.png\" alt-text=\"Screenshot: Zippen eines Manifestordners\":::\n\n1. Wechseln Sie zum Teams-Client.\n1. Wählen Sie **Store** aus.\n1. Wählen Sie **Verwalten Ihrer Apps** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/manage-apps_3.png\" alt-text=\"Screenshot: Auswahl von &quot;App verwalten&quot;\":::\n\n1. Wählen Sie **Benutzerdefinierte App hochladen** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/upload-custom-app.png\" alt-text=\"Screenshot: Hochladen einer benutzerdefinierten App\":::\n\n1. Wählen Sie **Öffnen** aus, um die .zip Datei hochzuladen, die Sie im **Manifestordner** erstellt haben.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/open-app.png\" alt-text=\"App öffnen\":::\n\n1. Wählen Sie **Hinzufügen** aus, um den Konversationsbot zu Ihrem Chat hinzuzufügen.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/add-conversation-bot_1.png\" alt-text=\"Screenshot: Option &quot;Konversationsbot hinzufügen&quot;\":::\n\n    Sie können mit dem Bot interagieren, indem Sie diesem eine Nachricht senden. Der Bot tauscht ein SSO-Token aus und ruft die Graph-API in Ihrem Namen auf. Sie bleiben angemeldet, es sei denn, Sie senden eine Nachricht zur **Abmeldung**.\n\n1. Senden Sie eine Nachricht an den Bot. Der Konversationsbot bittet zum ersten Mal um Zustimmung.\n\n1. Wählen Sie **Weiter** aus, um dem Teams-Client Berechtigungen für den Zugriff auf den Bot zu erteilen.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/sbsdesktop-mobile-consent-request1.png\" alt-text=\"Screenshot: Auswahl von Berechtigungen für Bot erteilen\":::\n    \n    > [!NOTE]\n    > Jetzt haben Sie einmaliges Anmelden mit Ihrer Bot-App konfiguriert, und es ist das einzige Mal, dass Sie ihre Zustimmung erteilen müssen.\n\n1. Wählen Sie für mobiles Gerät **die Option Akzeptieren** für **angeforderte Berechtigungen aus**.\n\n    > [!NOTE]\n    > Jetzt haben Sie SSO für Ihre Bot-App auf mobilgeräte konfiguriert. Dies ist das einzige Mal, dass Sie ihre Zustimmung erteilen müssen.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/sbsdesktop-mobile-consent-request.png\" alt-text=\"Screenshot: Beim Bot angemeldete Mobilgeräte\":::\n"
- title: Abschließen der Herausforderung
  durationInMinutes: 1
  content: >
    Haben Sie sich so etwas einfallen lassen?

     :::image type="content" source="~/assets/images/bots/sbs-desktop-mobile.png" alt-text="Screenshot: endgültige Ausgabe":::
- content: Sie haben das Tutorial für die ersten Schritte mit dem Erstellen eines Bots mit SSO-Authentifizierung abgeschlossen.
