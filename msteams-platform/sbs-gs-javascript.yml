### YamlMime:Tutorial
title: Erstellen Ihrer ersten App mit JavaScript
metadata:
  title: Hello World mit JavaScript
  description: In diesem Lernprogramm erfahren Sie, wie Sie die Hello World-App mit JavaScript erstellen.
  audience: Developer
  level: Beginner
  ms.date: 10/21/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Zurück zur Übersicht über die ersten Schritte
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 43bab1b535143f5e48cad72ce4cc686034ba9152
  ms.sourcegitcommit: 9bdd930523041377b52dadffbd8cd52a86a047d7
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 02/08/2022
  ms.locfileid: "62443979"
items:
- durationInMinutes: 1
  content: "Beginnen Sie Microsoft Teams App-Entwicklung mit Ihrer ersten Teams-App. Sie erstellen drei Teams-Apps: eine Registerkarten-App, eine Bot-App und eine Messaging-Erweiterungs-App. \n\nJede App verfügt über eine Funktion, die über eine eigene Benutzeroberfläche und UX verfügt:\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png\" alt-text=\"Diagramm, das zeigt, dass diese App drei Features aufweist.\" border=\"false\":::\n\n> [!NOTE]\n> In diesem Lernprogramm erstellen Sie zuerst eine Registerkarten-App, gefolgt von einer Bot-App und dann einer Messaging-Erweiterungs-App. Sie können jedoch zunächst eine App mit jeder Funktion erstellen, ohne die Funktionalität anderer Apps zu beeinträchtigen.\n\nIn diesem Lernprogramm lernen Sie Folgendes:\n\n- So richten Sie ein neues Projekt mit Teams Toolkit ein.\n- Erstellen von drei Apps mit jeweils unterschiedlichen Funktionen – Registerkarte, Bot und Messaging-Erweiterung.\n- Die Struktur der App:\n    - Der Registerkartenteil mit JavaScript mit React.\n    - Die restlichen Features mit Node.js.\n- So stellen Sie Ihre App bereit\n"
- title: Voraussetzungen
  durationInMinutes: 1
  content: "\nHier ist eine Liste der Tools, die Sie zum Erstellen und Bereitstellen Ihrer Apps benötigen.\n\n| &nbsp; | Installieren | Für die Verwendung... |\n| --- | --- | --- |\n| **Erforderlich** | &nbsp; | &nbsp; |\n| &nbsp; | [Teams Toolkit](#install-the-teams-toolkit) |  Eine Microsoft Visual Studio Codeerweiterung, die ein Projektgerüst für Ihre App erstellt. Verwenden Sie die neueste Version. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/en-us/microsoft-teams/download-app) | Microsoft Teams, mit allen Personen zusammenzuarbeiten, mit denen Sie über Apps für Chats, Besprechungen, Anrufe arbeiten – alles an einem zentralen Ort.|\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Back-End-JavaScript-Laufzeitumgebung. Verwenden Sie die neueste Version von v14 LTS.|\n| &nbsp; | [Microsoft Edge](https://www.microsoft.com/edge) (empfohlen) oder [Google Chrome](https://www.google.com/chrome/) | Ein Browser mit Entwicklertools. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | JavaScript-, TypeScript- oder SharePoint-Framework-Buildumgebungen (SPFx). Verwenden Sie Version 1.55 oder höher. |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure-Tools für Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) und [Azure CLI](/cli/azure/install-azure-cli) | Azure-Tools für den Zugriff auf gespeicherte Daten oder die Bereitstellung eines cloudbasierten Back-Ends für Ihre Teams-App in Azure. |\n| &nbsp; | [React Developer Tools for Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) OR [React Developer Tools for Microsoft Edge](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Eine Browser-DevTools-Erweiterung für die Open Source-React JavaScript-Bibliothek. |\n| &nbsp; | [Microsoft Graph-Tester](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer, ein browserbasiertes Tool, mit dem Sie eine Abfrage von Microsoft Graph-Daten ausführen können. |\n| &nbsp; | [Entwicklerportal für Teams](https://dev.teams.microsoft.com/) | Webbasiertes Portal zum Konfigurieren, Verwalten und Verteilen Ihrer Teams-App, einschließlich ihrer Organisation oder des Teams Store. |\n\n\n> [!TIP]\n> Wenn Sie mit Microsoft Graph-Daten arbeiten, sollten Sie den Microsoft Graph-Explorer kennenlernen und mit einem Lesezeichen versehen. Mit diesem browserbasierten Tool können Sie Microsoft Graph außerhalb einer App abfragen.\n\n\n## <a name=\"prepare-development-environment\"></a>Vorbereiten der Entwicklungsumgebung\n\nNachdem Sie die erforderlichen Tools installiert haben, richten Sie die Entwicklungsumgebung ein.\n\n\n### <a name=\"install-the-teams-toolkit\"></a>Installieren des Teams Toolkits\n\nDas Teams Toolkit vereinfacht den Entwicklungsprozess mit Tools zum Bereitstellen und Bereitstellen von Cloudressourcen für Ihre App, zum Veröffentlichen im Teams Store und vieles mehr. \n \nSie können das Toolkit mit Visual Studio Code oder CLI (Befehlszeilenschnittstelle) verwenden`TeamsFx`.\n\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Öffnen Sie Visual Studio Code, und wählen Sie die **Erweiterungsansicht** (**STRG+UMSCHALT+X** / **⌘⇧-X** oder **Ansicht > Erweiterungen) aus**.\n1. Geben Sie in das Suchfeld **Teams Toolkit** ein.\n1. Wählen Sie \"**Installieren**\" neben dem Teams Toolkit aus.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/install-toolkit-vscode.png\" alt-text=\"Abbildung der Installation der Teams Toolkit-Erweiterung.\" border=\"false\":::\n\n Das Symbol Teams Toolkit wird nach der Installation in der Visual Studio Code Randleiste angezeigt.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"Abbildung zeigt das Symbol Teams Toolkit in Visual Studio Code Randleiste.\" border=\"false\":::\n\nSie finden auch das Teams Toolkit auf dem [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension).\n\n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cli)\n\nUm die TeamsFx CLI zu installieren, verwenden Sie den `npm` Paket-Manager:\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nJe nach Konfiguration müssen Sie die CLI möglicherweise verwenden `sudo` :\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nDiese Bedingung wird häufiger auf Linux- und macOS-Systemen verwendet.\n\nStellen Sie sicher, dass Sie dem PFAD den globalen npm-Cache hinzufügen. Dieser Schritt wird normalerweise als Teil des Node.js-Installationsprogramms ausgeführt.  \n\nSie können die CLI mit dem `teamsfx` Befehl verwenden. Stellen Sie sicher, dass der Befehl funktioniert, indem Sie .`teamsfx -h`\n\n> [!CAUTION]\n> Bevor Sie TeamsFx in PowerShell-Terminalen ausführen können, müssen Sie die Ausführungsrichtlinie \"Remotesignierung\" für PowerShell aktivieren.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Einrichten ihres Teams-Entwicklungsmandanten\n\nEin **Mandant** gleicht einem Raum oder einem Container für Ihre Organisation in Teams, in dem Sie chatten, Dateien freigeben und Besprechungen ausführen. In diesem Bereich wird Ihre App auch quergeladen und getestet. Lassen Sie uns überprüfen, ob Sie bereit sind, mit dem Mandanten zu entwickeln.\n\n### <a name=\"check-for-sideloading-option\"></a>Option \"Nach Querladen suchen\"\n\nNachdem Sie die App erstellt haben, müssen Sie ihre App in Teams laden, ohne sie zu verteilen. Dieser Vorgang wird als Querladen bezeichnet. Melden Sie sich bei Ihrem Microsoft 365 konto an, um diese Option anzuzeigen.\n\n > [!NOTE]\n > Das Querladen ist für die Vorschau und das Testen von Apps in Teams lokalen Umgebung erforderlich. Wenn sie nicht aktiviert ist, können Sie ihre App nicht lokal in Teams in der Vorschau anzeigen und testen.\n\nVerfügen Sie bereits über einen Mandanten und haben Sie Zugriff auf den Administrator? Lassen Sie uns überprüfen, ob Sie dies wirklich tun!\n\nÜberprüfen Sie, ob Sie Apps in Teams querladen können:\n\n 1. Wählen Sie im Teams Client das **symbol Store** aus.\n 1. Wählen Sie **\"Apps verwalten\" aus**.\n 1. Wählen Sie **\"App veröffentlichen\" aus**.\n 1. Suchen Sie nach der Option zum **Hochladen einer benutzerdefinierten App**. Wenn die Option angezeigt wird, ist das Querladen von Apps aktiviert.\n\n     :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"Abbildung zeigt die Option zum Hochladen einer benutzerdefinierten App in Teams.\":::\n\n     > [!NOTE]\n     > Wenn Sie keine Möglichkeit haben, eine benutzerdefinierte App hochzuladen, wenden Sie sich an Ihren Teams Administrator.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Erstellen eines kostenlosen Teams Entwicklermandanten (optional)\n\nWenn Sie kein Teams Entwicklerkonto haben, können Sie es kostenlos erhalten. Treten Sie dem Microsoft 365-Entwicklerprogramm bei!\n\n1. Wechseln Sie zum [Microsoft 365-Entwicklerprogramm](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Wählen Sie **\"Jetzt beitreten\"** aus, und folgen Sie den Anweisungen auf dem Bildschirm.\n1. Wählen Sie auf der Willkommensseite \" **E5-Abonnement einrichten**\" aus.\n1. Richten Sie Ihr Administratorkonto ein. Nachdem Sie fertig sind, wird der folgende Bildschirm angezeigt.\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Beispiel für das, was nach der Registrierung für das Microsoft 365-Entwicklerprogramm angezeigt wird.\":::\n\n1. Melden Sie sich mit dem soeben eingerichteten Administratorkonto bei Teams an. Stellen Sie sicher, dass Sie über die **Hochladen einer benutzerdefinierten App-Option** in Teams verfügen.\n\n## <a name=\"get-a-free-azure-account\"></a>Abrufen eines kostenlosen Azure-Kontos\n\nWenn Sie Ihre App hosten oder auf Ressourcen in Azure zugreifen möchten, benötigen Sie ein Azure-Abonnement. [Erstellen Sie ein kostenloses Konto](https://azure.microsoft.com/free/) , bevor Sie beginnen.\n\nJetzt haben Sie alle Tools und richten Ihr Konto ein. Als Nächstes richten wir Ihre Entwicklungsumgebung ein und beginnen mit dem Erstellen! Wählen Sie die App aus, die Sie zuerst ausführen möchten.\n"
- title: Erstellen eines Projektarbeitsbereichs für Ihre Registerkarten-App
  durationInMinutes: 1
  content: "\nBeginnen Sie Microsoft Teams App-Entwicklung, indem Sie Ihre erste App erstellen. Diese App verwendet die Tab-Funktion.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/your-helloworld-app-tab.png\" alt-text=\"Diagramm, das zeigt, dass diese App drei Features aufweist. Die Registerkarte ist hervorgehoben.\" border=\"false\":::\n\nAuf dieser Seite erfahren Sie Folgendes:\n1. [Einrichten eines neuen Registerkartenprojekts mit Teams Toolkit](#create-your-tab-project-workspace)\n1. [Informationen zur Verzeichnisstruktur Ihrer App](#take-a-tour-of-the-tab-app-source-code)\n\n## <a name=\"create-your-tab-project-workspace\"></a>Erstellen des Registerkartenprojektarbeitsbereichs\n\nWenn die Voraussetzungen erfüllt sind, beginnen wir!\n\n> [!NOTE]\n> Die angezeigte Visual Studio Code Benutzeroberfläche stammt von Mac. Sie kann je nach Betriebssystem, Teams Toolkit-Version und Umgebung variieren.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vsc)\n\n1. Öffnen Sie Visual Studio Code.\n1. Wählen Sie das Symbol Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: in der Visual Studio Code-Randleiste aus.\n\n1. Wählen Sie **Neue Microsoft Teams-App erstellen** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Ort des Links „Neues Projekt erstellen“ in der Randleiste des Microsoft Teams-Toolkits.\" border=\"false\":::\n\n1. Wählen Sie **\"Neue Teams App** erstellen\" aus, um eine App mit Teams Toolkit zu erstellen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"Assistent beginnt mit dem Erstellen eines neuen Projekts\" border=\"false\":::\n\n1. Stellen Sie sicher, dass **tab** als Die Funktion ausgewählt ist, die Sie in Ihrer App erstellen möchten. Wählen Sie **OK** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-capabilities-tab.png\" alt-text=\"Auswählen der App-Funktion\" border=\"false\":::\n\n1. Wählen Sie **JavaScript** als Programmiersprache aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-language-tab.png\" alt-text=\"Screenshot, der zeigt, wie die Programmiersprache ausgewählt wird.\" border=\"false\":::\n\n1. Geben Sie `helloworld` als Anwendungsname ein. Stellen Sie sicher, dass Sie nur alphanumerische Zeichen verwenden. Drücken Sie **die EINGABETASTE** , um fortzufahren.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/enter-name-tab.png\" alt-text=\"Screenshot, der zeigt, wo der App-Name eingegeben werden soll.\" border=\"false\":::\n\n    Die Teams-Registerkarten-App wird in wenigen Sekunden erstellt.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/app-created.png\" alt-text=\"Screenshot der erstellten App.\" border=\"false\":::\n\n    Nachdem Ihre App erstellt wurde, zeigt Teams Toolkit eine Meldung an, um den Speicherort anzugeben, an dem der Projektarbeitsbereich erstellt wird. Dieser Ordner ist der Standardspeicherort, der in Visual Studio Code Einstellungen angegeben ist.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/location-change.png\" alt-text=\"Ortsnachricht\":::\n\n    Die Nachricht bietet zwei Optionen:\n    \n    - **Speicherort ändern**\n    - **Lokales Debuggen**\n    \n    Für dieses Lernprogramm müssen Sie diese Optionen nicht verwenden.\n\n    > [!NOTE]\n    > Wenn Sie den Speicherort für den Arbeitsbereich ändern möchten, wird er nur für Projekte angezeigt, die Sie nach dem erneuten Laden Visual Studio Code erstellen. Am Speicherort vorhandener Projekte wird keine Änderung vorgenommen.\n\n    <details>\n    <summary>Eine kurze Übersicht über das Erstellen einer Teams-App.</summary>\n    Sehen Sie sich diese kurze Zusammenfassung zum Erstellen einer Teams-App an.\n\n    ![Erstellen einer Teams-App](~/assets/videos/javascript-tab-app.gif) </details>\n\n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cli)\n\nVerwenden Sie die `teamsfx`-CLI zum Erstellen Ihres ersten Projekts. Beginnen Sie in dem Ordner, in dem Sie den Projektordner erstellen möchten.\n\n``` bash\nteamsfx new\n```\n\nMit der CLI können Sie eine neue Teams-App erstellen. Die CLI führt Sie durch eine Reihe von Fragen. Jede Frage enthält eine Anweisung zur Beantwortung.\n\nVerwenden Sie z. B. die Pfeiltasten, um eine Option auszuwählen. Nachdem Sie die Auswahl ausgewählt haben, drücken Sie die **EINGABETASTE** , um dies zu bestätigen.\n\n1. Wählen Sie **Neue Microsoft Teams-App erstellen** aus.\n1. Wählen Sie die **Registerkartenfunktion** aus.\n1. Wählen Sie **Azure**-Frontend-Hosting aus.\n1. Wählen Sie keine Cloudressourcen aus.\n1. Wählen Sie **JavaScript** als Programmiersprache aus.\n1. Drücken Sie die **EINGABETASTE**, um den Standardordner des Arbeitsbereichs auszuwählen.\n1. Geben Sie `helloworld` als Namen für Ihre App ein. Der Name der App darf nur alphanumerische Zeichen enthalten.\n\n  Nachdem Sie alle Fragen beantwortet haben, wird Ihr Projekt erstellt.\n\n---\n\n## <a name=\"take-a-tour-of-the-tab-app-source-code\"></a>Machen Sie einen Überblick über den Quellcode der Registerkarten-App\n\nTeams Toolkit stellt alle Komponenten zum Erstellen einer App bereit. Nach dem Erstellen des Projekts können Sie die Projektordner und -dateien im **Explorer-Bereich** von Visual Studio Code anzeigen.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/hw-folder-structure-tab.png\" alt-text=\"Project Dateien, die für die App mit Tab-Funktion in Visual Studio Code ein Gerüst erstellen.\":::\n\nObwohl Sie ein beliebiges Benutzeroberflächenframework auswählen können (oder kein Benutzeroberflächenframework verwenden können), bietet dieser Beispielvorlagencode ein Gerüst mit React Komponenten.\n\nUnter anderen Elementen in dieser Verzeichnisstruktur verwaltet das Toolkit Folgendes:\n\n| Ordnername | Inhalt |\n| --- | --- |\n| `.fx/configs` | Konfigurationsdateien, die der Benutzer für die Teams App anpassen kann. |\n| - `.fx/configs/config.<envName>.json` | Konfigurationsdatei für jede Umgebung. |\n| - `.fx/configs/azure.parameters.<envName>.json` | Parameterdatei für die Azure BICEP-Bereitstellung für jede Umgebung. |\n| - `.fx/configs/projectSettings.json` | Globale Projekteinstellungen, die für alle Umgebungen gelten. |\n| - `.fx/configs/localSettings.json` | Konfigurationsdatei für das lokale Debuggen. |\n| - `.fx/states` | Bereitstellungsausgabe, die vom Teams Toolkit generiert wird.  Das Toolkit erstellt diesen Ordner, nachdem Sie Ressourcen für Ihre App bereitgestellt haben. |\n| - `.fx/states/state.<envName>.json` | Bereitstellen der Ausgabedatei für jede Umgebung. |\n| - `.fx/states/<env>.userdata` | Vertrauliche Benutzerdaten für die Bereitstellungsausgabe für jede Umgebung. |\n| `tabs` | Code für die zur Laufzeit erforderliche Registerkartenfunktion, z. B. datenschutzhinweis, Nutzungsbedingungen und Konfigurationsregisterkarten. |\n| - `tabs/src/index.jsx` | Einstiegspunkt für die Front-End-App, mit der die Hauptkomponente der App gerendert wird `ReactDOM.render()` |\n| - `tabs/src/components/App.jsx` | Code für die Behandlung des URL-Routings in der App. Es ruft das [Microsoft Teams JavaScript-Client-SDK](../msteams-platform/tabs/how-to/using-teams-client-sdk.md) auf, um die Kommunikation zwischen Ihrer App und Microsoft Teams herzustellen. |\n| - `tabs/src/components/Tab.jsx` | Code zum Implementieren der Benutzeroberfläche Ihrer App. |\n| - `tabs/src/components/TabConfig.jsx` | Code zum Implementieren der Benutzeroberfläche, die Ihre App konfiguriert. |\n| `templates/appPackage` | App-Manifestvorlagendateien und die App-Symbole: color.png und outline.png. |\n| - `templates/appPackage/manifest.local.template.json` | App-Manifest zum Ausführen der App in der lokalen Umgebung  |\n| - `templates/appPackage/manifest.remote.template.json` | App-Manifest zum Ausführen der App in einer Remoteumgebung, z. B. einer Azure-Website |\n| `templates/azure` | BICEP-Vorlagendateien |\n|\n\nWenn Sie die Cloudfunktionalität hinzufügen, fügt Teams Toolkit dem Projekt die erforderlichen Ordner hinzu. Der `api` Ordner enthält den Code für alle Azure-Funktionen, die Sie schreiben.\n"
- title: Erstellen und Ausführen ihrer ersten Registerkarten-App
  durationInMinutes: 1
  content: "\nNachdem Sie Ihren Projektarbeitsbereich mit Teams Toolkit eingerichtet haben, erstellen Sie Ihr Registerkartenprojekt. Sie müssen sich bei Ihrem Microsoft 365 Konto anmelden.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Melden Sie sich bei Ihrem Microsoft 365-Konto an.\n\nVerwenden Sie Ihr Microsoft 365 Konto, um sich bei Teams anzumelden. Wenn Sie einen Microsoft 365-Entwicklerprogrammmandanten verwenden, ist ihr Microsoft 365 Konto das Administratorkonto, das Sie bei der Registrierung eingerichtet haben.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Öffnen Sie Visual Studio Code.\n1. Wählen Sie in der Randleiste das Symbol Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: aus.\n1. Wählen Sie **\"Bei M365 anmelden**\" aus.\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können.\n\n1. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Microsoft 365 Konto an.\n1. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden, und kehren Sie zu Visual Studio Code zurück.\n1. Kehren Sie zu Teams Toolkit in Visual Studio Code zurück.\n\n    Im Abschnitt **\"KONTEN**\" der Randleiste wird ihr Microsoft 365 Kontoname angezeigt. Teams Toolkit zeigt **das Querladen an**, wenn das Querladen für Ihr Microsoft 365 Konto aktiviert ist.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/m365-sideloading-enabled.png\" alt-text=\"Screenshot, der zeigt, wo Sie sich bei Microsoft 365 und Azure anmelden können.\" border=\"false\":::\n\n    Jetzt können Sie die App erstellen und in der lokalen Umgebung ausführen!\n\n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cline)\n\n1. Melden Sie sich bei Microsoft 365 mit der TeamsFx CLI an:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden.\n\n2. Melden Sie sich bei Azure mit der TeamsFx CLI an:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden.\n\n    Die Kontoanmeldungen werden zwischen Visual Studio Code und der TeamsFx CLI geteilt.\n\n    Nachdem die Entwicklungsumgebung konfiguriert ist, können Sie Ihre erste Teams App erstellen, erstellen und bereitstellen.\n\n---\n\n## <a name=\"build-and-run-your-app-locally-in-visual-studio-code\"></a>Erstellen und lokales Ausführen der App in Visual Studio Code\n\nSo erstellen Sie Ihre App und führen sie lokal aus:\n\n1. Wählen Sie in Visual Studio Code **F5** aus, um die Anwendung im Debugmodus auszuführen.\n\n    <!-- markdownlint-disable MD033 -->\n\n    <details>\n    <summary>Erfahren Sie, was geschieht, wenn Sie Ihre App lokal im Debugger ausführen.</summary>\n\n    Falls Sie sich fragen, wenn Sie **F5** drücken, Teams Toolkit:\n\n    - Registriert Ihre App bei Azure Active Directory. Diese App verfügt über Berechtigungen für den Speicherort, von dem die App geladen wird, und die Back-End-Ressourcen.\n    - *Lädt* die App in Teams quer.\n    - Startet das Back-End der App lokal mithilfe von [Azure Function Core Tools](/azure/azure-functions/functions-run-local?#start).\n    - Startet das lokal gehostete Front-End der App.\n    - Startet Microsoft Teams in einem Webbrowser mit einem Befehl, um Teams anzuweisen, die App querzuladen.`https://localhost:3000/tab` Diese URL wird im App-Manifest registriert.\n    - Es wird ein App-Manifest generiert und im Entwicklerportal für Microsoft Teams verfügbar gemacht. Microsoft Teams verwendet das App-Manifest, um die verbundenen Clients darüber zu informieren, von wo die App geladen werden soll.\n\n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/f5-build-and-run.png\" alt-text=\"Screenshot, der zeigt, wenn F5 gedrückt wird.\":::\n\n    > [!NOTE]\n    > Wenn Sie die App zum ersten Mal ausführen, werden alle Abhängigkeiten heruntergeladen, und die App wird erstellt. Nach Abschluss des Builds wird ein Browserfenster geöffnet. Dieser Vorgang kann 3 bis 5 Minuten dauern.\n\n    Das Toolkit fordert Sie auf, bei Bedarf ein lokales Zertifikat zu installieren. Mit diesem Zertifikat kann Microsoft Teams Ihre Anwendung von `https://localhost` laden.\n\n1. Wählen Sie **\"Ja** \" aus, wenn das folgende Dialogfeld angezeigt wird:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ssl-prompt.png\" alt-text=\"Screenshot der Aufforderung zum Installieren eines SSL-Zertifikats, damit Teams Ihre Anwendung von localhost laden können.\":::\n\n    Oder wählen Sie je nach Betriebssystem **\"Weiter**\" aus:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/ssl-prompt-mac.png\" alt-text=\"Screenshot der Aufforderung zum Installieren eines SSL-Zertifikats, damit Teams Ihre Anwendung von localhost auf dem Mac laden können.\":::\n\n    Teams Webclient wird in einem Browserfenster geöffnet.\n\n1. Melden Sie sich mit Ihrem Microsoft 365-Konto an, wenn Sie dazu aufgefordert werden.\n\n1. Wählen Sie **\"Hinzufügen\"** aus, wenn Sie aufgefordert werden, die App auf Teams auf Ihrem lokalen Computer querzuladen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/add-tab-app-local-debug.png\" alt-text=\"Hinzufügen der App zu Teams\":::\n\n1. Herzlichen Glückwunsch, Ihre erste App wird auf Teams ausgeführt!\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tab-app-local-debug.png\" alt-text=\"Screenshot der fertiggestellten App\":::\n\n1. Navigieren Sie durch die Seite, um die Benutzerdetails anzuzeigen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tab-app-local-authorize.png\" alt-text=\"Screenshot des Abschnitts &quot;Benutzerinformationen&quot; auf der Registerkarte\":::\n    \n1. Wählen Sie **\"Autorisieren**\" aus, damit Ihre App Benutzerdetails mithilfe von Microsoft Graph abrufen kann.\n\n    Die App fordert die Berechtigung zum Gewähren des Zugriffs zum Anzeigen von Benutzerdetails an.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tab-app-graph-permission.png\" alt-text=\"Screenshot der Autorisierung der App für den Zugriff auf Benutzerdetails\":::\n\n1. Wählen Sie **\"Annehmen\"** aus, um Ihrer App den Zugriff auf Benutzerdetails zu ermöglichen.\n\n    Ihr Foto und Ihre Details werden auf Ihren persönlichen Registerkarten angezeigt.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tab-app-user-info.png\" alt-text=\"Screenshot der Benutzerinformationen auf der Registerkarte\":::\n\n    Sie können normale Debugaktivitäten ausführen, z. B. das Festlegen von Haltepunkten, als ob es sich um eine andere Webanwendung handeln würde. Die App unterstützt Hot Reloading. Wenn Sie eine Datei innerhalb des Projekts ändern, wird die Seite neu geladen.\n\n  <!-- markdownlint-disable MD033 -->\n\n  <details>\n  <summary>Erfahren Sie, wie Sie Probleme beheben, wenn Ihre App nicht lokal ausgeführt wird.</summary>\n\n  Um Ihre App erfolgreich in Teams auszuführen, stellen Sie sicher, dass Sie das Querladen in Ihrem Teams Konto aktiviert haben. Weitere Informationen zum Querladen finden Sie im Abschnitt \"Voraussetzungen\".\n\n  </details>\n\n  Sie wissen, wie Sie das Toolkit verwenden, um eine Registerkarten-App einzurichten und lokal auszuführen. Als Nächstes erfahren wir, wie Sie mit dem Toolkit einen Chat-Bot für Unterhaltungen erstellen!\n"
- title: Erstellen eines Projektarbeitsbereichs für Ihre Bot-App
  durationInMinutes: 1
  content: "\nSie haben Ihre Registerkarten-App erstellt. Jetzt erstellen wir Ihre erste Bot-App.\n\nDie Bot-Funktion einer Teams App erstellt einen Chatbot oder einen Unterhaltungs-Bot. Sie verwenden es, um einfache und automatisierte Aufgaben auszuführen, z. B. die Bereitstellung von Kundendienst. Ein Bot spricht mit einem Webdienst und hilft Ihnen bei der Nutzung seiner Angebote. Sie können eine Wettervorhersage, Reservierungen oder einen beliebigen anderen Dienst erhalten, der mit einem Unterhaltungsbot angeboten wird.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-bot/your-helloworld-app-bot.png\" alt-text=\"Diagramm, das zeigt, dass diese App drei Features aufweist. Bot ist hervorgehoben.\" border=\"false\":::\n\nWie Sie diese Apps bereits vorbereitet haben, können Sie ein neues Teams Projekt zum Erstellen der Bot-App einrichten.\n\nIn diesem Lernprogramm lernen Sie Folgendes:\n\n1. [So richten Sie ein neues Bot-Projekt mit Teams Toolkit ein.](#create-your-bot-project-workspace)\n1. [Informationen zur Verzeichnisstruktur Ihres App-Projekts.](#take-a-tour-of-the-bot-app-source-code)\n\n> [!IMPORTANT]\n> Derzeit sind Bots in Government Community Cloud (GCC) verfügbar, aber nicht in GCC-High und department of Defense (DOD).\n\n## <a name=\"create-your-bot-project-workspace\"></a>Erstellen des Bot-Projektarbeitsbereichs\n\nWenn die Voraussetzungen erfüllt sind, beginnen wir!\n\n> [!NOTE]\n> Die angezeigte Visual Studio Code Benutzeroberfläche stammt von Mac. Sie kann je nach Betriebssystem, Teams Toolkit-Version und Umgebung variieren.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Öffnen Sie Visual Studio Code.\n1. Wählen Sie das Symbol Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: in der Visual Studio Code-Randleiste aus.\n\n1. Wählen Sie **Neue Microsoft Teams-App erstellen** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Ort des Links „Neues Projekt erstellen“ in der Randleiste des Microsoft Teams-Toolkits.\" border=\"false\":::\n\n1. Wählen Sie **\"Neue Teams-App** erstellen\" aus, um eine App mit dem Teams Toolkit zu erstellen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"Starten des Assistenten für „Neues Projekt erstellen“\" border=\"false\":::\n\n1. Wählen Sie **\"Bot**\" aus, deaktivieren **Sie die Registerkarte**, und wählen Sie **\"OK**\" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/select-capabilities-bot.png\" alt-text=\"Screenshot, der zeigt, wie Ihrer neuen App Funktionen hinzufügt werden können.\" border=\"false\":::\n\n1. Wählen Sie im Abschnitt **\"Programmiersprache**\" **JavaScript** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/select-language-bot.png\" alt-text=\"Screenshot, der zeigt, wie die Programmiersprache ausgewählt wird.\" border=\"false\":::\n\n1. Geben Sie einen passenden Namen für Ihre App ein, wie z. B. `hellobot`. Stellen Sie sicher, dass der Name Ihrer App alphanumerisch ist. Drücken Sie **die EINGABETASTE** , um fortzufahren.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/enter-name-bot.png\" alt-text=\"Screenshot, der zeigt, wo der App-Name eingegeben werden soll.\" border=\"false\":::\n\n    Ihre Teams-App mit einer Bot-Funktion wird in wenigen Sekunden erstellt.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/app-created-bot.png\" alt-text=\"Screenshot der erstellten App.\" border=\"false\":::\n\n    Nachdem Ihre App erstellt wurde, zeigt das Teams Toolkit eine Meldung an, um den Speicherort anzugeben, an dem der Projektarbeitsbereich erstellt wird. Dieser Ordner ist der Standardspeicherort, der in Visual Studio Code Einstellungen angegeben ist.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/location-change.png\" alt-text=\"Ortsnachricht\":::\n\n    Die Nachricht bietet zwei Optionen:\n    \n    - **Speicherort ändern**\n    - **Lokales Debuggen**\n    \n    Für dieses Lernprogramm müssen Sie diese Optionen nicht verwenden.\n\n    > [!NOTE]\n    > Wenn Sie den Speicherort für den Arbeitsbereich ändern möchten, wird er nur für Projekte angezeigt, die Sie nach dem erneuten Laden Visual Studio Code erstellen. Am Speicherort vorhandener Projekte wird keine Änderung vorgenommen.\n\n<details>\n<summary>Eine kurze Übersicht über das Erstellen einer Teams-App.</summary>\nSehen Sie sich diese kurze Zusammenfassung zum Erstellen einer Teams-App an.\n\n![Erstellen einer Teams-App](~/assets/videos/javascript-bot-app.gif)\n</details>\n\n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cli)\n\nVerwenden Sie die `teamsfx`-CLI zum Erstellen Ihres ersten Projekts.  Beginnen Sie in dem Ordner, in dem Sie den Projektordner erstellen möchten.\n\n``` bash\nteamsfx new\n```\n\nMit der CLI können Sie eine neue Teams-App erstellen. Die CLI führt Sie durch eine Reihe von Fragen. Jede Frage enthält eine Anweisung zur Beantwortung.\n\nVerwenden Sie z. B. die Pfeiltasten, um eine Option auszuwählen. Nachdem Sie die Auswahl ausgewählt haben, drücken Sie die **EINGABETASTE** , um dies zu bestätigen.\n\n1. Wählen Sie **Neue Microsoft Teams-App erstellen** aus.\n1. Wählen Sie **Bot** aus, und heben Sie die **Auswahl auf der Registerkarte auf**.\n1. Wählen Sie **JavaScript** als Programmiersprache aus.\n1. Drücken Sie **die EINGABETASTE** , um den Standardarbeitsbereichsordner auszuwählen.\n1. Geben Sie einen passenden Namen für Ihre App ein, wie z. B. `HelloBot`.  Der Name der App darf nur aus alphanumerischen Zeichen bestehen.\n\nNachdem Sie alle Fragen beantwortet haben, wird Ihr Projekt erstellt.\n\n---\n\n## <a name=\"take-a-tour-of-the-bot-app-source-code\"></a>Machen Sie eine Tour durch den Quellcode der Bot-App\n\nNachdem das Gerüst erstellt wurde, zeigen Sie die Projektverzeichnisse und Dateien im Explorer-Bereich von Visual Studio Code an.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/hw-folder-structure-bot.png\" alt-text=\"Project Für Bot in Visual Studio Code gerüstete Dateien.\" border=\"false\":::\n\n| Ordnername | Inhalt |\n| --- | --- |\n| `.fx/configs` | Konfigurationsdateien, die der Benutzer für die Teams App anpassen kann. |\n| `.fx/configs/config.<envName>.json` | Konfigurationsdatei für jede Umgebung. |\n| `.fx/configs/azure.parameters.<envName>.json` | Parameterdatei für die Azure BICEP-Bereitstellung für jede Umgebung. |\n| `.fx/configs/projectSettings.json` | Globale Projekteinstellungen, die für alle Umgebungen gelten. |\n| `.fx/configs/localSettings.json` | Konfigurationsdatei für das lokale Debuggen. |\n| `.fx/states` | Bereitstellungsausgabe, die vom Toolkit generiert wird.  Das Toolkit erstellt diesen Ordner, nachdem Sie Ressourcen für Ihre App bereitgestellt haben. |\n| `.fx/states/state.<envName>.json` | Bereitstellen der Ausgabedatei für jede Umgebung. |\n| `.fx/states/<env>.userdata` | Vertrauliche Benutzerdaten für die Bereitstellungsausgabe für jede Umgebung. |\n| `bot` |  Code für die Bot-Funktion, der zur Laufzeit benötigt wird. |\n| `bot/teamsBot.js` | Haupteinstiegspunkt für die Bot-App. |\n| `templates/appPackage` | App-Manifestvorlagendateien und die App-Symbole color.png und outline.png. |\n| `templates/appPackage/manifest.local.template.json` | App-Manifest zum Ausführen der App in der lokalen Umgebung  |\n| `templates/appPackage/manifest.remote.template.json` | App-Manifest zum Ausführen der App in einer Remoteumgebung, z. B. azure-Website |\n| `templates/azure` | BICEP-Vorlagendateien |\n\n> [!Tip]\n> Machen Sie sich mit Bots außerhalb von Teams vertraut, bevor Sie Ihren ersten Bot in Teams integrieren.\n"
- title: Erstellen und Ausführen Ihrer ersten Bot-App
  durationInMinutes: 1
  content: "\nNachdem Sie Ihren Projektarbeitsbereich mit Teams Toolkit eingerichtet haben, erstellen Sie Ihr Botprojekt. Stellen Sie sicher, dass Sie sich bei Ihrem Microsoft 365 Konto angemeldet haben.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Melden Sie sich bei Ihrem Microsoft 365-Konto an.\n\nVerwenden Sie dieses Konto, um sich bei Teams anzumelden. Wenn Sie einen Microsoft 365-Entwicklerprogrammmandanten verwenden, ist ihr Microsoft 365 Konto das Administratorkonto, das Sie bei der Registrierung eingerichtet haben.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Öffnen Sie Visual Studio Code.\n1. Wählen Sie in der Randleiste das Symbol Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: aus.\n1. Wählen Sie **\"Bei M365 anmelden**\" aus.\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können.\n\n1. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Microsoft 365 Konto an.\n1. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden, und kehren Sie zu Visual Studio Code zurück.\n1. Kehren Sie zu Teams Toolkit in Visual Studio Code zurück.\n\n    Verwenden Sie dieses Konto, um sich bei Teams anzumelden. Wenn Sie einen Microsoft 365-Entwicklerprogrammmandanten verwenden, ist ihr Microsoft 365 Konto das Administratorkonto, das Sie bei der Registrierung eingerichtet haben.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/m365-sideloading-enabled.png\" alt-text=\"Screenshot, der zeigt, wo Sie sich bei Microsoft 365 und Azure anmelden können.\" border=\"false\":::\n\n    Jetzt können Sie die App erstellen und lokal ausführen!\n\n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cline)\n\n1. Melden Sie sich bei Microsoft 365 mit der TeamsFx CLI an:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden.\n\n2. Melden Sie sich bei Azure mit der TeamsFx CLI an:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden.\n\n    Die Kontoanmeldungen werden zwischen Visual Studio Code und der TeamsFx CLI geteilt.\n\n    Nachdem die Entwicklungsumgebung konfiguriert ist, können Sie Ihre erste Teams App erstellen, erstellen und bereitstellen.\n\n---\n\n## <a name=\"build-and-run-your-first-bot-app-locally\"></a>Erstellen und lokales Ausführen Ihrer ersten Bot-App\n\nSo erstellen Und führen Sie Ihre App in der lokalen Umgebung aus:\n\n1. Wählen Sie in Visual Studio Code **F5** aus, um Ihre App im Debugmodus auszuführen.\n\n    <!-- markdownlint-disable MD033 -->\n\n    <details>\n    <summary>Erfahren Sie, was geschieht, wenn Sie Ihre App lokal im Debugger ausführen.</summary>\n\n    Falls Sie sich fragen, wenn Sie **F5** drücken, Teams Toolkit:\n\n    - Registriert Ihre App bei Azure Active Directory. Diese App verfügt über Berechtigungen für den Speicherort, von dem die App geladen wird, und die Back-End-Ressourcen.\n    - *Lädt* die App in Teams quer.\n    - Startet das Back-End der App lokal mithilfe von [Azure Function Core Tools](/azure/azure-functions/functions-run-local?#start).\n    - Startet das lokal gehostete Front-End der App.\n    - Startet Microsoft Teams in einem Webbrowser mit einem Befehl, um Teams anzuweisen, die App querzuladen.`https://localhost:3000/tab` Diese URL wird im App-Manifest registriert.\n    - Es wird ein App-Manifest generiert und im Entwicklerportal für Microsoft Teams verfügbar gemacht. Microsoft Teams verwendet das App-Manifest, um die verbundenen Clients darüber zu informieren, von wo die App geladen werden soll.\n\n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/f5-build-and-run.png\" alt-text=\"Screenshot, der zeigt, wenn F5 zum Debuggen gedrückt wird.\":::\n\n    > Wenn Sie die App zum ersten Mal ausführen, werden alle Abhängigkeiten heruntergeladen, und die App wird erstellt. Wenn die Erstellung abgeschlossen ist, wird automatisch ein Browserfenster geöffnet. Dieser Vorgang kann 3 bis 5 Minuten dauern.\n\n    Ihr Webbrowser beginnt mit der Ausführung der App.\n\n1. Melden Sie sich mit Ihrem Microsoft 365-Konto an, wenn Sie dazu aufgefordert werden.\n\n1. Wählen Sie **\"Hinzufügen\"** aus, wenn Sie aufgefordert werden, die App auf Teams auf Ihrem lokalen Computer querzuladen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/add-bot-app-local-debug.png\" alt-text=\"Screenshot, der zeigt, dass der Bot auf Teams Client hinzugefügt wird.\":::\n\n    Jetzt wird der Bot erfolgreich auf Teams ausgeführt! Nachdem die App geladen wurde, wird eine Chatsitzung mit dem Bot geöffnet.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/app-added-bot-local-debug.png\" alt-text=\"Screenshot, der zeigt, dass der Bot auf Teams Client ausgeführt wird.\":::\n\n    Sie können eingeben `welcome` , um eine Einführungskarte anzuzeigen, und eine Eingabe eingeben `learn` , um zur Dokumentation für adaptive Karten und Bot-Befehle zu wechseln.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/bot-app-learn-local-debug.png\" alt-text=\"Screenshot der Karte &quot;Lernen&quot; im Bot auf Teams Client.\":::       \n\n    Sie können normale Debugaktivitäten ausführen, z. B. das Festlegen von Haltepunkten, wie bei jeder anderen Webanwendung. Öffnen Sie die Datei `bot/teamsBot.js`, und suchen Sie die `onMessage()`-Methode. Legen Sie für jeden Fall einen Haltepunkt fest. Geben Sie dann Text ein.\n\n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>Erfahren Sie, wie Sie Probleme beheben, wenn Ihre App nicht lokal ausgeführt wird.</summary>\n\n  Um Ihre App erfolgreich in Teams auszuführen, stellen Sie sicher, dass Sie das Querladen in Ihrem Teams Konto aktiviert haben. Weitere Informationen zum Querladen finden Sie im Abschnitt \"Voraussetzungen\".\n\n  > [!IMPORTANT]\n  > Sideloading-Apps sind derzeit in Government Community Cloud (GCC), GCC-Hoch und DOD verfügbar.\n\n  > [!TIP]\n  > Überprüfen Sie mit dem [App-Überprüfungstool](https://dev.teams.microsoft.com/appvalidation.html) nach Problemen, bevor Sie Ihre App querladen. Dieses Tool ist im Toolkit enthalten. Beheben Sie die Fehler beim Querladen der App.\n  </details> \n"
- title: Erstellen eines Projektarbeitsbereichs für Ihre Messaging-Erweiterungs-App
  durationInMinutes: 1
  content: "\nSie haben Ihre Bot-App erstellt. Jetzt erstellen wir Ihre erste Messaging-Erweiterungs-App.\n\nMit der Messaging-Erweiterungsfunktion können Sie mit einem Webdienst interagieren. Verwenden Sie den Verfassenbereich, das Befehlsfeld oder ein Messaging in Teams Client, um Aktionen in einem externen System zu suchen und zu initiieren.\n\n  :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-msgext/your-helloworld-app-msgext.png\" alt-text=\"Diagramm, das zeigt, dass diese App drei Features aufweist. Die Messaging-Erweiterung ist hervorgehoben.\" border=\"false\":::\n\nEs gibt zwei Arten von Teams-**Messaging-Erweiterungen**:\n\n- [Suchbefehle](../msteams-platform/messaging-extensions/how-to/search-commands/define-search-command.md): Sie können externe Systeme durchsuchen. Anschließend können Sie die Ergebnisse in eine Nachricht in Form einer Karte einfügen.\n- [Aktionsbefehle](../msteams-platform/messaging-extensions/how-to/action-commands/define-action-command.md): Sie können Ihren Benutzern ein modales Popup anzeigen, um Informationen zu sammeln oder anzuzeigen. Anschließend können Sie deren Interaktion verarbeiten und Informationen an Teams senden.\n\nErstellen wir nun eine Messaging-Erweiterungs-App mit einem *Suchbefehl*. Verwenden Sie sie, um nach externen Daten zu suchen und die Ergebnisse in eine Nachricht innerhalb Teams Clients einzufügen.\n\nWie Sie bereits auf die Erstellung dieser Apps vorbereitet haben, können Sie ein neues Teams Projekt zum Erstellen der Messaging-Erweiterungs-App einrichten.\n\n> [!NOTE]\n> Messaging-Erweiterungen sind auf Bots angewiesen, um ein Dialogfeld zwischen Benutzer und Code zu gewährleisten.\n\n\nIn diesem Lernprogramm lernen Sie Folgendes:\n\n1. [Einrichten eines neuen Messaging-Erweiterungsprojekts mit Teams Toolkit.](#create-your-messaging-extension-project-workspace)\n1. [Informationen zur Verzeichnisstruktur Ihres App-Projekts.](#take-a-tour-of-the-messaging-extension-app-source-code)\n\n## <a name=\"create-your-messaging-extension-project-workspace\"></a>Erstellen des Messaging-Erweiterungsprojektarbeitsbereichs\n\nWenn die Voraussetzungen erfüllt sind, beginnen wir!\n\n> [!NOTE]\n> Die angezeigte Visual Studio Code Benutzeroberfläche stammt von Mac. Sie kann je nach Betriebssystem, Toolkit-Version und Umgebung unterschiedlich sein.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vsc)\n\n1. Öffnen Sie Visual Studio Code.\n1. Wählen Sie das Symbol Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: in der Visual Studio Code-Randleiste aus.\n\n1. Wählen Sie auf der linken Seite des Toolkits \"**Neue Project erstellen**\" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Ort des Links „Neues Projekt erstellen“ in der Randleiste des Microsoft Teams-Toolkits.\" border=\"false\":::\n\n1. Wählen Sie **\"Neue Project** erstellen\" aus, um eine App mit dem Teams Toolkit zu erstellen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"Starten des Assistenten für „Neues Projekt erstellen“\" border=\"false\":::\n\n1. Wählen Sie **\"Messaging-Erweiterung**\", \" **Registerkarte\"** und \" **OK**\" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/select-capabilities-mex.png\" alt-text=\"Screenshot, der zeigt, wie Ihrer neuen App Funktionen hinzufügt werden können.\" border=\"false\":::\n\n1. Wählen Sie **JavaScript** als Programmiersprache aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/select-language-mex.png\" alt-text=\"Screenshot, der zeigt, wie die Programmiersprache ausgewählt wird.\" border=\"false\":::\n\n1. Geben Sie einen geeigneten Namen für Ihre App ein. Stellen Sie sicher, dass der Name der App alphanumerisch ist. Drücken Sie **die EINGABETASTE** , um fortzufahren.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/enter-name-mex.png\" alt-text=\"Screenshot der Eingabe des App-Namens.\" border=\"false\":::\n\n    Teams Toolkit erstellt die App in wenigen Sekunden.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/app-created-mex.png\" alt-text=\"Screenshot der erstellten App.\" border=\"false\":::\n\n    Nachdem Ihre App erstellt wurde, zeigt das Teams Toolkit eine Meldung an, um den Speicherort anzugeben, an dem der Projektarbeitsbereich erstellt wird. Dies ist der Standardspeicherort, der in Visual Studio Code Einstellungen angegeben ist.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/location-change.png\" alt-text=\"Ortsnachricht\":::\n\n    Die Nachricht bietet zwei Optionen:\n    \n    - **Speicherort ändern**\n    - **Lokales Debuggen**\n    \n    Für dieses Lernprogramm müssen Sie diese Optionen nicht verwenden.\n\n    > [!NOTE]\n    > Wenn Sie den Speicherort für den Arbeitsbereich ändern möchten, wird er nur für Projekte angezeigt, die Sie nach dem erneuten Laden Visual Studio Code erstellen. Am Speicherort vorhandener Projekte wird keine Änderung vorgenommen.\n\n  <details>\n  <summary>Eine kurze Übersicht über das Erstellen einer Teams-App.</summary>\n  Sehen Sie sich diese kurze Zusammenfassung zum Erstellen einer Teams-App an.\n\n  ![Erstellen einer Teams-App](~/assets/videos/javascript-msg-ext-app.gif)\n  </details>\n\n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cli)\n\nVerwenden Sie die `teamsfx`-CLI zum Erstellen Ihres ersten Projekts. Beginnen Sie in dem Ordner, in dem Sie den Projektordner erstellen möchten.\n\n``` bash\nteamsfx new\n```\n\nMit der CLI können Sie eine neue Teams-App erstellen. Die CLI führt Sie durch eine Reihe von Fragen. Jede Frage enthält eine Anweisung zur Beantwortung.\n\nVerwenden Sie beispielsweise Pfeiltasten, um eine Option auszuwählen. Nachdem Sie die Auswahl ausgewählt haben, drücken Sie die **EINGABETASTE** , um dies zu bestätigen.\n\n\n1. Wählen Sie **Neue Microsoft Teams-App erstellen** aus.\n1. Wählen Sie **\"Nachrichtenerweiterung\" aus** , und deaktivieren Sie **die Registerkarte**.\n1. Wählen Sie **JavaScript** als Programmiersprache aus.\n1. Drücken Sie **die EINGABETASTE** , um den Standardarbeitsbereichsordner auszuwählen.\n1. Geben Sie einen passenden Namen für Ihre App ein, wie z. B. `HelloMsgExtn`.  Der Name der App darf nur aus alphanumerischen Zeichen bestehen.\n\n  Nachdem alle Fragen beantwortet wurden, wird Ihr Projekt erstellt.\n\n---\n\n## <a name=\"take-a-tour-of-the-messaging-extension-app-source-code\"></a>Machen Sie einen Überblick über den Quellcode der Messaging-Erweiterungs-App\n\nEine Messaging-Erweiterung verwendet das Bot Framework. Sie verwenden es für die Interaktion mit Ihrem Dienst über eine Unterhaltung. Nachdem das Gerüst erstellt wurde, zeigen Sie die Projektverzeichnisse und Dateien im Explorer-Bereich von Visual Studio Code an.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/hw-folder-structure-mex.png\" alt-text=\"Dateilayout eines Botprojekts\" border=\"false\":::\n\n| Ordnername | Inhalt |\n| --- | --- |\n| `.fx/configs` | Konfigurationsdateien, die der Benutzer für die Teams App anpassen kann. |\n| `.fx/configs/config.<envName>.json` | Konfigurationsdatei für jede Umgebung. |\n| `.fx/configs/azure.parameters.<envName>.json` | Parameterdatei für die Azure BICEP-Bereitstellung für jede Umgebung. |\n| `.fx/configs/projectSettings.json` | Globale Projekteinstellungen, die für alle Umgebungen gelten. |\n| `.fx/configs/localSettings.json` | Konfigurationsdatei für das lokale Debuggen. |\n| `.fx/states` | Bereitstellungsausgabe, die vom Toolkit generiert wird.  Das Toolkit erstellt diesen Ordner, nachdem Sie Ressourcen für Ihre App bereitgestellt haben. |\n| `.fx/states/state.<envName>.json` | Bereitstellen der Ausgabedatei für jede Umgebung. |\n| `.fx/states/<env>.userdata` | Vertrauliche Benutzerdaten für die Bereitstellungsausgabe für jede Umgebung. |\n| `bot` |  Code für den Bot, der zur Laufzeit benötigt wird. |\n| `bot/messageExtensionBot.js` | Haupteinstiegspunkt für die Messaging-Erweiterungs-App. |\n| `templates/appPackage` | App-Manifestvorlagendateien und die App-Symbole color.png und outline.png. |\n| `templates/appPackage/manifest.local.template.json` | App-Manifest zum Ausführen der App in der lokalen Umgebung  |\n| `templates/appPackage/manifest.remote.template.json` | App-Manifest zum Ausführen der App in einer Remoteumgebung, z. B. azure-Website |\n| `templates/azure` | BICEP-Vorlagendateien |\n\n> [!Tip]\n> Machen Sie sich mit Bots und Messaging-Erweiterungen außerhalb von Teams vertraut, bevor Sie Ihre App in Teams integrieren.\n"
- title: Erstellen und Ausführen Ihrer ersten Messaging-Erweiterungs-App
  durationInMinutes: 1
  content: "\nNachdem Sie Ihren Projektarbeitsbereich mit Teams Toolkit eingerichtet haben, erstellen Sie Ihr Projekt. Sie müssen sich bei Ihrem Microsoft 365 Konto anmelden.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Melden Sie sich bei Ihrem Microsoft 365-Konto an.\n\nVerwenden Sie dieses Konto, um sich bei Teams anzumelden. Wenn Sie einen Microsoft 365-Entwicklerprogrammmandanten verwenden, ist ihr Microsoft 365 Konto das Administratorkonto, das Sie bei der Registrierung eingerichtet haben.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vcode)\n\n1. Öffnen Sie Visual Studio Code.\n1. Wählen Sie in der Randleiste das Symbol Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: aus.\n1. Wählen Sie **\"Bei M365 anmelden**\" aus.\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können.\n\n1. Melden Sie sich bei Ihrem Microsoft 365-Konto an.\n1. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden, und kehren Sie zu Visual Studio Code zurück.\n1. Kehren Sie zu Teams Toolkit in Visual Studio Code zurück.\n\n    Im Abschnitt **\"KONTEN**\" der Randleiste wird ihr Microsoft 365 Kontoname angezeigt. Das Teams Toolkit zeigt **sideloading aktiviert** an, wenn das Querladen für Ihr Microsoft 365 Konto aktiviert ist.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/m365-sideloading-enabled.png\" alt-text=\"Screenshot, der zeigt, wo Sie sich bei Microsoft 365 und Azure anmelden können.\" border=\"false\":::\n\n    Jetzt können Sie die App erstellen und lokal ausführen!\n\n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cline)\n\n1. Melden Sie sich bei Microsoft 365 mit der TeamsFx CLI an:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden.\n\n2. Melden Sie sich bei Azure mit der TeamsFx CLI an:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden.\n\n    Die Kontoanmeldungen werden zwischen Visual Studio Code und der TeamsFx CLI geteilt.\n\n    Nachdem die Entwicklungsumgebung konfiguriert ist, können Sie Ihre erste Teams App erstellen, erstellen und bereitstellen.\n\n---\n\n## <a name=\"build-and-run-your-app-in-the-local-environment\"></a>Erstellen und Ausführen Ihrer App in der lokalen Umgebung\n\nMit einer Messaging-Erweiterung können Sie mit einem Webdienst interagieren. Es nutzt das Messaging-Feature und die sichere Kommunikation eines Bots. Die Messaging-Erweiterungs-App wird einem Webdienst hinzugefügt, der als Bot registriert ist. \n\n### <a name=\"build-and-run-your-app-locally\"></a>Lokales Erstellen und Ausführen ihrer App\n\n1. Wählen Sie in Visual Studio Code **F5** aus, um die Anwendung im Debugmodus auszuführen.\n    <!-- markdownlint-disable MD033 -->\n    <details>\n    <summary>Erfahren Sie, was geschieht, wenn Sie Ihre App lokal im Debugger ausführen.</summary>\n\n    Wenn Sie **F5** auswählen, Teams Toolkit:\n\n    1. Registriert Ihre Anwendung bei Azure Active Directory.\n    1. Registriert Ihre Anwendung für das \"Querladen\" in Teams.\n    1. Startet Das Anwendungs-Back-End, das lokal mithilfe von [Azure Function Core Tools](/azure/azure-functions/functions-run-local?#start) ausgeführt wird.\n    1. Startet den ngrok-Tunnel, damit Teams mit Ihrer App kommunizieren können.\n    1. Startet Microsoft Teams mit einem Befehl, um Teams anzuweisen, die Anwendung querzuladen.\n\n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/f5-build-and-run-mex.png\" alt-text=\"Screenshot, der zeigt, wann F5 zum Debuggen gedrückt wird.\":::\n\n    > [!NOTE]\n    > Wenn Sie die App zum ersten Mal ausführen, werden alle Abhängigkeiten heruntergeladen, und die App wird erstellt. Nach Abschluss des Builds wird ein Browserfenster geöffnet. Dieser Vorgang kann 3 bis 5 Minuten dauern.\n\n    Teams wird in einem Webbrowser geöffnet.\n    \n1. Melden Sie sich mit Ihrem Microsoft 365-Konto an, wenn Sie dazu aufgefordert werden.\n1. Wählen Sie **\"Hinzufügen** \" aus, um die App Ihrem Konto hinzuzufügen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/add-mex-app-local-debug.png\" alt-text=\"Screenshot zeigt Meldung zum Hinzufügen der App\" border=\"false\":::\n\n    Das Toolkit zeigt eine Meldung an, dass die App Teams hinzugefügt wird.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-added-local-debug.png\" alt-text=\"Screenshot zeigt Meldung, um die App jetzt oder später zu testen\" border=\"true\":::\n\n    - Wenn Sie **\"Got it**\" auswählen, können Sie die App später aus der Liste der quergeladenen Apps testen.\n    - Wenn Sie **\"Ausprobieren\"** auswählen, Teams Ihre App geladen.\n\n1. Wählen Sie **\"Ausprobieren\" aus**.\n\n    Die Messaging-Erweiterungs-App wird in eine Chat-Bot-App geladen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2//first-msgext/app-added-mex-local-debug.png\" alt-text=\"Screenshot der quergeladenen App in Teams\" border=\"false\":::\n\n    Da Messaging-Erweiterungs-Apps bots verwenden, um die Kommunikation zwischen dem Benutzer und dem Webdienst zu ermöglichen, wird Ihre App in eine Chatfunktion eines Bots geladen.\n\n    - Wenn Sie eine Bot-App erstellt haben, bevor Sie die Messaging-Erweiterungs-App erstellt haben, können Sie sehen, dass sie in der bot-App geladen ist, die Sie erstellt haben. Vorherige Chatnachrichten sind sichtbar.\n    - Wenn Sie zuerst eine Messaging-Erweiterung erstellt haben, wird Ihre App in jeden Chat geladen, der auf Teams geöffnet ist.\n\n### <a name=\"test-your-app\"></a>Testen eigener Apps\n\nWenn Ihre App zum ersten Mal geladen wird, können Sie die Messaging-Erweiterungs-App testen. Mit dieser Beispiel-App können Sie npm-Open-Source-Pakete in der Softwareregistrierung durchsuchen.\n\n#### <a name=\"to-run-a-search-query\"></a>So führen Sie eine Suchabfrage aus\n\n1. Geben wir eine Suchzeichenfolge in das Suchfeld ein, z. B. \"cli\". Sie erhalten eine Liste der übereinstimmenden Elemente:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2//first-msgext/mex-search-string.png\" alt-text=\"Screenshot der Verwendung der App für die Suche\" border=\"true\":::\n\n1. Wählen Sie eine aus den Suchergebnissen aus. Sie wird im Bereich zum Verfassen angezeigt, damit Sie das Ergebnis an den Kanal senden können.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-search-result.png\" alt-text=\"Screenshot, der das Suchergebnis zeigt\" border=\"false\":::\n\n1. Wählen Sie die **Anweisungen zum Senden** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-search-sent.png\" alt-text=\"Screenshot, der das im Chat gesendete Suchergebnis zeigt\" border=\"false\":::\n\n    Jetzt haben Sie gelernt, wie Sie eine grundlegende Messaging-Erweiterungs-App erstellen und ausführen können!         \n\n## <a name=\"optional-scenarios\"></a>Optionale Szenarien\n\nSie haben das Suchfeature einer grundlegenden Messaging-Erweiterungs-App getestet. Jetzt können Sie einige andere Funktionen dieser App ausprobieren. Dies sind optionale Szenarien in dieser App.\n<br>\n<br>\n<details>\n<summary>So erstellen Sie eine Karte</summary>\n\n1. Wählen Sie **\"Karte erstellen\" aus**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/app-added-mex-local-debug.png\" alt-text=\"Screenshot, der zeigt, wie Sie eine Karte erstellen\" border=\"false\":::\n\n1. Geben Sie die Kartendetails wie dargestellt ein, und wählen Sie **\"Absenden**\" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-card-details.png\" alt-text=\"Screenshot, der zeigt, wie Sie kartendetails hinzufügen\" border=\"true\":::\n\n    Ihre Kartendetails werden im Bereich zum Verfassen angezeigt.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-card-added.png\" alt-text=\"Screenshot, der zeigt, wie Sie kartendetails hinzufügen\" border=\"true\":::\n\n1. Wählen Sie im Bereich zum Verfassen das Symbol **\"Senden** \" aus.\n\n    Die App sendet die Karte an den Bot-Chat.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-card-sent.png\" alt-text=\"Screenshot der gesendeten Karte\" border=\"false\":::\n</details>\n<br>\n<details>\n<summary>So öffnen Sie Ihre App im Verfassenbereich</summary>\n\nWählen Sie eine der folgenden Möglichkeiten zum Öffnen Ihrer App aus.\n\n**Verwenden von `@mention`:**\n\n1. Geben Sie `@your-app-name` den Befehlsbereich Ihrer App ein.\n    \n    Die App öffnet das Suchfeld, und Sie können es zum Ausführen einer Abfrage verwenden.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mention-mex-app.png\" alt-text=\"Screenshot, der zeigt, wie Sie die Messaging-Erweiterungs-App @mention\" border=\"false\":::\n\n1. Geben Sie eine Suchzeichenfolge ein, und wählen Sie eine aus dem Suchergebnis aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/command-box-search.png\" alt-text=\"Screenshot, der zeigt, wie eine Suche mithilfe der Messaging-Erweiterungs-App ausgeführt wird\" border=\"false\":::\n\n    Sie wird im Befehlsbereich als Karte angezeigt.\n\n1. Kopieren Sie die Karte, um sie in den Verfassenbereich einzufügen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/command-search-card.png\" alt-text=\"Screenshot des Suchergebnisses auf einer Karte\" border=\"false\":::\n    \n1. Senden Sie die Karte über den Verfassenbereich.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/command-search-card-sent.png\" alt-text=\"Screenshot des Suchergebnisses in einem Chat\" border=\"false\":::\n\n**Verwenden eines Drei-Punkte-Symbols:**\n\n1. Starten Sie die Messaging-Erweiterung von drei Punkten am unteren Rand des Verfassenbereichs.\n1. Wählen Sie Ihre Messaging-Erweiterungs-App aus.       \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/three-dot-mex.png\" alt-text=\"Screenshot, der zeigt, wie die Beispiel-Messaging-Erweiterungs-App geöffnet wird\" border=\"false\":::\n\n    Die Messaging-Erweiterungs-App wird mit den Optionen zum Ausführen einer Suche und Erstellen adaptiver Karten geladen.\n</details>\n<br>\n<details>\n<summary>Ausführen der App über quergeladene Apps</summary>\n\nSie können ein quergeladenes Teams App aus der Liste der quergeladenen Apps öffnen. \n\n1. Wählen Sie in der **Teams** Randleiste das symbol Store aus.\n1. Wählen Sie die **Option \"Apps verwalten\" aus**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/sideloaded-apps.png\" alt-text=\"Screenshot mit quergeladenen Apps\" border=\"false\":::\n\n1. Wählen Sie das Drei-Punkte-Symbol für Ihre App aus, und wählen Sie dann **Details anzeigen** aus. Sie können auch einen Link zu der App kopieren und zum Öffnen der App verwenden.\n1. Wählen Sie **\"Öffnen** \" aus, um die App zu laden, und wählen Sie dann \" **Ausprobieren\" aus**. \n    \n    Die App wird in Teams geladen.\n</details>\n<br>\n<br>\n<!-- markdownlint-disable MD033 -->\n<details>\n<summary>Erfahren Sie, wie Sie Probleme beheben, wenn Ihre App nicht lokal ausgeführt wird.</summary>\n\nUm Ihre App in Teams ausführen zu können, benötigen Sie ein Microsoft 365 Entwicklungskonto, das das Querladen von Apps ermöglicht. Weitere Informationen zum Querladen finden Sie im Abschnitt \"Voraussetzungen\".\n</details>\n"
- title: Bereitstellen Ihrer ersten Teams-App
  durationInMinutes: 1
  content: "\nSie haben gelernt, Teams App mit Tab-, Bot- und Messaging-Erweiterungsfunktionen zu erstellen, zu erstellen und auszuführen. Der letzte Schritt besteht darin, Ihre App in Azure bereitzustellen.\n\nStellen wir die erste App mit Tab-Funktion in Azure mit Teams Toolkit bereit.\n\n## <a name=\"sign-in-to-your-azure-account\"></a>Melden Sie sich bei Ihrem Azure-Konto an.\n\nVerwenden Sie dieses Konto, um auf das Microsoft Azure-Portal zuzugreifen und neue Cloudressourcen zur Unterstützung Ihrer App bereitzustellen.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Öffnen Sie Visual Studio Code.\n1. Öffnen Sie den Projektordner, in dem Sie die Registerkarten-App erstellt haben.\n1. Wählen Sie in der Randleiste das Symbol Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: aus.\n1. Wählen Sie **\"Bei Azure anmelden**\" aus.\n\n    > [!TIP]\n    > Wenn Sie die Azure-Kontoerweiterung installiert haben und dasselbe Konto verwenden, können Sie diesen Schritt überspringen. Verwenden Sie das gleiche Konto wie in anderen Erweiterungen.\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können.\n1. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an.\n1. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden, und kehren Sie zu Visual Studio Code zurück.\n\n    Im Abschnitt **\"KONTEN** \" der Randleiste werden die beiden Konten separat angezeigt. Außerdem wird die Anzahl der verwendbaren Azure-Abonnements aufgelistet, die Ihnen zur Verfügung stehen. Stellen Sie sicher, dass mindestens ein verwendbares Azure-Abonnement verfügbar ist. Wenn nicht, melden Sie sich ab, und verwenden Sie ein anderes Konto.\n\n    Jetzt können Sie Ihre App in Azure bereitstellen!\n\n    Herzlichen Glückwunsch, Sie haben drei Arten von Teams-Apps erstellt! \n    Lassen Sie uns nun fortfahren und erfahren, wie Sie eine der Apps mithilfe des Teams-Toolkits in Azure bereitstellen.\n\n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cline)\n\n1. Melden Sie sich bei Microsoft 365 mit der TeamsFx CLI an:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden.\n\n2. Melden Sie sich bei Azure mit der TeamsFx CLI an:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Ihr Standardwebbrowser wird geöffnet, damit Sie sich beim Konto anmelden können. Melden Sie sich mit Ihren Anmeldeinformationen bei Ihrem Azure-Konto an. Schließen Sie den Browser, wenn Sie dazu aufgefordert werden.\n\n    Die Kontoanmeldungen werden zwischen Visual Studio Code und der TeamsFx CLI geteilt.\n\n    Herzlichen Glückwunsch, Sie haben drei Arten von Teams-Apps erstellt! \n    Lassen Sie uns nun fortfahren und erfahren, wie Sie eine der Apps mithilfe des Teams-Toolkits in Azure bereitstellen.\n\n---\n\n  [!INCLUDE [Provision and Deploy your app on Azure](~/includes/get-started/azure-provisioning-instructions.md)]\n\n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>Erfahren Sie, was geschieht, wenn Sie Ihre App in Azure bereitstellen</summary>\n\n  Vor der Bereitstellung wurde die Anwendung lokal ausgeführt:\n\n  * Das Back-End unter Verwendung von **Azure Functions Core Tools** ausgeführt.\n  * Der HTTP-Endpunkt der Anwendung, an dem Microsoft Teams die Anwendung lädt, wird lokal ausgeführt.\n\n  Die Bereitstellung erfolgt in zwei Schritten. Sie stellen die Ressourcen für ein aktives Azure-Abonnement bereit und stellen dann das Back-End und den Front-End-Code für die Anwendung in Azure bereit oder laden diesen hoch.\n\n  * Das Back-End verwendet, sofern konfiguriert, verschiedene Azure-Dienste, einschließlich Azure App Service und Azure Storage.\n  * Die Front-End-Anwendung wird in einem Azure Storage-Konto bereitgestellt, das für statisches Webhosting konfiguriert ist.\n\n  </details>\n"
- title: Herzlichen Glückwunsch!
  durationInMinutes: 1
  content: "\nSie haben es getan!\n\nSie haben drei Apps mit jeweils einer anderen Funktion erstellt: einer Registerkarten-App, einer Bot-App und einer Messaging-Erweiterungs-App.\n\nNachdem Sie nun gelernt haben, einfache Apps zu erstellen, können Sie mit der Erstellung komplexerer Apps beginnen. Versuchen Sie zunächst, Ihren vorhandenen Apps Funktionen hinzuzufügen.\n\nSo fügen Sie Ihrer vorhandenen App Funktionen hinzu:\n\n1. Wählen Sie im Abschnitt **\"Entwicklung**\" der Teams Toolkit-Randleiste die **Option \"Funktion hinzufügen**\" aus.\n\n1. Wählen Sie die Funktion aus, die Sie Ihrer App hinzufügen möchten.\n\nDas ist alles. Teams Toolkit fügt das Gerüst für die neue Funktion zur Verzeichnisstruktur Ihrer App hinzu. Befolgen Sie die Verfahren zum Erstellen und Bereitstellen der App, und Ihre App verfügt über mehrere Funktionen. \n\nSie haben das Lernprogramm zum Erstellen von Apps mit JavaScript abgeschlossen."
