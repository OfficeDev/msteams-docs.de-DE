### YamlMime:Tutorial
title: Teams-Anruf- und Besprechungs-Bot
metadata:
  title: Teams-Bot mit Anruf und Besprechung
  description: In diesem Lernmodul erfahren Sie, wie Sie Anruf- und Besprechungsfunktionen in einem Bot für Teams einrichten.
  audience: Developer
  level: Beginner
  ms.date: 02/08/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/calls-and-meetings/registering-calling-bot.md
  nextTutorialTitle: Registrieren eines anrufenden Bots
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: a948296477c9d0cf90ecb5e43570ac03c6ef4859
  ms.sourcegitcommit: 42602e8ec917f5033c0b6a95cf65b428db3c5b0a
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 08/09/2022
  ms.locfileid: "67286084"
items:
- durationInMinutes: 1
  content: >
    Der Anruf- und Besprechungs-Bot bietet grundlegende Funktionen wie das Erstellen eines Anrufs, das Teilnehmen an einem Anruf, das Übertragen oder Umleiten eines Anrufs, das Teilnehmen an einer geplanten Besprechung und das Einladen der Teilnehmer durch die Integration von Cloud-Kommunikations-API-Graph API.


    Bots können mit Teams-Anrufen und -Besprechungen mithilfe von Echtzeit-Sprach-, Video- und Bildschirmfreigabe interagieren. Mit Microsoft Graph-APIs für Anrufe und Onlinebesprechungen können Teams-Apps jetzt per Sprache und Video mit Benutzern interagieren und so die Erfahrung verbessern. Mit diesen APIs können Sie die folgenden neuen Features hinzufügen:


    * Interaktive Sprachantwort (IVR).

    * Anrufsteuerung.

    * Zugriff auf Audio- und Videodatenströme in Echtzeit, einschließlich Desktop- und App-Freigabe.


    Erstellen Sie einen Bot, und geben Sie einige zusätzliche Informationen und Berechtigungen für die Verwendung dieser Graph-APIs in einer Teams-App an.


    Diese schrittweise Anleitung hilft Ihnen beim Erstellen eines Bots mit Anruf- und Besprechungsfunktionen. Am Ende dieses Lernprogramms können Sie die folgende Ausgabe erreichen:


    ![Endgültige Ausgabe](~/assets/images/calls-and-meetings/final-output.png)
- title: Voraussetzungen
  durationInMinutes: 1
  content: "Stellen Sie sicher, dass Sie die folgenden Tools installieren und Ihre Entwicklungsumgebung einrichten:  \n\n* [Office 365 Mandant](https://developer.microsoft.com/microsoft-365/dev-program)\n* [Ngrok](https://ngrok.com/) oder eine entsprechende Tunnellösung\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)\n* [.NET Core SDK](https://dotnet.microsoft.com/download) , Version 3.1\n* Microsoft Teams mit einem Konto (kein Gastkonto)\n* Installieren [Windows PowerShell](/microsoftteams/teams-powershell-install) durch Ausführen aller Befehle\n"
- title: Einrichten von Anrufen und Besprechungs-Bot
  durationInMinutes: 5
  content: "Registrieren Sie eine Anwendung mithilfe der App-Registrierung im Microsoft Azure-Portal, damit Ihre App in die Microsoft Identity Platform integriert wird und Microsoft Graph aufruft. Führen Sie folgende Schritte aus:\n\n1. Verwenden Sie ngrok, um einen Tunnel zu den Endpunkten Ihres Webservers zu erstellen.\n1. Erstellen Sie eine Azure Bot-Ressource, um den Bot bei Azure Служба Bot zu registrieren.\n1. Erstellen Sie einen geheimen Clientschlüssel, der die SSO-Authentifizierung des Bots ermöglicht.\n1. Erstellen Sie eine Richtlinie für einen Demomandantenbenutzer zum Erstellen der Onlinebesprechungen mithilfe von PowerShell.\n1. Fügen Sie API-Berechtigungen für nachgeschaltete Aufrufe hinzu.\n1. Erstellen Sie die Bot-Kanalregistrierung im Azure-Konto.\n1. Fügen Sie den Microsoft Teams-Kanal hinzu, um den Bot in einem Teams-Kanal bereitzustellen.\n1. Fügen Sie dem von Ihnen erstellten ngrok-Tunnel den Messaging-Endpunkt hinzu.\n\n**Erstellen eines ngrok-Tunnels:**\n\nVerwenden Sie ngrok, um einen Tunnel zu den öffentlich verfügbaren HTTPS-Endpunkten Ihres lokal ausgeführten Webservers zu erstellen. Führen Sie den folgenden Befehl in ngrok aus:\n\n```bash\nngrok http --host-header=rewrite 3978\n```\n\n**Registrieren einer App in Azure:**\n\n1. Melden Sie sich mit Ihrem persönlichen Microsoft-Konto bei der [Azure-Portal](https://portal.azure.com/) an.\n1. Wählen Sie den **Azure Active Directory-Dienst** und dann im linken Bereich **App-registraties** aus, und wählen Sie dann **\"Neue Registrierung**\" aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-active-directory.png\" alt-text=\"Azure Active Directory.\":::\n\n1. **Registrieren einer Anwendungsseite** wird geöffnet. Geben Sie die Registrierungsinformationen Ihrer Anwendung ein.\n1. Geben Sie einen aussagekräftigen **Anwendungsnamen** ein, der Benutzern der App angezeigt wird.\n1. Wählen Sie **in den unterstützten Kontotypen** die Konten aus, die Ihre Anwendung unterstützen soll.\n1. Wählen Sie im Feld \" **Umleitungs-URI** \" (optional) den Typ des **App-Webs oder öffentlichen Clients (mobile & Desktop)** aus, und geben Sie dann den Umleitungs-URI für Ihre Anwendung ein.\n\n    > [!NOTE]\n    > Geben Sie für Webanwendungen den Basis-URI als `http://localhost:31544`an. Geben Sie für öffentliche Clientanwendungen den URI an, der von Azure AD verwendet wird, um Tokenantworten als `myapp://auth`zurückzugeben.\n\n1. Wählen Sie **Registrieren** aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/reg-app.png\" alt-text=\"Registrieren sie eine App.\":::\n\n**So erstellen Sie den geheimen Clientschlüssel:**\n\n1. Wählen Sie auf der **Seite \"Übersicht** \" Ihres **Bots \"Essentials** \" aus, und speichern Sie die **Anwendungsclient-ID** (Microsoft App-ID) zur zukünftigen Referenz.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/microsoft-app-id-new.png\" alt-text=\"Microsoft App-ID.\":::\n\n1. Wählen Sie in **\"Verwalten**\" **den Abschnitt \"Zertifikate & geheimen** Schlüssel\" und dann \" **Geheime Clientschlüssel** \" und dann \" **Neuer geheimer Clientschlüssel**\" aus. Das Fenster **\"Geheimen Clientschlüssel hinzufügen** \" wird angezeigt.  \n\n1. Geben Sie **Beschreibung** ein, und wählen Sie **Hinzufügen** aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/add-client.png\" alt-text=\"Fügen Sie den geheimen Clientschlüssel hinzu.\":::\n\n1. Wählen Sie in der Spalte **Wert** **In Zwischenablage kopieren** aus, und speichern Sie die Clientgeheimnis-ID zur späteren Referenz.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/client-secret.png\" alt-text=\"Wert.\":::\n\n**Führen Sie ein PowerShell-Skript aus, um eine Richtlinie zu erstellen:**\n\n1. Erstellen Sie eine Richtlinie für einen Demomandantenbenutzer zum Erstellen der Onlinebesprechungen mithilfe des folgenden PowerShell-Skripts:\n\n    > [!NOTE]\n    > Führen Sie Windows PowerShell PSI als Administrator aus, und führen Sie das Skript aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/powershell-script.png\" alt-text=\"PowerShell-Skript.\":::\n\n1. Ersetzen Sie `azure-client-id` durch Ihre **Microsoft App-ID** Ihres Bots und `object-id` durch die **Mandanten-ID** Ihres Kontos, das für die Anmeldung bei Teams verwendet wurde (kopieren Sie den Link wie in der folgenden Abbildung dargestellt, und Sie finden die Mandanten-ID Ihres Teams-Kontos in dem abgerufenen Link).\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/teams-link-new.png\" alt-text=\"Teams-Link.\":::\n\n1. Fügen Sie `PolicyName`, `azure-client-id`, `policy-description`und `object-id` im PowerShell-Skript hinzu. Melden Sie sich mit Ihrem Teams-Konto an, wenn PowerShell dazu aufgefordert wird.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/powershell.png\" alt-text=\"Powershell.\":::\n\n1. Führen Sie den folgenden Befehl in PowerShell aus, um zu überprüfen, ob die Richtlinie erfolgreich erstellt wurde. Ersetzen Sie den Richtliniennamen durch den definierten Richtliniennamen.\n\n    ```powershell\n    Get-CsApplicationAccessPolicy -Identity “<<policy-identity/policy-name>>”\n    ```\n\n**So fügen Sie API-Berechtigungen für nachgeschaltete Aufrufe hinzu:**\n\n> [!NOTE]\n> Stellen Sie sicher, dass Ihr Konto die Administratorzustimmung für Microsoft erteilen kann. Nachdem Sie Berechtigungen hinzugefügt haben, wählen Sie `Grant admin consent for Microsoft` den Status der Zustimmung aus.\n\n1. Wählen Sie im Bereich **\"Verwalten** \" Ihres **Bots API-Berechtigungen aus**.\n1. Wählen Sie **Berechtigung hinzufügen** aus. **Das Fenster \"API-Berechtigungen anfordern** \" wird angezeigt.\n1. Wählen Sie **Microsoft-APIs** und **dann Microsoft Graph** aus.\n1. Wählen Sie **\"Anwendungsberechtigungen**\" und dann \"Berechtigungen\" aus.\n1. Fügen Sie Ihrem Aplicação Azure AD die folgenden Graph API Anwendungsberechtigungen hinzu, und erteilen Sie die Administratorzustimmung.\n    * `Calls.AccessMedia.All`\n    * `Calls.Initiate.All`\n    * `Calls.InitiateGroupCall.All`\n    * `Calls.JoinGroupCall.All`\n    * `Calls.JoinGroupCallAsGuest.All`\n    * `OnlineMeetings.ReadWrite.All`\n1. Wählen Sie **Berechtigungen hinzufügen** aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/add-api-permissions.png\" alt-text=\"API-Berechtigungen hinzufügen.\":::\n\n**Erstellen der Bot-Kanalregistrierung im Azure-Konto:**\n\n1. Öffnen [Sie Azure-Portal](https://portal.azure.com/).\n1. Wählen Sie **Ressource erstellen** aus.\n1. Suchen Sie im Suchfeld nach **Azure Bot** .\n1. Wählen Sie **Azure Bot** aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-bot-homepage.png\" alt-text=\"Azure-Bot-Karte.\":::\n\n1. Wählen Sie **Erstellen** aus.\n1. Geben Sie den Namen des Bot-Handle in das Feld **Bot-Handle** ein.\n1. Wählen Sie Ihr **Abonnement** aus der Dropdownliste aus.\n1. Wählen Sie Ihre **Ressourcengruppe** aus der Dropdownliste aus.\n\n    Um eine neue Ressourcengruppe zu erstellen, wählen **Sie \"Neu erstellen**\", geben Sie den Ressourcennamen ein, wählen Sie **\"OK**\" aus, und wählen Sie \"Erforderlicher Speicherort\" aus der Dropdownliste \" **Speicherort der neuen Ressourcengruppe** \" aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/create-azure-bot.png\" alt-text=\"Erstellen Sie Azure Bot.\":::\n\n1. Wählen Sie den **App-Typ** als **Mehrinstanzenfähig** für die **Microsoft-App-ID** aus.\n\n    > [!NOTE]\n    > Im `Creation type` Abschnitt \"Microsoft-App-ID\" ist bereits ausgewählt, `Create new Microsoft App ID` um einen neuen Bot zu erstellen. Sie können auch auswählen `Use existing app registration`, ob Sie bereits einen Bot registriert haben. Geben Sie die Microsoft App-ID in `Existing app id` das Feld ein, und geben Sie den Wert in das `Existing app password` Feld ein.\n\n1. Wählen Sie **\"Vorhandene App-Registrierung verwenden\"** aus, und geben Sie **die App-ID** und den **geheimen App-Schlüssel** Ihrer Azure-App ein, die im Demomandanten registriert ist.\n1. Wählen Sie **Überprüfen + erstellen** aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/review-create.png\" alt-text=\"Mehrere Mandanten.\":::\n\n1. Wenn die Prüfung bestanden wurde, wählen Sie **Erstellen** aus.\n\n   Es dauert einige Augenblicke, bis Ihr Botdienst bereitgestellt wurde.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/validation.png\" alt-text=\"Validierung.\":::\n\n1. Wählen Sie **Zu Ressource wechseln** aus. Der Bot und die zugehörigen Ressourcen werden in der Ressourcengruppe aufgeführt.\n\n    Jetzt wurde Ihr Azure-Bot erstellt.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/go-to-resource.png\" alt-text=\"Zu Ressource wechseln.\":::\n\n**So fügen Sie den Microsoft Teams-Kanal hinzu:**\n\n1. Wechseln Sie zu **Startseite**.\n1. Öffnen Sie Ihren Bot, der im Abschnitt **Zuletzt verwendete Ressourcen** aufgeführt ist.\n1. Wählen Sie \"**Kanäle**\" im linken Bereich und dann **\"Microsoft Teams\" aus**. <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/> aus der Liste der verfügbaren Kanäle.    \n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/channels-teams.png\" alt-text=\"Kanäle Teams.\":::\n\n1. Aktivieren Sie das Kontrollkästchen, um die Nutzungsbedingungen zu akzeptieren, und wählen Sie **Zustimmen** aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/terms-of-service.png\" alt-text=\"Nutzungsbedingungen.\":::\n\n1. Wählen Sie **Speichern**.\n1. Wählen Sie **Microsoft Teams** und dann die Registerkarte \" **Anrufe** \" auf der Kanalseite von Teams aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/configure-teams.png\" alt-text=\"Konfigurieren sie Teams.\":::\n\n1. Wählen Sie **\"Anruf aktivieren\"** aus, und aktualisieren Sie dann **Den Webhook** mit Ihrer HTTPS-ngrok-URL (https://yourNgrok/api/callback) und fügen Sie am Ende hinzu `/api/callback` ).\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/enable-calling.png\" alt-text=\"Aktivieren Sie Anrufe.\":::\n\n1. Wählen Sie **Speichern**.\n\n**So fügen Sie den Messaging-Endpunkt hinzu:**\n\n1. Wechseln **Sie zur** Startseite Ihres Bots, und wählen Sie im linken Bereich unter **\"Einstellungen\"** die Option **\"Konfiguration**\" aus.\n1. Wechseln Sie zu ngrok.\n1. Kopieren Sie die HTTPS-URL (https to io) wie in der folgenden Abbildung dargestellt:\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/ngrok.png\" alt-text=\"Ngrok.\":::\n\n1. Fügen Sie im **Messaging-Endpunkt** die https-URL hinzu, die von ngrok verfügbar ist, und fügen Sie am Ende der URL **\"/api/messages**\" hinzu.\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/messaging-endpoint.png\" alt-text=\"Messaging-Endpunkt.\":::\n\n1. Wählen Sie **Anwenden** aus.\n\n    Sie haben erfolgreich einen Bot in Azure Служба Bot eingerichtet, und jetzt müssen Sie eine Bot-Dienstverbindung einrichten.\n"
- title: Aktualisieren und Erstellen des Teams-App-Pakets
  durationInMinutes: 1
  content: "Konfigurieren Sie das Bot-Beispiel, um zu verstehen, wie Unterhaltungsbots in Microsoft Teams authentifiziert und das Teams-App-Paket erstellt und in die Organisation hochgeladen werden.\n\n1. Aktualisieren Sie \"appsettings.json\" in Visual Studio.\n1. Aktualisieren Sie manifest.json in Visual Studio, und komprimieren Sie es in der ZIP-Datei im Datei-Explorer.\n\n**Aktualisieren von AppSettings für den Aufruf von Bot:**\n\n1. Wechseln Sie zum Repository https://github.com/OfficeDev/Microsoft-Teams-Samples.git.\n1. Wählen Sie **\"Code** \" und dann die Dropdownliste aus.\n1. Wählen Sie **\"ZIP herunterladen\"** aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/repo-download.png\" alt-text=\"Repo-Download.\":::\n\n1. Achten Sie darauf, den Pfad des heruntergeladenen Repositorys zu notieren.\n1. Wechseln Sie in der **проводник** zum Ordner **\"Microsoft-Teams-Samples-main** > **samples** > **bot-calling-meeting** > **csharp**\".\n1. Öffnen Sie die Datei **\"appsettings.json** \" in Visual Studio, und aktualisieren Sie die Konfiguration für den Bot.\n\n    * Sie können die `MicrosoftAppId` Konfigurationsseite des Bots abrufen. Dies `MicrosoftAppPassword` ist der Wert für die geheime Client-ID, die Sie zuvor gespeichert haben.\n    * Sie können den `Tenant ID` Oder `UserId` über den Link des Kontos abrufen, das für die Anmeldung bei Teams verwendet wird. Folgen Sie dem Pfad im Bild, um den Link für `tenant id`zu erhalten.\n    \n        :::image type=\"content\" source=\"./assets/images/calls-and-meetings/teams-link-new.png\" alt-text=\"Teams-Link.\":::\n    \n    * Sie können die und `UserId` von der `DisplayName` [Microsoft Graph-Explorer-Website](https://developer.microsoft.com/graph/graph-explorer) abrufen.\n        * Melden Sie sich mit Ihrem Teams-Konto bei der Seite an, fügen Sie `Users` am Ende der URl im Suchfeld hinzu, und wählen Sie **\"Abfrage ausführen\" aus**.\n        * Mit Ihrem Konto verknüpfte Anzeigenamen und Benutzer-IDs werden generiert.\n        * Wählen Sie drei beliebige Konten aus, und fügen Sie sie dem `DisplayName` und `UserId` in \"appsettings.json\" hinzu.\n\n        :::image type=\"content\" source=\"./assets/images/calls-and-meetings/graph-explorer.png\" alt-text=\"Graph-Explorer.\":::\n\n    > [!NOTE]\n    > `Tenant ID`oder `UserId` des Teams-Kontos zeigt an, von wo aus Sie den Anruf initiieren möchten, und `UserId` `DisplayName` von den Benutzern, an die Sie den Anruf umleiten oder durchstellen möchten.\n\n1. Ersetzen Sie `MicrosoftAppId`, `ClientId`, durch `AppId` Ihre **Anwendungs-ID (Client)** und `MicrosoftAppPassword`, `ClientSecret`und `AppSecret` durch Ihren **Wert**.\n1. Aktualisieren Sie `BotBaseUrl` mit Ihrer `ngrok` URL.\n1. Aktualisieren `Tenant ID` und `UserId`.\n1. Aktualisieren `DisplayName` und `UserId`.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/appsettings.png\" alt-text=\"Appsettings Json.\":::\n\n1. Wählen Sie **Speichern**.\n\n**So aktualisieren Sie das Manifest:**\n\n1. Wechseln Sie in der **проводник** zum **Csharp-Manifestordner** >  \"**Microsoft-Teams-Samples-main** > **samples** > **bot-calling-meeting** > \".\n1. Öffnen Sie die Datei `manifest.json` in Visual Studio.\n1. Suchen Sie in der `manifest.json` Datei **{id}, {BotId},** und fügen Sie Ihre Microsoft App-ID hinzu.\n1. Fügen Sie Ihre ngrok-URL in **\"validDomains\"** mit Ausnahme von https:// hinzu und speichern Sie sie.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/manifest.png\" alt-text=\"Manifest.\":::\n\n1. Zippen Sie den Inhalt des **Zu** erstellenden `manifest.zip`Manifestordners.\n\n    > [!NOTE]\n    > Der `manifest.zip` Ordner sollte keine zusätzlichen Ordner enthalten. Es sollte eine Quelldatei, `color` ein Symbol und `outline` ein Symbol im ZIP-Ordner enthalten`manifest json`.\n    > Laden Sie Ihr Manifest in Ihren Demomandanten für die Organisation oder Ihr Teams-Konto hoch, und führen Sie Ihre Lösung in Visual Studio aus.\n\n1. Wechseln Sie zu Teams.\n1. Wählen Sie zum Hochladen `manifest.zip`**\"Store > Verwalten Ihrer Apps aus, > laden Sie eine benutzerdefinierte App hoch**, und öffnen `manifest.zip` Sie sie aus dem Repositoryordner im Datei-Explorer.\n1. Wählen Sie **\"Hinzufügen\"** aus, um den Anruf-Bot in Teams zu installieren.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/output.png\" alt-text=\"Ausgabe hinzufügen.\":::\n\n    Sie können nach dem Debuggen in Visual Studio mit diesem Bot interagieren.\n"
- title: Interaktion mit dem Anruf- und Besprechungs-Bot
  durationInMinutes: 2
  content: >
    Bot ermöglicht Ihnen den Zugriff auf Dienste und Inhalte in einem dedizierten Bereich innerhalb eines Kanals oder in einem Chat.


    Führen Sie die Folgenden aus, um den Bot zu verwenden:


    1. Wählen Sie im linken Bereich der Teams die Auslassungszeichen ●●● und dann Ihre App aus der Liste aus.

    1. Bot sendet Willkommenstext mit adaptiver Karte wie unten dargestellt.

        :::image type="content" source="./assets/images/calls-and-meetings/bot-with-adaptive-card.png" alt-text="Adaptive Karte im Bot.":::

    1. Sie können den Bot bitten, einen Anruf zu erstellen.

        :::image type="content" source="./assets/images/calls-and-meetings/placed-call.png" alt-text="Anruf getätigt.":::

    1. Sie können den Bot bitten, den Anruf zu übertragen.

        :::image type="content" source="./assets/images/calls-and-meetings/transfer-call.png" alt-text="Anruf durchstellen.":::

    1. Sie können den Bot bitten, eine Besprechung zu planen und die Teilnehmer einzuladen.

        :::image type="content" source="./assets/images/calls-and-meetings/meeting.png" alt-text="Besprechungs-Bot.":::
- title: Vollständige Herausforderung
  durationInMinutes: 1
  content: >
    Sind Sie auf so etwas gekommen?


    ![Endgültige Ausgabe](~/assets/images/calls-and-meetings/final-output.png)
- content: Sie haben das Lernprogramm für die ersten Schritte mit der Bot-Anruf- und Besprechungs-App für Microsoft Teams abgeschlossen.
