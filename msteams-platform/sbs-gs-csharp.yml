### YamlMime:Tutorial
title: 'Erstellen Ihrer ersten App mit C #'
metadata:
  title: 'Hallo Welt mit C #'
  description: In diesem Lernprogramm lernen Sie, Hallo Welt App mit C# zu erstellen, indem Sie ein neues Projekt einrichten, Registerkarten-, Bot- und Nachrichtenerweiterungs-Apps erstellen und bereitstellen.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Übersicht über die ersten Schritte
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 804e6bf59cfec1a2fee17cc2897bcb7026ff4442
  ms.sourcegitcommit: c7fbb789b9654e9b8238700460b7ae5b2a58f216
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 06/29/2022
  ms.locfileid: "66484333"
items:
- durationInMinutes: 1
  content: >
    Starten Sie die Entwicklung von Microsoft Teams-Apps, indem Sie Ihre erste App mit einer Registerkarte, einem Bot und einer Nachrichtenerweiterungsfunktion erstellen.


    >Diese App verfügt über alle Funktionen, und jede verfügt über eine eigene Benutzeroberfläche und UX:


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="Diagramm, das diese App zeigt, verfügt über drei Features." border="true":::


    In diesem Lernprogramm lernen Sie Folgendes:


    - So richten Sie ein neues Projekt ein.

    - So erstellen Sie drei Apps mit jeweils unterschiedlichen Funktionen – Registerkarten-, Bot- und Nachrichtenerweiterungen mit C# und Visual Studio 2019.

    - So stellen Sie Ihre App über das Entwicklerportal bereit.
- title: Voraussetzungen
  durationInMinutes: 1
  content: "Hier ist eine Liste der Tools, die Sie zum Erstellen und Bereitstellen einer Teams-App installieren müssen.\n\n| &nbsp; | Installieren | Zum Benutzen... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Visual Studio 2019](https://visualstudio.com/download)<br> Installieren Sie einen der folgenden beiden Workloads:<br> • **ASP.NET und Webentwicklung** <br> • **Plattformübergreifende .NET Core-Entwicklung** | .NET. Sie können die kostenlose Community-Edition von Visual Studio 2019 und die Workloads auch installieren. |\n| &nbsp; | [Git](https://git-scm.com/downloads) | Git, um das C#-Beispiel-App-Repository von GitHub zu verwenden. |\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teams-App-Features (Unterhaltungs-Bot und Nachrichtenerweiterung) erfordern eingehende Verbindungen. Sie müssen Ihr Entwicklungssystem über einen Tunnel für Teams verfügbar machen. Für Apps, die nur Registerkarten enthalten, ist kein Tunnel erforderlich. Dieses Paket wird im Projektverzeichnis installiert (mit npm `devDependencies`). |\n| &nbsp; | [Teams Toolkit](#install-teams-toolkit) | Eine Visual Studio 2019-Erweiterung, die ein Projektgerüst für Ihre App erstellt. Verwenden Sie die neueste Version. |\n| &nbsp; | [Entwicklerportal für Teams](https://dev.teams.microsoft.com/) | Webbasiertes Portal zum Konfigurieren, Verwalten und Verteilen Ihrer Teams-App, einschließlich an Ihre Organisation oder den Teams-Store. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams für die Zusammenarbeit mit allen, mit denen Sie zusammenarbeiten, über Apps für Chats, Besprechungen und Anrufe – alles an einem Ort. |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure-Tools für Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) und [Microsoft Azure CLI](/cli/azure/install-azure-cli) | Azure-Tools für den Zugriff auf gespeicherte Daten oder die Bereitstellung eines cloudbasierten Back-End für Ihre Teams-App in Azure. |\n\n\n## <a name=\"verify-git-installation\"></a>Überprüfen der Git-Installation\n\nWenn Sie von der Visual Studio-Installation aufgefordert werden, dem Pfad hinzuzufügen `git` , wählen Sie ihn aus. \n\nSo überprüfen Sie die Version von git installed:\n\n1. Öffnen Sie ein Terminalfenster. \n2. Führen Sie den folgenden Befehl aus, um die `git` auf Ihrem Computer installierte Version zu überprüfen:\n\n    ```bash\n    $ git --version\n    ```\n\n    Ausgabebeispiel: `git version 2.17.1.windows.2`\n\n## <a name=\"install-teams-toolkit\"></a>Installieren des Teams-Toolkits\n\nDas Teams-Toolkit vereinfacht den Entwicklungsprozess mit Tools zum Erstellen eines Projektgerüsts für Ihre App. Es erstellt die erforderliche Verzeichnisstruktur für alle ausgewählten Funktionen mit den erforderlichen Dateien, die bereit sind, das Projekt zu erstellen.\n\nTeams Toolkit ist als Visual Studio 2019-Erweiterung verfügbar.\n\nSo installieren Sie die Teams-Toolkit-Erweiterung:\n\n1. Öffnen Sie Visual Studio 2019, und wählen Sie \" **Erweiterungen** > **verwalten\"** aus.\n1. Geben Sie im Suchfeld das **Teams-Toolkit** ein.\n1. Wählen Sie **\"Herunterladen\"** neben dem Teams-Toolkit aus.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/install-teams-toolkit-vs19.png\" alt-text=\"Abbildung der Installation für das Teams-Toolkit\"::: \n\n    Die Änderungen sind verfügbar, nachdem Sie Visual Studio 2019 geschlossen haben. Dies ist erforderlich, da Visual Studio 2019 nach der Installation der Erweiterung neu gestartet werden muss.\n\n1. Wählen Sie **Schließen** aus.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/toolkit-installed.png\" alt-text=\"Abbildung der Installation für das Teams-Toolkit\" lightbox=\"~/assets/images/teams-toolkit-v2/toolkit-installed.png\" border=\"true\":::\n\n1. Schließen Sie Visual Studio 2019.\n    \n    Das VSIX-Installationsprogramm wird mit Anweisungen zum Installieren der Erweiterung geöffnet.\n\n1. Befolgen Sie die Anweisungen des VSIX-Installationsprogramms, um die Installation des Toolkits abzuschließen.\n1. Öffnen Sie Visual Studio 2019 erneut.\n\nDie Teams-Apps sind in Visual Studio 2019 als Vorlage verfügbar.\n\nSie finden das Teams-Toolkit auch im [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=msft-vsteamstoolkit.vsteamstoolkit).\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Einrichten Ihres Teams-Entwicklungsmandanten\n\nEin **Mandant** ist wie ein Raum oder ein Container für Ihre Organisation in Teams, in dem Sie chatten, Dateien freigeben und Besprechungen ausführen. In diesem Bereich laden Sie Ihre App quer und testen sie. Lassen Sie uns überprüfen, ob Sie bereit sind, mit dem Mandanten zu entwickeln.\n\n### <a name=\"check-for-sideloading-option\"></a>Option \"Auf Querladen überprüfen\"\n\nNachdem Sie die App erstellt haben, müssen Sie ihre App in Teams laden, ohne sie zu verteilen. Dieser Vorgang wird als Querladen bezeichnet. Melden Sie sich bei Ihrem Microsoft 365-Konto an, um diese Option anzuzeigen.\n\n> [!NOTE]\n> Das Querladen ist für die Vorschau und das Testen von Apps in der lokalen Teams-Umgebung erforderlich. Wenn sie nicht aktiviert ist, können Sie ihre App in Teams nicht lokal in der Vorschau anzeigen und testen.\n\nHaben Sie bereits einen Mandanten, und haben Sie den Administratorzugriff? Lassen Sie uns überprüfen, ob Sie es wirklich tun!\n\nÜberprüfen Sie, ob Sie Apps in Teams querladen können:\n\n1. Wählen Sie im Teams-Client das **Symbol \"Store** \" aus.\n1. Wählen Sie **Verwalten Ihrer Apps** aus.\n1. Suchen Sie nach der Option zum **Hochladen einer benutzerdefinierten App**. Wenn die Option angezeigt wird, ist das Querladen von Apps aktiviert.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"Abbildung zeigt die Option zum Hochladen einer benutzerdefinierten App in Teams.\":::\n\n    > [!NOTE]\n    > Wenn Teams die Option zum Hochladen einer benutzerdefinierten App nicht angezeigt wird, wenden Sie sich an Ihren Teams-Administrator.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Erstellen eines kostenlosen Teams-Entwicklermandanten (optional)\n\nWenn Sie nicht über ein Teams-Konto verfügen, können Sie es kostenlos erhalten. Nehmen Sie am Microsoft 365-Entwicklerprogramm teil!\n\n1. Gehen Sie zu [Microsoft 365-Entwicklerprogramm](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Wählen Sie **\"Jetzt teilnehmen\"** aus, und folgen Sie den Anweisungen auf dem Bildschirm.\n1. Wählen Sie auf der Willkommensseite \" **E5-Abonnement einrichten\" aus**.\n1. Einrichten Ihres Administratorkontos. NachDem Sie fertig sind, wird der folgende Bildschirm angezeigt:\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Beispiel für das, was nach der Registrierung für das Microsoft 365-Entwicklerprogramm angezeigt wird.\":::\n\n1. Melden Sie sich mit dem soeben eingerichteten Administratorkonto bei Teams an. Stellen Sie sicher, dass Sie in Teams über die Option \" **Benutzerdefinierte App hochladen** \" verfügen.\n\n## <a name=\"get-a-free-azure-account\"></a>Abrufen eines kostenlosen Azure-Kontos\n\nWenn Sie Ihre App hosten oder auf Ressourcen in Azure zugreifen möchten, müssen Sie über ein Azure-Abonnement verfügen. [Erstellen Sie ein kostenloses Konto](https://azure.microsoft.com/free/) , bevor Sie beginnen.\n\nJetzt haben Sie alle Tools und richten Ihre Konten ein. Als Nächstes richten wir Ihre Entwicklungsumgebung ein und beginnen mit der Erstellung!\n\n> [!NOTE]\n> Verwenden Sie ein passendes Terminalfenster auf Ihrer Plattform. Diese Beispiele verwenden Git Bash, können aber auf den meisten Plattformen ausgeführt werden.\n\nÖffnen Sie die neueste Version von Visual Studio, und installieren Sie alle Updates.\n\nSie können dasselbe Terminalfenster verwenden, um die Befehle in diesem Lernprogramm auszuführen.\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>Herunterladen des Beispiels\n\nVerwenden Sie für dieses Lernprogramm das [Hello, World!](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/csharp) Beispiel in C#. Sie können es von GitHub herunterladen und klonen.\n\nUm dieses Beispiel zu verwenden, klonen Sie das Beispiel-Repository auf eine der folgenden Arten:\n\n- [Verwenden von Git Bash](#to-use-git-bash-to-clone-the-sample-repo)\n- [Verwenden von Visual Studio 2019](#to-use-visual-studio-2019-to-clone-the-sample-repo)\n\n### <a name=\"to-use-git-bash-to-clone-the-sample-repo\"></a>So klonen Sie git Bash zum Klonen des Beispiel-Repositorys\n\n- Führen Sie den folgenden Befehl in einem Terminalfenster aus, um das Beispielrepository auf Ihren Computer zu klonen:\n\n    ```bash\n    git clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n    ```\n    Das Beispiel-Repository für die C#-App wird auf Ihrem Computer am Standardspeicherort geklont.\n\n    > [!TIP]\n    > Sie können dieses [Repository](https://github.com/OfficeDev/Microsoft-Teams-Samples) [verzweigen](https://help.github.com/articles/fork-a-repo/), um Ihre Änderungen auf GitHub zu ändern und zu speichern.\n\n    <a name=\"BuildRun\"></a>\n\n    Sie können das geklonte Repository anzeigen, indem Sie es in Visual Studio 2019 öffnen. \n\n### <a name=\"to-use-visual-studio-2019-to-clone-the-sample-repo\"></a>So verwenden Sie Visual Studio 2019 zum Klonen des Beispiel-Repositorys\n\n1. Öffnen Sie Visual Studio 2019.\n1. Wählen Sie **Klonen eines Repositorys** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-clone-repo.png\" alt-text=\"Klonbeispiel-Repository für die c#-Teams-App\" border=\"true\":::\n\n1. Geben Sie `https://github.com/OfficeDev/Microsoft-Teams-Samples.git` als Pfad für das Klonen des Repositorys ein:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/repo-clone-path.png\" alt-text=\"Klonbeispiel-Repository für die c#-Teams-App\" border=\"true\":::\n\n1. Geben Sie den Speicherort ein, an dem Sie das Repository klonen möchten, und wählen Sie **\"Klonen**\" aus.\n\n    Das Beispielrepopo wird geklont, und Visual Studio wird geöffnet. Sie können das geklonte Repository im **Projektmappen-Explorer** anzeigen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-repo-cloned.png\" alt-text=\"Beispiel-Repository für geklonte c#-Teams-App\" border=\"true\":::\n\nNachdem Sie nun das Beispiel-Repository geklont haben, erstellen wir Ihre erste C#-App für Teams.\n"
- title: Erstellen und Ausführen Ihrer ersten C#-App
  durationInMinutes: 1
  content: "\nNachdem Sie das Repository für die C#-Beispiel-App geklont haben, können Sie die App in Ihrer lokalen Umgebung erstellen und ausführen.\n\nAuf dieser Seite lernen Sie Folgendes:\n1. [Die erste App erstellen](#build-your-first-app)\n1. [Lokale Bereitstellung ihrer Beispiel-App](#deploy-your-sample-app-locally)\n\n## <a name=\"build-your-first-app\"></a>Die erste App erstellen\n\nSie können die Projektstruktur in der **Projektmappen-Explorer** anzeigen, nachdem der Arbeitsbereich erstellt wurde. Jetzt erstellen und führen Sie Ihre App aus.\n\n**So erstellen und führen Sie das geklonte Beispiel aus**\n\n1. Öffnen Sie die Lösungsdatei **\"Microsoft.Teams.Samples.HelloWorld.sln\"** im Verzeichnis **\"Microsoft-Teams-Samples/samples/app-hello-world/csharp** \" des Beispiels.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/hello-world-sln-open.png\" alt-text=\"Abbildung Hallo Welt Lösungsverzeichnisstruktur\" border=\"true\":::\n\n1. Wählen Sie das Menü **\"Projekt** \" und dann **\"Microsoft.Teams.Samples.HelloWorld.Web Properties\"** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-menu.png\" alt-text=\"Abbildung des Menüs &quot;Projekt&quot; zum Auswählen der Option &quot;Eigenschaften&quot;\" border=\"true\":::\n\n1. Wählen Sie im linken Bereich des **Eigenschaftenfensters** \"**Debuggen**\" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-properties.png\" alt-text=\"Abbildung der Eigenschaftenfenster\" border=\"true\":::\n\n1. Navigieren Sie durch den Bildschirm, um die **Webservereinstellungen** anzuzeigen.\n\n1. Nehmen Sie im **Bereich \"Debuggen** \" die folgenden Einstellungen vor:\n    - Legen Sie **die App-URL** auf `http://localhost:3333/`fest.\n    - Deaktivieren **Sie \"SSL aktivieren\"**.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-web-server-settings.png\" alt-text=\"Abbildung der Webservereinstellungen für C#-Projekteigenschaften\" border=\"true\":::\n\n1. Wählen Sie im Menü **\"Erstellen**\" die Option \"**Projektmappe** erstellen\" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-build-complete.png\" alt-text=\"Abbildung des abgeschlossenen Builds\" border=\"true\":::\n\n1. Wählen Sie die **F5-Taste** aus, oder wählen Sie im Menü **\"Debuggen**\" die Option **\"Debuggen starten**\" aus, um das Beispiel auszuführen.\n\n    Beim Starten der App wird ein Browserfenster geöffnet. Es zeigt den Stamm ihrer App an. Sie können zu den folgenden URLs wechseln, um zu überprüfen, ob alle App-URLs geladen werden:\n\n    - `https://localhost:3333/`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-after-debug.png\" alt-text=\"Abbildung des lokalen Hosts\" border=\"true\":::\n\n    - `https://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello.png\" alt-text=\"Abbildung der Hello-Seite der App\" border=\"true\":::\n\n    - `https://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-tab.png\" alt-text=\"Abbildung der ersten Registerkarte der App\" border=\"true\":::\n\n    - `https://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-tab.png\" alt-text=\"Abbildung der zweiten Registerkarte der App\" border=\"true\":::\n\n    > [!Note]\n    > Wenn eine Fehlermeldung angezeigt wird `Could not find a part of the path … bin\\roslyn\\csc.exe`, aktualisieren Sie das Paket mit dem Befehl `Update-Package Microsoft.CodeDom.Providers.DotNetCompilerPlatform -r`.\n\n## <a name=\"deploy-your-sample-app-locally\"></a>Lokale Bereitstellung ihrer Beispiel-App\n\nMicrosoft Teams-Apps sind Webanwendungen, die eine oder mehrere Funktionen bereitstellen. Stellen Sie Ihre App im Internet zur Verfügung, damit sie von der Teams-Plattform geladen werden kann. Hosten Sie Ihre App, indem `ngrok` Sie einen Tunnel für den lokalen Prozess auf Ihrem Computer erstellen.\n\nNotieren Sie sich nach dem Hosten Ihrer App die Stamm-URL, z `https://yourteamsapp.ngrok.io` . B. oder `https://yourteamsapp.azurewebsites.net`.\n\n### <a name=\"tunnel-using-ngrok\"></a>Tunneln mit ngrok\n\nNach der Installation von ngrok können Sie einen Tunnel erstellen, um Ihre App lokal bereitzustellen:\n\n1. Öffnen Sie ein neues Terminalfenster.\n1. Führen Sie den folgenden Befehl aus, um einen Tunnel zu erstellen. Die Beispiel-App verwendet Port 3333.\n\n    ```bash\n    ngrok http 3333 -host-header=localhost:3333\n    ````\n    Der ngrok-Tunnel wird erstellt. Hier ist ein Beispiel:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-tunnel.png\" alt-text=\"Abbildung des ngrok-Tunnels\" border=\"true\":::\n\n    Sie können versuchen, `first`die URL des ngrok-Tunnels hinzuzufügen`hello`, um `second` verschiedene Registerkartenseiten der App anzuzeigen.\n    \n    Ngrok überwacht Anfragen aus dem Internet und leitet sie an Ihre App weiter, die auf Port 3333 ausgeführt wird.\n\nSo überprüfen Sie die lokale Bereitstellung der App:\n\n1. Öffnen Sie den Browser.\n1. Laden Sie Ihre App mithilfe der folgenden URL:\n\n    `https://<forwarding address in ngrok console session>/`\n\n    Hier ist ein Beispiel für die URL:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-verify-tunnel.png\" alt-text=\"Abbildung der lokal im ngrok-Tunnel ausgeführten C#-App\" border=\"true\":::\n\n1. Notieren Sie sich die Weiterleitungsadresse in der ngrok-Konsole. Sie benötigen diese URL, um Ihre App in Teams bereitzustellen.\n\n    > [!NOTE]\n    > Wenn Sie während des [Builds](#build-your-first-app) einen anderen Port verwendet haben, stellen Sie sicher, dass Sie zum Einrichten des Tunnels die `ngrok` gleiche Portnummer verwenden.\n    > [!TIP]\n    > Es empfiehlt sich, die Ausführung `ngrok` in einem anderen Terminalfenster durchzuführen. Es hilft, die App nicht `ngrok` zu stören, wenn Sie die App beenden, neu erstellen und erneut ausführen müssen. Die `ngrok` Sitzung enthält nützliche Debuginformationen in diesem Fenster.\n    > [!IMPORTANT]\n    > Wenn Sie die kostenlose Version von ngrok verwenden, ist Ihre App nur während der aktuellen Sitzung auf Ihrem Entwicklungscomputer verfügbar. Es ist nicht verfügbar, wenn der Computer heruntergefahren wird oder in den Ruhezustand wechselt. Wenn Sie den Dienst neu starten, wird eine neue Adresse zurückgegeben. Anschließend müssen Sie jeden Speicherort aktualisieren, der die veraltete Adresse verwendet. Denken Sie an diesen Schritt, wenn Sie die App zu Testzwecken freigeben.\n"
- title: Konfigurieren Ihrer ersten C#-App mithilfe des Entwicklerportals
  durationInMinutes: 1
  content: "\nSie können das [Entwicklerportal](https://dev.teams.microsoft.com/) verwenden, um das App-Paket in Teams hochzuladen und App-Funktionen zu konfigurieren. Das Entwicklerportal ist eine Teams-App, die das Erstellen und Registrieren einer App vereinfacht. Aus dem Teams Store installieren!\n\nNachdem Sie Ihre Teams-App erstellt und getestet haben, können Sie sie mithilfe des Entwicklerportals konfigurieren und in der Vorschau anzeigen.\n\nAuf dieser Seite erfahren Sie, wie Sie [das App-Paket im Entwicklerportal konfigurieren](#configure-the-app-package-in-developer-portal).\n\n<details>\n<summary>Veröffentlichungsoption in Visual Studio 2019</summary>\n\nIn diesem Lernprogramm wird das Entwicklerportal verwendet, um App-Funktionen zu konfigurieren und Ihre App zu veröffentlichen. \n\nVisual Studio 2019 bietet jedoch integrierte Unterstützung für die App-Bereitstellung für verschiedene Anbieter, einschließlich Azure:\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/publish-to-azure.png\" alt-text=\"Abbildung des Menüelements &quot;In Azure veröffentlichen&quot; in Visual Studio 2019\" border=\"true\":::\n\nMicrosoft Azure hostet Ihre .NET-Anwendung auf einer kostenlosen Ebene. Es verwendet eine freigegebene Infrastruktur, die zum Ausführen des Beispiels `Hello World` ausreicht. Weitere Informationen finden Sie unter [Erstellen eines neuen kostenlosen Azure-Kontos](https://azure.microsoft.com/free/).\n\nWenn Sie diese Option verwenden, können Sie die Details der Azure-Website und der Azure-Ressourcen eingeben und Ihre App veröffentlichen. \n\nFür dieses Lernprogramm müssen Sie diesen Schritt nicht verwenden.\n\n</details>\n\n## <a name=\"configure-the-app-package-in-developer-portal\"></a>Konfigurieren des App-Pakets im Entwicklerportal\n\nSie können das [Entwicklerportal](https://dev.teams.microsoft.com/) verwenden, um das App-Paket und seine Funktionen zu konfigurieren. Das Entwicklerportal ist eine Teams-App, die das Erstellen und Registrieren einer App vereinfacht. Aus dem Teams Store installieren!\n\nDas Konfigurieren des App-Pakets umfasst Folgendes:\n\n1. [Importieren des App-Pakets in das Entwicklerportal](#import-the-app-package-in-developer-portal)\n1. [Konfigurieren von App-Funktionen](#configure-your-app-capabilities)\n\n### <a name=\"import-the-app-package-in-developer-portal\"></a>Importieren des App-Pakets im Entwicklerportal\n\nSo importieren Sie das App-Paket:\n\n1. Öffnen Sie Microsoft Teams.\n\n1. Wählen Sie das **Store-Symbol** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: in der linken Leiste aus.\n\n1. Suchen Sie in der Suchleiste nach dem **Entwicklerportal** , und wählen Sie **\"Entwicklerportal\" aus**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"Entwicklerportal-App auswählen\" border=\"true\":::\n\n1. Klicken Sie auf **Öffnen**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"Abbildung der geöffneten Entwicklerportal-App\" border=\"true\":::\n\n    Das Entwicklerportal wird geöffnet.\n\n1. Wählen Sie die Registerkarte **\"Apps** \" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"Entwicklerportal-App\" border=\"true\":::\n\n1. Wählen Sie **\"App importieren**\" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"Abbildung der Schaltfläche &quot;App importieren&quot;\" border=\"true\":::\n\n1. Wählen Sie das App-Paket `helloworldapp.zip` aus dem folgenden Pfad in der C#-Beispiel-Repositoryverzeichnisstruktur aus:\n\n    `<path to cloned C# repo>/Source/Repos/Microsoft-Teams-Samples/samples/app-hello-world/csharp/Microsoft.Teams.Samples.HelloWorld.Web/bin/Debug/netcoreapp3.1`\n\n    Die **Hallo Welt-App** wird im Entwicklerportal importiert.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"Abbildung der in Teams importierten App\" border=\"true\":::\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>Machen Sie eine Tour durch Ihre App im Entwicklerportal\n\nNachdem Sie Ihre App in das Entwicklerportal importiert haben, können Sie deren Details einschließlich der Manifestdatei anzeigen.\n\n#### <a name=\"view-app-information\"></a>Anzeigen von App-Informationen\n\n1. Wählen Sie im linken Bereich des Entwicklerportals die Option **\"Grundlegende Informationen** \" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"Abbildung des linken Bereichs des Entwicklerportals\" border=\"true\":::\n\n1. Beachten Sie die folgenden Informationen aus den grundlegenden Informationen:\n    - App-ID\n    - Entwicklerinformationen\n    - App-URLs\n\n1. Wählen Sie im linken Bereich \" **Branding** \" aus, um die Brandinginformationen anzuzeigen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"Bild mit Brandinginformationen der App\" border=\"true\":::\n\n    Diese Details sind wichtig, wenn Sie eine neue App für die Verteilung schreiben.\n\n#### <a name=\"view-app-features\"></a>Anzeigen von App-Features\n\n- Wählen Sie im linken Bereich des Entwicklerportals **App-Features** aus.\n\n    Die App-Features werden im rechten Bereich angezeigt. Sie können Karten für persönliche Apps, Bots und Nachrichtenerweiterungen anzeigen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"Abbildung der Features der App\" border=\"true\":::\n\n#### <a name=\"view-the-app-manifest\"></a>Anzeigen des App-Manifests\n\nSie verwenden die Manifestdatei, um Funktionen, erforderliche Ressourcen und andere wichtige Attribute für Ihre App zu konfigurieren.\n\nSo zeigen Sie das App-Manifest an:\n\n- Wählen Sie im linken Bereich \" **Veröffentlichen** \" aus, um die Dropdownliste zu öffnen, und wählen Sie dann **\"App-Paket**\" aus.\n    \n    Die Manifestdatei wird im rechten Bereich angezeigt.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-manifest-dev-portal.png\" alt-text=\"Abbildung der App-Manifestdatei im Entwicklerportal\" border=\"true\":::\n\n### <a name=\"configure-your-app-capabilities\"></a>Konfigurieren der App-Funktionen\n\nNachdem Sie Ihre App in das Entwicklerportal importiert haben, besteht der nächste Schritt darin, die App-Funktionen zu konfigurieren. Das Entwicklerportal enthält alle App-Informationen in verschiedenen Abschnitten. Dies erleichtert die Konfiguration der App-Funktionen.\n\nMithilfe des Entwicklerportals können Sie:\n- [Konfigurieren der persönlichen Registerkarten-App](#configure-personal-tab-app)\n- [Konfigurieren eines Bots](#configure-bot)\n- [Konfigurieren der Nachrichtenerweiterung](#configure-message-extension)\n\n#### <a name=\"configure-personal-tab-app\"></a>Konfigurieren der persönlichen Registerkarten-App\n\nSo konfigurieren Sie die persönliche Registerkarten-App:\n\n1. Wählen Sie das :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: Symbol auf der **persönlichen App-Karte** im **Bereich \"App-Features\"** und dann **\"Bearbeiten\"** aus.\n\n    Die Details für die Registerkarte \"Hello\" werden angezeigt.\n\n1. Wählen Sie das Symbol für die :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: Registerkarte \"Hello\" und dann **\"Bearbeiten\"** aus, um die App-Details zum Aktualisieren zu öffnen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"Abbildung des Registerkartenmenüs &quot;Hello&quot;\" border=\"true\":::\n\n1. Geben Sie die App-Details für die Registerkarte \"Hello\" unter **\"Hinzufügen einer Registerkarte zu Ihrer persönlichen App\" ein**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-personal-tab-details.png\" alt-text=\"Abbildung der Details der Registerkarte &quot;Hello&quot;\" border=\"true\":::\n\n    Geben Sie die folgenden Details ein:\n    - **Name**: Registerkarte \"Hallo\".\n    - **Inhalts-URL** und **Website-URL**: Die Weiterleitungsadresse in der ngrok-Konsolensitzung.\n    - **Kontext**: **Wählen Sie die Registerkarte \"Persönlich\" aus**.\n\n1. Wählen Sie **Aktualisieren** aus.\n\n    Die Details der Registerkarte \"Hello\" werden im **Persönlichen App-Bereich** angezeigt.\n\n1. Wählen Sie **Speichern**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-tab-update.png\" alt-text=\"Abbildung der Zu speichernden Hello-Registerkartendetails\" border=\"true\":::\n\n    Im **Bereich \"Persönliche App** \" werden jetzt die neue Registerkarte und eine automatisch erstellte Registerkarte \"Info\" angezeigt.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-about-tab-added.png\" alt-text=\"Abbildung der Registerkarte &quot;Hello&quot; und der Details zur Registerkarte &quot;Info&quot;\" border=\"true\":::\n\n#### <a name=\"configure-bot\"></a>Konfigurieren eines Bots\n\nEs ist einfach, die Bots-Funktionen zu Ihrer App hinzuzufügen. Die Hallo Welt Beispiel-App hat bereits einen Bot als Teil, aber Sie müssen ihn bei Teams registrieren.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"Abbildung der Bot-App, die ohne App-ID importiert wurde\" border=\"true\":::\n\nDem Bot, der aus dem Beispiel importiert wurde, ist keine App-ID zugeordnet. Sie müssen es löschen und einen neuen Bot erstellen. Das Entwicklerportal erstellt eine neue App-ID und registriert sie bei Teams.\n\nDas Hinzufügen und Konfigurieren eines Bots umfasst Folgendes:\n\n1. [Hinzufügen eines neuen Bots](#to-add-a-new-bot)\n1. [Hinzufügen eines Bots zur App](#to-add-bot-to-app)\n1. [Konfigurieren des Botbereichs](#to-configure-bot-scope)\n\n##### <a name=\"to-add-a-new-bot\"></a>So fügen Sie einen neuen Bot hinzu\n\n1. Wählen Sie das :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: Symbol auf der **Bot-Karte** im **Bereich \"App-Features\"** und dann **\"Löschen\"** aus.\n\n1. Wählen Sie **\"Extras** \" aus, um Funktionen hinzuzufügen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/tools-option.png\" alt-text=\"Abbildung der Option &quot;Extras&quot;\" border=\"true\":::\n\n1. Wählen Sie im Bereich **\"Extras**\" die **Option \"Botverwaltung**\" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tools-bot-card.png\" alt-text=\"Abbildung des Bereichs &quot;Botverwaltung&quot;\" border=\"true\":::\n\n1. Wählen Sie im **Bereich \"Bot-Verwaltung**\" die Option **\"+Neuer Bot**\" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-management-new-bot.png\" alt-text=\"Abbildung der neuen Bot-Option\" border=\"true\":::\n\n1. Geben Sie einen geeigneten Namen für Ihren Bot ein, und wählen Sie **\"Hinzufügen\"** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"Abbildung, die zeigt, wie Bot hinzugefügt wird\" border=\"true\":::\n\n    Der Bereich **\"Konfigurieren** \" wird im linken Bereich mit Details des neuen Bots angezeigt.\n\n1. Geben Sie die Weiterleitungs-URL über die `ngrok` Konsole ein, und wählen Sie **\"Speichern\"** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-configure-bot-endpoint.png\" alt-text=\"Abbildung, die zeigt, wie Bot-Endpunkt hinzugefügt wird\" border=\"true\":::\n\n1. Wählen Sie **\"Geheime Clientschlüssel**\" und dann \" **Geheimen Clientschlüssel zu Ihrem Bot hinzufügen** \" aus, um ein Kennwort für den Bot zu generieren.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-client-secret-pane.png\" alt-text=\"Abbildung des Abschnitts &quot;Geheimer Clientschlüssel&quot;\" border=\"true\":::\n\n    Das Entwicklerportal generiert ein Kennwort für den Bot.\n\n    Sie können das Kennwort mithilfe des :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: Symbols kopieren. Für dieses Lernprogramm müssen Sie es nicht kopieren.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-client-secret-generated.png\" alt-text=\"Abbildung des generierten geheimen Clientschlüssels\" border=\"true\":::\n\n1. Wählen Sie **OK** aus.\n\n1. Wählen Sie **< Bots** aus, um zum **Bereich \"Bot-Verwaltung** \" zurückzukehren.\n\n    Im **Bereich \"Bot-Verwaltung** \" wird der neue Bot mit einer App-ID angezeigt.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-mgmt-pane.png\" alt-text=\"Abbildung des neuen Bots mit App-ID\" border=\"true\":::\n\n1. Stellen Sie sicher, dass Sie die Bot-ID zusammen mit dem Kennwort aus dem Abschnitt \" **Geheimer Clientschlüssel\"** speichern.\n\n##### <a name=\"to-add-bot-to-app\"></a>So fügen Sie der App Bot hinzu\n\n1. Öffnen Sie den **Bereich \"App-Features\"** , und wählen Sie die **Bot-Karte** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"Abbildung der Bot-Karte\" border=\"true\":::\n\n    Der **Bot-Bereich** wird angezeigt.\n\n1. Wählen Sie Ihre Bot-App unter **\"Vorhandenen Bot auswählen\"** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-new-bot-app.png\" alt-text=\"Abbildung, die zeigt, wie eine vorhandene Bot-App hinzugefügt wird\" border=\"true\":::\n\n    Der neue Bot wird Ihrer App mit einer eigenen App-ID hinzugefügt.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-new-bot-added.png\" alt-text=\"Abbildung des neuen Bots, der der App hinzugefügt wurde\" border=\"true\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>So konfigurieren Sie den Botbereich\n\n1. Wählen Sie das :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: Symbol auf der neuen **Bot-Karte** und **dann \"Bearbeiten\"** aus.\n\n1. Navigieren Sie durch den **Botbereich** , um den Abschnitt **\"Befehle\"** anzuzeigen, und wählen Sie **+Befehl hinzufügen** aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"Abbildung des Befehlsabschnitts\" border=\"true\":::\n\n1. Geben Sie einen geeigneten Namen und eine entsprechende Beschreibung für den **Befehl** ein.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"Abbildung des Hinzufügens von Befehlsdetails\" border=\"true\":::\n\n1. Wählen Sie alle drei Bereiche für den Befehl aus, und wählen Sie **\"Hinzufügen\"** aus.\n    - **Privat**\n    - **Team**\n    - **Gruppenchat**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"Abbildung des Speicherns von Befehlsdetails\" border=\"true\":::\n\n    Der neue Befehl wird dem Abschnitt **\"Befehle\"** des **Bot-Bereichs** hinzugefügt.\n\n1. Wählen Sie **Speichern**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"Abbildung der zu speichernden Befehlsdetails\" border=\"true\":::\n\n    Die Befehlsdetails werden gespeichert.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"Abbildung der gespeicherten Befehlsdetails\" border=\"true\":::\n\n1. Öffnen Sie **den Bereich \"App-Features** \", und wählen Sie \" **Persönliche App-Karte** \" aus, um die Registerkartendetails Ihrer App anzuzeigen.\n\n    Sie sehen, dass Ihrer App eine Registerkarte für Ihren neuen Chat-Bot hinzugefügt wird.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tab-chat-tab-conf.png\" alt-text=\"Abbildung des konfigurierten Chat-Bots\" border=\"true\":::\n\n#### <a name=\"configure-message-extension\"></a>Konfigurieren der Nachrichtenerweiterung\n\nMitHilfe von Nachrichtenerweiterungen können Benutzer Informationen von Ihrem Dienst anfordern und diese Informationen veröffentlichen. Die Informationen werden in Form von Karten in die Kanalunterhaltung gepostet. Nachrichtenerweiterungen werden am unteren Rand des Felds zum Verfassen angezeigt.\n\nSo fügen Sie eine neue Nachrichtenerweiterung hinzu:\n\n1. Wählen Sie das :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: Symbol auf der **Nachrichtenerweiterungskarte** im **Bereich \"App-Features** \" und dann **\"Löschen\"** aus.\n\n1. Wählen Sie im Bereich \"**App-Features**\" die **Option \"Nachrichtenerweiterung**\" aus.\n\n1. Wählen Sie den Namen Ihrer Bot-App aus der Dropdownliste **\"Vorhandenen Bot auswählen** \" im **Bereich \"Nachrichtenerweiterung** \" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"Abbildung des Bereichs &quot;Nachrichtenerweiterung&quot; zum Auswählen eines vorhandenen Bots\" border=\"true\":::\n\n1. Wählen Sie **Speichern**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-save.png\" alt-text=\"Abbildung der Schaltfläche zum Speichern der Nachrichtenerweiterung\" border=\"true\":::\n\n    Die Nachrichtenerweiterung wird gespeichert, und der Abschnitt **\"Befehle\"** wird im Bereich \" **Nachrichtenerweiterung** \" angezeigt.\n\n1. Wählen Sie **aus, und fügen Sie einen Befehl hinzu** , um den Bereich zu definieren, den Ihre Nachrichtenerweiterungs-App ausführen kann.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"Abbildung des Befehlsabschnitts\" border=\"true\":::\n\n1. Stellen Sie sicher, dass **die Suche** als Typ des Befehls ausgewählt ist, den Sie im Dialogfeld \" **Befehl hinzufügen\"** hinzufügen möchten.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"Abbildung des Dialogfelds &quot;Befehl hinzufügen&quot;\" border=\"true\":::\n\n1. Geben Sie geeignete Informationen ein:\n    - Befehls-ID\n    - Befehlstitel\n    - Befehlsbeschreibung\n\n1. Navigieren Sie durch das Dialogfeld, um die restlichen Details anzuzeigen.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"Abbildung der verbleibenden Details im Dialogfeld &quot;Befehl hinzufügen&quot;\" border=\"true\":::\n\n1. Stellen Sie sicher **, dass \"Als Standard festlegen\"** ausgewählt ist.\n1. Wählen Sie die folgenden Kontexte für den Befehl \"Nachrichtenerweiterung\" aus:\n    - Befehlsfeld\n    - Feld \"Verfassen\"\n    - Message\n1. Geben Sie geeignete Informationen für die folgenden Details ein:\n    - Parametername\n    - Parametertitel\n    - Parameterbeschreibung\n\n1. Wählen Sie **\"Text** \" als Eingabetyp aus.\n1. Wählen Sie **Speichern**.\n1. Der Befehl \"Nachrichtenerweiterung\" wird gespeichert und in der Liste der Befehle im Bereich \" **Nachrichtenerweiterung** \" angezeigt.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"Abbildung des neuen Befehls\" border=\"true\":::\n\n1. Wählen Sie **Speichern**.\n1. Öffnen Sie **den Bereich \"App-Features** \".\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-capabilities-configured.png\" alt-text=\"Abbildung der für Hallo Welt App konfigurierten Funktionen\" border=\"true\":::\n\n    Alle drei Funktionen – persönliche Registerkarten-App, Bot und Nachrichtenerweiterung – werden für die Hallo Welt-App konfiguriert. Der nächste Schritt besteht darin, Ihre App in Teams zu registrieren und Ihre App zu testen.\n"
- title: Anzeigen einer Vorschau und Testen Ihrer ersten C#-App
  durationInMinutes: 1
  content: "\nNachdem Sie Ihre App importiert und die Funktionen im Entwicklerportal konfiguriert haben, können Sie eine Vorschau der Beispiel-App anzeigen und testen.\n\n## <a name=\"preview-your-app-in-teams\"></a>Anzeigen einer Vorschau Ihrer App in Teams\n\nNachdem Sie die Funktionen Ihrer App konfiguriert haben, können Sie eine Vorschau ihrer App in Teams in der lokalen Umgebung anzeigen und testen.\n\nSo zeigen Sie eine Vorschau Ihrer App an:\n\n1. Wählen Sie auf der Symbolleiste des Entwicklerportals die **Option \"Vorschau in Teams** \" aus.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"Abbildung der Schaltfläche &quot;Vorschau&quot;\" border=\"true\"lightbox=\"~/assets/images/teams-toolkit-v2/preview-in-teams.png\":::\n\n    Das Entwicklerportal informiert Sie darüber, dass Ihre App erfolgreich quergeladen wurde.\n\n1. Wählen Sie das **Store-Symbol** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: aus.\n1. Wählen Sie **Verwalten Ihrer Apps** aus.\n   Ihre App wird in den quergeladenen Apps aufgeführt. \n1. Suchen Sie Ihre App mithilfe des Suchfelds, und wählen Sie die drei Punkte in ihrer Zeile aus.\n1. Wählen Sie die Option **\"Ansicht\" aus** .\n    Die Seite **\"Hinzufügen\"** wird für Ihre App angezeigt.\n1. Wählen Sie **\"Hinzufügen\"** aus, um die App in Teams zu laden.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"Abbildung des Dialogfelds &quot;App hinzufügen&quot;\" border=\"true\":::\n\n    Ihre App ist jetzt in Teams verfügbar. Sie können alle Registerkarten anzeigen und die Funktionen testen:\n\n    - Registerkarte \"Hallo\":\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"Abbildung der Registerkarte &quot;Hello&quot; in der lokalen Umgebung\" border=\"true\":::\n\n    - Chat-Bot:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"Abbildung des Bots der App in der lokalen Umgebung\" border=\"true\":::\n\n        Sie können eine Nachricht über den Chat senden.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"Abbildung des Chats in der lokalen Umgebung\" border=\"true\":::\n\n    - Nachrichtenerweiterung:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"Abbildung der Nachrichtenerweiterung in der lokalen Umgebung\" border=\"true\":::\n\n        Sie können eine Suche mithilfe der Nachrichtenerweiterung ausprobieren.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"Abbildung der Suche mithilfe der Nachrichtenerweiterung in der lokalen Umgebung\" border=\"true\"lightbox=\"~/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\":::\n\n    - Registerkarte \"Info\":\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"Abbildung der Registerkarte &quot;Info&quot; in der lokalen Umgebung\" border=\"true\":::"
