### YamlMime:Tutorial
title: Teams-Dateiupload-Bot
metadata:
  title: Teams File Hochladen Bot
  description: In diesem Lernprogramm erfahren Sie, wie Sie Dateien von einem Bot in Teams hochladen und wie Sie eine an einen Bot gesendete Datei als Anlage erhalten.
  audience: Developer
  level: Beginner
  ms.date: 28/12/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/bots-filesv4.md
  nextTutorialTitle: Weitere Informationen zum Senden und Empfangen von Dateien über den Bot
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 9906e3e445e73f1e53ebe713e46cffcf342965a2
  ms.sourcegitcommit: bfa9d24f736fb8915a9e3ef09c47dbe29a950cb5
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 02/14/2022
  ms.locfileid: "62801468"
items:
- durationInMinutes: 1
  content: "Der Bot wird mit bot Framework erstellt. Es zeigt, wie Sie Dateien von einem Bot in Teams hochladen und wie Sie eine an einen Bot gesendete Datei als Anlage empfangen. Außerdem wird gezeigt, wie Inlinebilder abgerufen werden, die in einer Nachricht gesendet werden.\n \nDiese schrittweise Anleitung hilft Ihnen beim Hochladen von Dateien aus einem Bot in Microsoft Teams. Die folgende Ausgabe wird angezeigt:\n\n:::image type=\"content\" source=\"assets/images/teams-file-upload-bot/output-sbs.png\" alt-text=\"sbs-Ausgabe\" lightbox=\"assets/images/teams-file-upload-bot/output-sbs.png\":::\n"
- title: Voraussetzungen
  durationInMinutes: 1
  content: >
    Um Ihre Entwicklungsumgebung einzurichten, installieren Sie die folgenden Tools:


    * Microsoft Teams und ein Teams Konto.

    * [.NET Core SDK Version 3.1](https://dotnet.microsoft.com/download).

    * [ngrok](https://ngrok.com/) oder eine entsprechende Tunnellösung.

    * Visual Studio 2019 oder höher.
- title: Erstellen einer Bot-Registrierung im Azure-Portal
  durationInMinutes: 5
  content: "Um den Bot zu authentifizieren, können Sie den Bot im Azure Bot Service einrichten. Registrieren Sie den Bot beim Azure Bot Service, wenn Sie ihn in Azure entwickeln und hosten. Führen Sie die folgenden Schritte durch:\n\n1. Konfigurieren sie Ihre Teams-Datei-Bot-App, und führen Sie sie aus.\n1. Erstellen sie eine Azure Bot-Ressource.\n1. Erstellen eines geheimen Clientschlüssels.\n1. Fügen Sie Microsoft Teams Kanal hinzu.\n1. Hinzufügen eines Messaging-Endpunkts.\n\n**So konfigurieren und führen Sie Ihre Teams-Datei-Bot-App aus:**\n\n1. Öffnen Sie eine Eingabeaufforderung, und klonen Sie das Repository unter https://github.com/Microsoft/botbuilder-samples.git. Notieren Sie sich den Pfad, in dem Sie das Repository klonen.\n\n1. In Visual Studio:\n\n    * Öffnen Sie Visual Studio.\n    * Wählen Sie **FileOpen** >  >  **Project/Solution** aus.\n    * Access-Ordner `botbuilder-samples\\samples\\csharp_dotnetcore\\56.teams-file-upload` .\n    * die Datei `Teamsfileupload.csproj` öffnen.\n\n1. Öffnen Sie das ngrok-Terminal, und starten Sie mit diesem Befehl `ngrok http -host-header=rewrite 3978`einen ngrok-Tunnel.\n\n**So erstellen Sie eine Azure Bot-Ressource:**\n\n1. Greifen Sie auf das [Azure-Portal](https://portal.azure.com/) zu.\n1. Wählen Sie **Ressource erstellen** aus.\n1. Geben Sie im Suchfeld den **Azure-Bot** ein, und drücken Sie die EINGABETASTE.\n1. Wählen Sie **Azure Bot** aus.\n\n     ![Erstellen einer Azure-Botkarte](~/assets/images/teams-file-upload-bot/azure-new.png)\n\n1. Wählen Sie **Erstellen** aus.\n1. Geben Sie den erforderlichen Bot-Handlenamen in **das Bot-Handle ein**.\n1. Wählen Sie in der Dropdownliste **Abonnement** das Abonnement aus.\n1. Wählen Sie in der Dropdownliste \" **Ressourcengruppe** \" die Ressourcengruppe aus.\n    \n    Um eine neue Ressource zu erstellen, wählen Sie **\"Neu erstellen**\" aus, geben Sie den Ressourcennamen ein, wählen Sie **\"OK**\" aus, und wählen Sie den erforderlichen Speicherort aus der Dropdownliste \" **Neuer Ressourcengruppenstandort** \" aus.\n\n    > [!NOTE]\n    > Im Abschnitt \"Microsoft App ID\" ist \" **Neue Microsoft App-ID erstellen** \" bereits ausgewählt. Sie können vorhandene **App-Registrierung** verwenden auswählen, **vorhandene App-ID** eingeben und **vorhandenes App-Kennwort** eingeben.\n\n1. Wählen Sie **Überprüfen + erstellen** aus.\n\n     ![Überprüfen und Erstellen](~/assets/images/teams-file-upload-bot/reg-azure-1.png)\n\n1. Wenn die Überprüfung erfolgreich ist, wählen Sie \" **Erstellen**\" aus. Es dauert ein paar Minuten, bis Ihr Bot-Dienst bereitgestellt wurde.\n\n1. Wählen Sie **Zu Ressource wechseln** aus. Der Bot und die zugehörigen Ressourcen werden in der Ressourcengruppe aufgeführt.\n\n   Jetzt wurde Ihr Azure-Bot erstellt.\n\n     ![Azure-Botressource erstellt](~/assets/images/teams-file-upload-bot/resource-group.png)\n\n**So erstellen Sie einen geheimen Clientschlüssel:**\n\n1. Wählen Sie **in Einstellungen** **die Option \"Konfiguration\" aus**. Speichern Sie die **Microsoft App-ID** (Client-ID) für zukünftige Verweise.\n1. Wählen Sie neben **der Microsoft-App-ID** die Option **\"Verwalten\"** aus.\n\n     ![Microsoft-App-ID](~/assets/images/teams-file-upload-bot/manage-sec.png)\n\n1. Wählen Sie im Abschnitt **\"Geheime Clientschlüssel** \" **die Option \"Neuer geheimer Clientschlüssel\" aus**. Das Fenster \" **Geheimen Clientschlüssel hinzufügen** \" wird angezeigt.  \n\n1. Geben Sie **\"Beschreibung\" ein** , und wählen Sie **\"Hinzufügen**\" aus.\n\n     ![Geheimer Clientschlüssel](~/assets/images/teams-file-upload-bot/add-client-secret.png)\n\n1. Wählen Sie in der Spalte **\"Wert** \" **die Option \"In Zwischenablage kopieren\" aus** , und speichern Sie den Wert der geheimen Client-ID für zukünftige Verweise.\n\n     ![Wert des geheimen Clientschlüssels](~/assets/images/teams-file-upload-bot/copy-value.png)\n   \n**So fügen Sie den Microsoft Teams-Kanal hinzu:**\n\n1. Wechseln Sie zu **\"Start\"**.\n\n     ![Start](~/assets/images/teams-file-upload-bot/home-png.png)\n\n1. Öffnen Sie Ihren Bot im Abschnitt **\"Zuletzt verwendete Ressourcen\"** .\n1. Wählen Sie im linken Bereich **Kanäle** aus, und wählen Sie **Microsoft Teams** \n\n      ![Öffnen Teams über Kanäle](~/assets/images/teams-file-upload-bot/chanels-teams.png)  \n\n      ![Select Teams](~/assets/images/teams-file-upload-bot/configure-microsoft-teams.png)  \n\n1. Wählen Sie **Speichern** aus.\n1. Aktivieren Sie das Kontrollkästchen, um die Nutzungsbedingungen zu akzeptieren, und wählen Sie **\"Zustimmen**\" aus.</br>\n\n      ![Nutzungsbedingungen](~/assets/images/teams-file-upload-bot/terms-service.png)\n\n**So fügen Sie den Messaging-Endpunkt hinzu:**\n\n1. Wählen Sie **in Einstellungen** für den azure-Bot, den Sie erstellt haben, die Option **\"Konfiguration**\" aus.\n1. Wechseln Sie zu \"ngrok\".\n1. Kopieren Sie die HTTPS-URL (https zu io).\n\n    ![ngrok HTTPS-URL](~/assets/images/teams-file-upload-bot/ngrok-url.png)\n\n1. Verwenden Sie im **Messaging-Endpunkt** die HTTPS-URL, die über ngrok verfügbar ist, und fügen Sie am Ende der URL **/api/messages** hinzu.\n\n     ![Messaging-Endpunkt](~/assets/images/teams-file-upload-bot/messaging-endpoint.png)\n\n1. Wählen Sie **Anwenden** aus.\n\n   Sie haben erfolgreich einen Bot im Azure Bot Service eingerichtet, und jetzt müssen Sie eine Bot-Dienstverbindung einrichten.\n"
- title: Einrichten einer Bot-Dienstverbindung
  durationInMinutes: 5
  content: "Damit sich der Bot-Dienst für einen Benutzer anmelden und auf den Bot zugreifen kann, konfigurieren Sie SSO für Ihren Bot.\nFühren Sie die folgenden Schritte aus, um eine Botdienstverbindung einzurichten:\n\n1. Fügen Sie der Azure-Bot-Ressource einen Umleitungs-URI hinzu.\n1. Api-Endpunkt verfügbar machen.\n1. Autorisieren von Clientanwendungen.\n1. Fügen Sie alle erforderlichen API-Berechtigungen für downstream-Aufrufe hinzu.\n1. Aktivieren Sie die implizite Genehmigung.\n1. Aktualisieren sie das Manifest.\n1. Einrichten einer Bot-Dienstverbindung.\n\n**So fügen Sie der Azure-Bot-Ressource einen Umleitungs-URI hinzu:**\n\n1. Wählen Sie neben **der Microsoft-App-ID** die Option **\"Verwalten**\" aus.\n\n     ![Bot verwalten](~/assets/images/teams-file-upload-bot/manage-sec.png)\n\n1. Wählen Sie im linken Bereich Ihrer Botressource die **Option \"Authentifizierung** \" aus.\n1. Wählen Sie in **Plattformkonfigurationen** **die Option \"Plattform hinzufügen**\" aus.\n1. Klicken Sie auf **Web**.\n1. Geben Sie **Umleitungs-URIs** ein, `https://token.botframework.com/.auth/web/redirect` und wählen Sie **\"Konfigurieren\"** aus.\n\n    ![Konfigurieren der Webumleitungs-URL](~/assets/images/teams-file-upload-bot/authentication.png)\n\n    Der Umleitungs-URI wird der Azure-Bot-Ressource hinzugefügt.\n\n    ![Anzeigen der Webumleitungs-URL](~/assets/images/bots/redirectURIadded.png)\n    \n**So machen Sie den API-Endpunkt verfügbar:**\n\n1. Wählen Sie im linken Bereich \" **API verfügbar machen** \" aus.\n1. Wählen Sie \" **Festlegen** \" für den Anwendungs-ID-URI aus.\n1. Verwenden Sie die **angezeigte Anwendungs-ID-URL** , und fügen Sie `api://` sie nicht `https://` in der **ngrok-URL** an, und fügen Sie sie am Anfang der App-ID-URL hinzu.\n\n    ![App-ID-URI](~/assets/images/teams-file-upload-bot/expose-api.png)\n\n1. Wählen Sie **Speichern** aus.\n1. Wählen Sie **Bereich hinzufügen**.\n1. Geben Sie im `access_as_user`**Bereichsnamen** .\n1. Wechseln **Sie in Wer zustimmen können?** zu **Administratoren und Benutzern**.\n1. Geben Sie die folgenden Werte in die Felder ein:\n\n    | Feld | Wert |\n    | ----- | ----- |\n    | Anzeigename der Administratorzustimmung | Teams können auf das Profil des Benutzers zugreifen |\n    | Beschreibung der Administratorzustimmung | Ermöglicht Teams, die Web-APIs der App als aktueller Benutzer aufzurufen. |\n    | Anzeigename der Zustimmung des Benutzers | Teams können auf Ihr Benutzerprofil zugreifen und Anforderungen in Ihrem Auftrag stellen. |\n    | Beschreibung der Zustimmung des Benutzers | Aktivieren Sie Teams, um die APIs dieser App mit den gleichen Berechtigungen aufzurufen, über die Sie verfügen. |\n\n1. Legen Sie **den Status** auf **\"Aktiviert**\" fest, falls noch nicht festgelegt.\n\n    ![Hinzufügen eines Bereichs](~/assets/images/teams-file-upload-bot/expo.png)\n\n1. Klicken Sie auf **Bereich hinzufügen**. Der Bereichsname stimmt automatisch mit dem Anwendungs-ID-URI überein, der `/access_as_user` am Ende hinzugefügt wird.\n\n**So autorisieren Sie Clientanwendungen:**\n\nFügen Sie beispielsweise die folgenden IDs als **autorisierte Clientanwendungen** hinzu, aktivieren Sie das Kontrollkästchen für **autorisierte Bereiche** , und wählen Sie dann **Anwendung hinzufügen** aus.      \n* `1fec8e78-bce4-4aaf-ab1b-5451cc387264`(Teams Mobile- oder Desktopanwendung)            \n* `5e3ce6c0-2b1f-4285-8d4b-75ee78787346`(Teams Webanwendung)</br>\n\n    ![Hinzufügen einer Clientanwendung](~/assets/images/teams-file-upload-bot/client-application.png)      \n\n**So fügen Sie alle erforderlichen API-Berechtigungen für downstream-Aufrufe hinzu:**\n\n1. Wählen Sie im linken Bereich **API-Berechtigungen** aus.\n1. Wählen Sie **Berechtigung hinzufügen** aus. Das Fenster \"**API-Berechtigungen anfordern**\" wird angezeigt.\n1. Wählen Sie **Microsoft-APIs aus**. Wählen Sie dann **Microsoft Graph** und **delegierte Berechtigungen** aus.\n1. Fügen Sie delegierte **Benutzerberechtigungen** hinzu, die Ihre App für downstreame APIs benötigt, z. B. User.Read.</br>\n\n     ![API-Berechtigungen](~/assets/images/teams-file-upload-bot/delegated-permission-1.png)\n\n**So aktivieren Sie die implizite Genehmigung:**\n\n1. Wählen Sie im linken Bereich die **Authentifizierung** aus.\n1. Aktivieren Sie **die Kontrollkästchen für Zugriffstoken** und **ID-Token** .\n\n     ![Authentifizierungstoken](~/assets/images/teams-file-upload-bot/access-tokens.png)\n\n1. Wählen Sie **Speichern** aus.\n\n**So aktualisieren Sie das Manifest**\n\n1. Select **Manifest** from the left pane.\n1. Legen Sie das Konfigurationselement auf **\"accessTokenAcceptedVersion\" fest: 2**. Wenn sie nicht festgelegt ist, ändern Sie den Wert in \"2\", und wählen Sie **\"Speichern**\" aus.\n    \n    > [!NOTE]\n    > Wenn Sie Ihren Bot bereits in Teams testen, melden Sie sich von dieser App ab und melden Sie sich von Teams ab. Um diese Änderung anzuzeigen, melden Sie sich erneut an.\n\n    ![Updatemanifest](~/assets/images/teams-file-upload-bot/access-version-manifest-2.png)\n\n**So richten Sie die Bot-Dienstverbindung ein:**\n\n1. Öffnen Sie die **Startseite** Ihres Bots, und wählen Sie im linken Bereich unter **Einstellungen** die Option **\"Konfiguration**\" aus.\n1. Wählen Sie **\"OAuth-Verbindung hinzufügen\" Einstellungen** aus.\n1. Geben Sie unter **\"Neue Verbindungseinstellung**\" die folgenden Details an:\n\n    | Feld | Wert oder Beschreibung |\n    | ----- | ----- |\n    | Name | Geben Sie den Namen für die neue Verbindungseinstellung an. Sie können den Namen in den Einstellungen Ihres Bot-Dienstcodes verwenden. |\n    | Service Provider | Wählen Sie **Azure Active Directory V2 aus**. |\n    | Client-ID | Geben Sie die **Microsoft-App-ID an**. |\n    | Geheimer Clientschlüssel | Geben Sie den **Wert** der geheimen Clientschlüssel-ID an. |\n    | Token-Exchange-URL | Verwenden Sie die zuvor beim Verfügbarmachen des API-Endpunkts abgerufene **Anwendungs-ID-URL** . |\n    | Mandanten-ID | **Mandanten-ID angeben**. |\n    | Scopes | Stellen Sie **User.Read** bereit, und fügen Sie alle erforderlichen **Bereiche** hinzu, während Sie Berechtigungen für downstream-APIs angeben. |\n\n    :::image type=\"content\" source=\"./assets/images/teams-file-upload-bot/oauth-settings.png\" alt-text=\"Bot-Dienstverbindung\":::\n\n1. Wählen Sie **Speichern** aus.\n"
- title: Testen eigener Apps
  durationInMinutes: 2
  content: "Die umfassendste Methode zum Testen Ihrer App besteht darin, ein App-Paket zu erstellen und es in Teams hochzuladen. Diese Methode ist die einzige Möglichkeit zum Testen der vollständigen Funktionalität, die Ihrer App in allen Bereichen zur Verfügung steht. Sie können die Teams App konfigurieren und ausführen, indem Sie die `manifest.zip` Datei hochladen.\n\nUm den Teams-Datei-Bot auszuführen, laden Sie die `manifest.zip` Datei in Teams hoch. Führen Sie die folgenden Schritte durch:\n\n1. Wechseln Sie im **Datei-Explorer** zu **botbuilder-samplessamples** >  >  **csharp_dotnetcore** >  **56.teams-file-uploadappsettings** > .\n\n1. Öffnen Sie die appsettings in Visual Studio Code, und aktualisieren Sie die `appsettings.json` Konfigurationsdatei für den Bot, um die `MicrosoftAppId (Bot Id)`, `MicrosoftAppPassword(Value of the client secret ID)`, `MicrosoftAppType`und `MicrosoftAppTenantID`zu verwenden.\n\n   ![App-Einstellungen](~/assets/images/teams-file-upload-bot/app-settings.png)\n\n1. Öffnen Sie die `manifest.json` Datei in Visual Studio Code.\n\n1. Suchen `YOUR-MICROSOFT-APP-ID` Sie sie in der `manifest.json` Datei, und ersetzen Sie sie durch Ihre App-ID. Ihre App-ID wird erstellt, wenn Sie Ihren Bot registrieren. Speichern Sie die Datei.\n\n   ![JSON-Manifest](~/assets/images/teams-file-upload-bot/manifest-json.png)\n\n1. Zip up the contents of the `TeamsAppManifest' folder to create a `manifest.zip` archive. Open the manifest file in Visual Studio Code and replace with your MicrosoftAppID (depending on the scenario the Microsoft App Id may occur multiple times in the `manifest.json' file.)\n\n1. Hochladen die `manifest.zip` zu Teams (klicken Sie in der Ansicht \"Apps\" auf \"Hochladen einer benutzerdefinierten App\")\n\n1. Wählen Sie zum Hochladen `manifest.zip`**Store** >  **Manage Ihrer Apps** >  **Hochladen einer benutzerdefinierten App** aus, und öffnen `manifest.zip`Sie .\n\n1. Wählen Sie **\"Hinzufügen** \" aus, um den Bot zu Ihrem Chat hinzuzufügen.\n\n1. Navigieren Sie vor dem Senden einer Nachricht an den Bot zum **Datei-Explorer**, navigieren Sie zu **\"botbuilder-samplessamples** >  >  csharp_dotnetcore **56.teams-file-upload****\"** > \n\n1. Öffnen `TeamsFileUpload.csproj` Sie die Datei in Visual Studio Code, und stellen Sie sicher, dass Sie sich in \"Teams Dateiupload\" befinden.\n\n    ![Visueller Code](~/assets/images/teams-file-upload-bot/visual-studio-teams-file-upload-bot.png)\n\n1. Führen Sie Ihren Bot aus Visual Studio aus `F5` oder verwenden Sie `dotnet run` ihn im entsprechenden Ordner.\n\n1. Senden Sie eine Nachricht `Hi` an den Bot, und warten Sie einige Sekunden, bis er mit einer Karte antwortet.\n"
- title: Interagieren mit dem Bot in Teams
  durationInMinutes: 2
  content: "> [!NOTE]\n>  Nachdem der Bot im persönlichen Bereich installiert wurde, gibt der Benutzer eine Chatunterhaltung mit dem Bot ein.\n\nIn diesem Leitfaden wird gezeigt, wie Sie auf verschiedene Weise mit dem Bot kommunizieren. Die folgenden Schritte veranschaulichen die Bot-Aktivitäten:\n\n1. Senden Sie eine Nachricht an den Bot. Sie antwortet mit einer Karte für die Berechtigung zum Hochladen der Datei.\n   \n     ![prompt1](~/assets/images/teams-file-upload-bot/sbs-1.png)\n\n1. Wählen Sie **\"Zulassen\" aus**. Eine `teams-logo.png` Datei wird in das Dateiverzeichnis hochgeladen, das heruntergeladen werden kann.\n\n     ![Meldungsaufforderung](~/assets/images/teams-file-upload-bot/sbs-2.png)\n\n1. Senden Sie eine Datei an den Bot als Anlage in Teams. Es antwortet mit einer Nachricht `Received and Saved`. Sie können die Anlage auf der Registerkarte **\"Dateien** \" anzeigen.\n\n     ![Dateiaufforderung](~/assets/images/teams-file-upload-bot/sbs-3.png)\n\n1. Senden sie ein Bild als Anlage. Es antwortet mit einer Nachricht `Received and saved`. Sie können das Bild im Chatfenster und auf der Registerkarte **\"Dateien** \" anzeigen.\n   \n     ![Bildaufforderung](~/assets/images/teams-file-upload-bot/sbs-4.png)\n"
- title: Vollständige Herausforderung
  durationInMinutes: 1
  content: >
    Haben Sie sich so etwas einfallen lassen?


    :::image type="content" source="assets/images/teams-file-upload-bot/output-sbs.png" alt-text="Ausgabe aus dem Handbuch erwartet, die bestätigt, dass Sie Dateien vom Bot in Teams hochladen können." lightbox="assets/images/teams-file-upload-bot/output-sbs.png":::
- content: Sie haben das Lernprogramm abgeschlossen. Jetzt können Sie Dateien vom Bot in Microsoft Teams hochladen.
