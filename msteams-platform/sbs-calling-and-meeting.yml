### YamlMime:Tutorial
title: Teams Anruf- und Besprechungsbot
metadata:
  title: Teams Bot mit Anruf und Besprechung
  description: In diesem Lernprogramm erfahren Sie, wie Sie Anrufe und Besprechungen in einem Bot für Teams einrichten.
  audience: Developer
  level: Beginner
  ms.date: 02/08/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/calls-and-meetings/registering-calling-bot.md
  nextTutorialTitle: Registrieren eines anrufenden Bots
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 0ec7138181ae84cb66950a0d7d8c32a33b8aef12
  ms.sourcegitcommit: b9af51e24c9befcf46945400789e750c34723e56
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 02/15/2022
  ms.locfileid: "62821395"
items:
- durationInMinutes: 1
  content: >
    Der Anruf- und Besprechungsbot bietet grundlegende Funktionen wie das Erstellen eines Anrufs, das Beitreten zu einem Anruf, das Übertragen oder Umleiten eines Anrufs, das Teilnehmen an einer geplanten Besprechung und das Einladen der Teilnehmer durch die Integration der Cloud-Kommunikations-API Graph-API.


    Bots können mit Teams Anrufen und Besprechungen in Echtzeit mit Sprach-, Video- und Bildschirmfreigabe interagieren. Mit Microsoft Graph-APIs für Anrufe und Onlinebesprechungen können Teams Apps jetzt mit Benutzern interagieren, indem Sie Sprach- und Videofunktionen verwenden, um die Benutzererfahrung zu verbessern. Mit diesen APIs können Sie die folgenden neuen Features hinzufügen:


    * Interaktive Sprachantwort (Interactive Voice Response, IVR)

    * Anrufsteuerung

    * Zugriff auf Audio- und Videodatenströme in Echtzeit, einschließlich Desktop- und App-Freigabe


    Erstellen Sie einen Bot, und geben Sie einige zusätzliche Informationen und Berechtigungen an, um diese Graph-APIs in einer Teams-App zu verwenden.


    Diese schrittweise Anleitung hilft Ihnen beim Erstellen eines Bots mit Anruf- und Besprechungsfunktionen. Am Ende dieses Lernprogramms können Sie die folgende Ausgabe erzielen:


    ![Endgültige Ausgabe](~/assets/images/calls-and-meetings/final-output.png)
- title: Voraussetzungen
  durationInMinutes: 1
  content: "Stellen Sie sicher, dass Sie die folgenden Tools installieren und Ihre Entwicklungsumgebung einrichten:  \n\n* [Office 365 Mandant](https://developer.microsoft.com/en-us/microsoft-365/dev-program)\n* [Ngrok](https://ngrok.com/) oder eine entsprechende Tunnellösung\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)\n* [.NET Core SDK](https://dotnet.microsoft.com/en-us/download) Version 3.1\n* Microsoft Teams mit einem Konto (kein Gastkonto)\n* Installieren [Windows PowerShell](https://docs.microsoft.com/en-us/microsoftteams/teams-powershell-install) durch Ausführen aller Befehle\n"
- title: Einrichten des Anruf- und Besprechungsbots
  durationInMinutes: 5
  content: "Registrieren Sie eine Anwendung über die App-Registrierung im Microsoft Azure-Portal, damit Ihre App in die Microsoft Identity Platform integriert werden kann, und rufen Sie Microsoft Graph auf. Führen Sie Folgendes aus:\n\n1. Verwenden Sie ngrok, um einen Tunnel zu den Endpunkten Ihres Webservers zu erstellen.\n1. Erstellen Sie eine Azure Bot-Ressource, um den Bot beim Azure Bot Service zu registrieren.\n1. Erstellen Sie einen geheimen Clientschlüssel, der die SSO-Authentifizierung des Bots ermöglicht.\n1. Erstellen Sie eine Richtlinie für einen Demomandantenbenutzer zum Erstellen der Onlinebesprechungen mithilfe von PowerShell.\n1. Fügen Sie API-Berechtigungen für downstream-Aufrufe hinzu.\n1. Erstellen sie die Bot-Kanalregistrierung im Azure-Konto.\n1. Fügen Sie Microsoft Teams Kanal hinzu, um den Bot in einem Teams Kanal bereitzustellen.\n1. Fügen Sie dem ngrok-Tunnel, den Sie erstellt haben, einen Messaging-Endpunkt hinzu.\n\n**Erstellen eines ngrok-Tunnels:**\n\nVerwenden Sie ngrok, um einen Tunnel zu den öffentlich verfügbaren HTTPS-Endpunkten Ihres lokal ausgeführten Webservers zu erstellen. Führen Sie den folgenden Befehl in ngrok aus:\n\n```bash\nngrok http -host-header=rewrite 3978\n```\n\n**Registrieren einer App in Azure:**\n\n1. Melden Sie sich mit Ihrem persönlichen Microsoft-Konto beim [Azure-Portal](https://portal.azure.com/) an.\n1. Wählen Sie den **Azure Active Directory-Dienst** aus, und wählen Sie **App-Registrierungen** im linken Bereich aus, und wählen Sie dann **neue Registrierung** aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-active-directory.png\" alt-text=\"Azure Active Directory.\":::\n\n1. **Eine Anwendungsseite** registrieren wird geöffnet. Geben Sie die Registrierungsinformationen Ihrer Anwendung ein.\n1. Geben Sie einen aussagekräftigen **Anwendungsnamen** ein, der Benutzern der App angezeigt wird.\n1. Wählen Sie **unter \"Unterstützte Kontotypen**\" die Konten aus, die Ihre Anwendung unterstützen soll.\n1. Wählen Sie im Feld **Umleitungs-URI** (optional) den Typ des **App-Webs oder öffentlichen Clients (mobile & Desktop)** aus, und geben Sie dann den Umleitungs-URI für Ihre Anwendung ein.\n\n    > [!NOTE]\n    > Geben Sie für Webanwendungen den Basis-URI als `http://localhost:31544`. Geben Sie für öffentliche Clientanwendungen den URI an, der von Azure AD verwendet wird, um Tokenantworten als `myapp://auth`zurückzugeben.\n\n1. Wählen Sie **Registrieren** aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/reg-app.png\" alt-text=\"Registrieren sie eine App.\":::\n\n**So erstellen Sie einen geheimen Clientschlüssel:**\n\n1. Wählen Sie auf der Seite **\"Übersicht\"** Ihres **Bots Essentials** aus, und speichern Sie die **Anwendungsclient-ID** (Microsoft App-ID) als zukünftige Referenz.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/microsoft-app-id-new.png\" alt-text=\"Microsoft App-ID.\":::\n\n1. Wählen Sie im Abschnitt **\"Verwalten****\" \"Zertifikate & geheime Schlüssel**\", dann \"**Geheime Clientschlüssel\"** und \"**Neuer geheimer Clientschlüssel\" aus**. Das Fenster \" **Geheimen Clientschlüssel hinzufügen** \" wird angezeigt.  \n\n1. Geben Sie **\"Beschreibung\" ein** , und wählen Sie **\"Hinzufügen**\" aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/add-client.png\" alt-text=\"Fügen Sie geheimen Clientschlüssel hinzu.\":::\n\n1. In the **Value** column, select **Copy to clipboard** and save the client secret ID for future reference.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/client-secret.png\" alt-text=\"Wert.\":::\n\n**Führen Sie das PowerShell-Skript aus, um eine Richtlinie zu erstellen:**\n\n1. Erstellen Sie eine Richtlinie für einen Demomandantenbenutzer zum Erstellen der Onlinebesprechungen mit dem folgenden PowerShell-Skript:\n\n    > [!NOTE]\n    > Führen Sie Windows PowerShell PSI als Administrator aus, und führen Sie das Skript aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/powershell-script.png\" alt-text=\"PowerShell-Skript.\":::\n\n1. Ersetzen Sie `azure-client-id` **dies durch Ihre Microsoft App-ID** Ihres Bots und `object-id` durch die **Mandanten-ID** Ihres Kontos, das zum Anmelden beim Teams verwendet wird (Kopieren Sie den Link wie in der folgenden Abbildung dargestellt, und Sie finden die Mandanten-ID Ihres Teams Kontos in dem erhaltenen Link).\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/teams-link-new.png\" alt-text=\"Teams Link.\":::\n\n1. Fügen Sie das PowerShell-Skript hinzu`azure-client-id`, `policy-description`und `object-id` fügen Sie `PolicyName`es hinzu. Melden Sie sich mit Ihrem Teams Konto an, wenn PowerShell dazu aufgefordert wird.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/powershell.png\" alt-text=\"Powershell.\":::\n\n1. Führen Sie den folgenden Befehl in PowerShell aus, um zu überprüfen, ob die Richtlinie erfolgreich erstellt wurde. Ersetzen Sie den Richtliniennamen durch den definierten Richtliniennamen.\n\n    ```powershell\n    Get-CsApplicationAccessPolicy -Identity “<<policy-identity/policy-name>>”\n    ```\n\n**So fügen Sie API-Berechtigungen für downstream-Aufrufe hinzu:**\n\n> [!NOTE]\n> Stellen Sie sicher, dass Ihr Konto die Administratorzustimmung für Microsoft erteilen kann. Wählen Sie `Grant admin consent for Microsoft` nach dem Hinzufügen von Berechtigungen den Status der Zustimmung aus.\n\n1. Wählen Sie im Bereich **\"Verwalten** \" Ihres Bots **API-Berechtigungen aus**.\n1. Wählen Sie **Berechtigung hinzufügen** aus. Das Fenster \"**API-Berechtigungen anfordern**\" wird angezeigt.\n1. Wählen Sie **Microsoft-APIs** aus, und wählen Sie **Microsoft Graph** aus.\n1. Wählen Sie **Anwendungsberechtigungen** und dann Berechtigungen aus.\n1. Fügen Sie Ihrer Azure-App die folgenden Graph API-Anwendungsberechtigungen hinzu, und erteilen Sie die Administratorzustimmung.\n    * `Calls.AccessMedia.All`\n    * `Calls.Initiate.All`\n    * `Calls.InitiateGroupCall.All`\n    * `Calls.JoinGroupCall.All`\n    * `Calls.JoinGroupCallAsGuest.All`\n    * `OnlineMeetings.ReadWrite.All`\n1. Wählen Sie **Berechtigungen hinzufügen** aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/add-api-permissions.png\" alt-text=\"Fügen Sie API-Berechtigungen hinzu.\":::\n\n**Erstellen der Bot-Kanalregistrierung in Azure-Konto:**\n\n1. Öffnen Sie [das Azure-Portal](https://portal.azure.com/).\n1. Wählen Sie **Ressource erstellen** aus.\n1. Suchen Sie im Suchfeld nach **Azure Bot** .\n1. Wählen Sie **Azure Bot** aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-bot-homepage.png\" alt-text=\"Azure-Botkarte.\":::\n\n1. Wählen Sie **Erstellen** aus.\n1. Geben Sie den Namen des Bothandle in **das Feld \"Bothandle\"** ein.\n1. Wählen Sie Ihr **Abonnement** aus der Dropdownliste aus.\n1. Wählen Sie Ihre **Ressourcengruppe** aus der Dropdownliste aus.\n\n    Um eine neue Ressourcengruppe zu erstellen, wählen Sie **Neu erstellen** aus, geben Sie den Ressourcennamen ein, wählen Sie \" **OK**\" aus, und wählen Sie in der Dropdownliste \" **Speicherort der neuen Ressourcengruppe** \" den erforderlichen Speicherort aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/create-azure-bot.png\" alt-text=\"Erstellen Sie Azure Bot.\":::\n\n1. Wählen Sie **den App-Typ** als **mehrinstanzenfähig** für **die Microsoft-App-ID** aus.\n\n    > [!NOTE]\n    > Im `Creation type` Abschnitt \"Microsoft App ID\" ist bereits ausgewählt, `Create new Microsoft App ID` um einen neuen Bot zu erstellen. Sie können auch auswählen `Use existing app registration`, ob Sie bereits einen Bot registriert haben. Geben Sie die Microsoft App-ID in das `Existing app id` Feld ein, und geben Sie den Wert in `Existing app password` das Feld ein.\n\n1. Wählen Sie **\"Vorhandene App-Registrierung verwenden\"** aus, und geben Sie **die App-ID** und den **geheimen App-Schlüssel** Ihrer azure-App ein, die im Demomandanten registriert ist.\n1. Wählen Sie **Überprüfen + erstellen** aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/review-create.png\" alt-text=\"Mehrere Mandanten.\":::\n\n1. Wenn die Überprüfung erfolgreich ist, wählen Sie \" **Erstellen**\" aus.\n\n   Es dauert ein paar Minuten, bis Ihr Bot-Dienst bereitgestellt wurde.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/validation.png\" alt-text=\"Validierung.\":::\n\n1. Wählen Sie **Zu Ressource wechseln** aus. Der Bot und die zugehörigen Ressourcen werden in der Ressourcengruppe aufgeführt.\n\n    Jetzt wurde Ihr Azure-Bot erstellt.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/go-to-resource.png\" alt-text=\"Zu Ressource wechseln.\":::\n\n**So fügen Sie den Microsoft Teams Kanal hinzu:**\n\n1. Wechseln Sie zu **\"Start\"**.\n1. Öffnen Sie Ihren Bot, der im Abschnitt **\"Zuletzt verwendete Ressourcen** \" aufgeführt ist.\n1. Wählen Sie im linken Bereich **Kanäle** aus, und wählen Sie **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/> aus der Liste der verfügbaren Kanäle.    \n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/channels-teams.png\" alt-text=\"Kanäle Teams.\":::\n\n1. Aktivieren Sie das Kontrollkästchen, um die Nutzungsbedingungen zu akzeptieren, und wählen Sie **\"Zustimmen**\" aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/terms-of-service.png\" alt-text=\"Nutzungsbedingungen.\":::\n\n1. Wählen Sie **Speichern** aus.\n1. Wählen Sie **Microsoft Teams** aus, und wählen Sie auf Teams Kanalseite die Registerkarte **\"Anrufe**\" aus.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/configure-teams.png\" alt-text=\"Konfigurieren sie Teams.\":::\n\n1. Wählen Sie **\"Anruf aktivieren\"** aus, und aktualisieren Sie dann **Den Webhook** mit Ihrer HTTPS-ngrok-URL (https://yourNgrok/api/callback) und fügen Sie am Ende hinzu `/api/callback` .\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/enable-calling.png\" alt-text=\"Aktivieren Sie anrufe.\":::\n\n1. Wählen Sie **Speichern** aus.\n\n**So fügen Sie den Messaging-Endpunkt hinzu:**\n\n1. Wechseln Sie zur **Startseite** Ihres Bots, und wählen Sie im linken Bereich unter **Einstellungen** die Option **\"Konfiguration**\" aus.\n1. Wechseln Sie zu \"ngrok\".\n1. Kopieren Sie die HTTPS-URL (https zu io), wie in der folgenden Abbildung dargestellt:\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/ngrok.png\" alt-text=\"Ngrok.\":::\n\n1. Fügen Sie im **Messaging-Endpunkt** die https-URL hinzu, die über ngrok verfügbar ist, und fügen Sie am Ende der URL **/api/messages** hinzu.\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/messaging-endpoint.png\" alt-text=\"Messaging-Endpunkt.\":::\n\n1. Wählen Sie **Anwenden** aus.\n\n    Sie haben erfolgreich einen Bot im Azure Bot Service eingerichtet, und jetzt müssen Sie eine Bot-Dienstverbindung einrichten.\n"
- title: Aktualisieren und Erstellen Teams App-Pakets
  durationInMinutes: 1
  content: "Konfigurieren Sie das Bot-Beispiel, um zu verstehen, wie Sie unterhaltungsbezogene Bots in Microsoft Teams authentifizieren und das Teams-App-Paket erstellen und in die Organisation hochladen.\n\n1. Aktualisieren Sie \"appsettings.json\" in Visual Studio.\n1. Aktualisieren Sie \"manifest.json\" in Visual Studio, und komprimieren Sie sie in die ZIP-Datei im Datei-Explorer.\n\n**Aktualisieren von appsettings für das Aufrufen von Bot:**\n\n1. Wechseln Sie zum Repository https://github.com/OfficeDev/Microsoft-Teams-Samples.git.\n1. Wählen Sie **\"Code\"** aus, und wählen Sie die Dropdownliste aus.\n1. Wählen Sie **\"ZIP herunterladen\" aus**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/repo-download.png\" alt-text=\"Repo-Download.\":::\n\n1. Notieren Sie sich unbedingt den Pfad des heruntergeladenen Repositorys.\n1. Wechseln Sie im **Datei-Explorer** zum Ordner **\"Microsoft-Teams-Samples-mainsamplesbot-calling-meetingcsharp** >  >  > \".\n1. Öffnen Sie die Datei **\"appsettings.json**\" in Visual Studio und aktualisieren Sie die Konfiguration für den Bot.\n\n    * Sie können dies `MicrosoftAppId` auf der Konfigurationsseite des Bots abrufen. Der `MicrosoftAppPassword` Wert für die geheime Clientschlüssel-ID, die Sie zuvor gespeichert haben.\n    * Sie können den `Tenant ID` Oder `UserId` aus dem Link des Kontos abrufen, das für die Anmeldung beim Teams verwendet wurde. Folgen Sie dem Pfad in der Abbildung, um den Link für `tenant id`abzurufen.\n    \n        :::image type=\"content\" source=\"./assets/images/calls-and-meetings/teams-link-new.png\" alt-text=\"Teams Link.\":::\n    \n    * Sie können die und `UserId` von der `DisplayName` [Microsoft Graph Explorer-Website](https://developer.microsoft.com/en-us/graph/graph-explorer) abrufen.\n        * Melden Sie sich mit Ihrem Teams Konto bei der Seite an, fügen Sie `Users` sie am Ende der URl im Suchfeld hinzu, und wählen Sie **\"Abfrage ausführen**\" aus.\n        * Anzeigenamen und Benutzer-IDs, die mit Ihrem Konto verknüpft sind, werden generiert.\n        * Wählen Sie alle drei Konten aus, und fügen Sie sie der `DisplayName` und `UserId` in \"appsettings.json\" hinzu.\n\n        :::image type=\"content\" source=\"./assets/images/calls-and-meetings/graph-explorer.png\" alt-text=\"Graph Explorer.\":::\n\n    > [!NOTE]\n    > `Tenant ID`oder `UserId` des Teams-Kontos angibt, von wo aus Sie den Anruf initiieren möchten, und `DisplayName` `UserId` von den Benutzern, an die Sie den Anruf umleiten oder übertragen möchten.\n\n1. Ersetzen Sie `MicrosoftAppId`, `ClientId`, `AppId` durch Ihre **Anwendungs-ID (Client-ID)** und `MicrosoftAppPassword`, `ClientSecret`und `AppSecret` durch Ihren **Wert**.\n1. Aktualisieren Sie `BotBaseUrl` mit Ihrer `ngrok` URL.\n1. Aktualisieren `Tenant ID` und `UserId`.\n1. Aktualisieren `DisplayName` und `UserId`.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/appsettings.png\" alt-text=\"Appsettings Json.\":::\n\n1. Wählen Sie **Speichern** aus.\n\n**So aktualisieren Sie das Manifest:**\n\n1. Wechseln Sie im **Datei-Explorer** zum Ordner **\"Microsoft-Teams-Samples-mainsamplesbot-calling-meetingcsharpManifest** >  >  >  > \".\n1. Öffnen Sie die Datei **\"manifest.json\"** in Visual Studio.\n1. Suchen Sie in der Datei **\"manifest.json** \" **nach {id}, {BotId},** und fügen Sie Ihre Microsoft App-ID hinzu.\n1. Fügen Sie Ihre ngrok-URL in **\"validDomains\"** mit Ausnahme von https:// hinzu, und speichern Sie sie.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/manifest.png\" alt-text=\"Manifest.\":::\n\n1. Zippen Sie den Inhalt des **Manifestordners** , um **manifest.zip** zu erstellen.\n\n    > [!NOTE]\n    > Der `manifest.zip` Ordner sollte keine zusätzlichen Ordner enthalten. Sie sollte die Quelldatei, `color` das Symbol und `outline` das Symbol im ZIP-Ordner enthalten`manifest json`.\n    > Hochladen Sie Ihr Manifest in Ihrem Demomandanten für Die Organisation oder Ihrem Teams Konto, und führen Sie Ihre Lösung in Visual Studio aus.\n\n1. Wechseln Sie zu Teams.\n1. Um **manifest.zip** hochzuladen, wählen Sie **Store > Ihre Apps > Hochladen einer benutzerdefinierten App verwalten** aus, und öffnen **Siemanifest.zip** aus dem Repositoryordner im Datei-Explorer.\n1. Wählen Sie **\"Hinzufügen**\" aus, um den Anrufbot in Teams zu installieren.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/output.png\" alt-text=\"Ausgabe hinzufügen.\":::\n\n    Sie können nach dem Debuggen in Visual Studio mit diesem Bot interagieren.\n"
- title: Interaktion mit dem Bot für Anrufe und Besprechungen
  durationInMinutes: 2
  content: >
    Bot ermöglicht Ihnen den Zugriff auf Dienste und Inhalte in einem dedizierten Bereich innerhalb eines Kanals oder in einem Chat.


    Führen Sie die Schritte zum Verwenden des Bots aus:


    1. Wählen Sie im linken Bereich des Teams die Auslassungspunkte "..." aus, und wählen Sie Ihre App aus der Liste aus.

    1. Bot sendet Willkommenstext mit adaptiver Karte wie unten dargestellt.

        :::image type="content" source="./assets/images/calls-and-meetings/bot-with-adaptive-card.png" alt-text="Adaptive Karte im Bot.":::

    1. Sie können bot bitten, einen Anruf zu erstellen.

        :::image type="content" source="./assets/images/calls-and-meetings/placed-call.png" alt-text="Platzierter Anruf.":::

    1. Sie können bot bitten, den Anruf zu übertragen.

        :::image type="content" source="./assets/images/calls-and-meetings/transfer-call.png" alt-text="Anruf übertragen.":::

    1. Sie können den Bot bitten, eine Besprechung zu planen und die Teilnehmer einzuladen.

        :::image type="content" source="./assets/images/calls-and-meetings/meeting.png" alt-text="Besprechungsbot.":::
- title: Vollständige Herausforderung
  durationInMinutes: 1
  content: >
    Haben Sie sich so etwas einfallen lassen?


    ![Endgültige Ausgabe](~/assets/images/calls-and-meetings/final-output.png)
- content: Sie haben das Lernprogramm abgeschlossen, um mit Bot-Anrufen und Besprechungs-App für Microsoft Teams zu beginnen.
