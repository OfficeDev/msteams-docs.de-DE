### YamlMime:Tutorial
title: Erstellen eines Teams-Workflowbots
metadata:
  title: Erstellen eines Teams-Workflowbots
  description: In diesem Lernmodul erfahren Sie, wie Sie einen Workflowbot in Microsoft Teams mit dem Feature adaptive Karten-Aktionshandler erstellen.
  audience: Developer
  level: Beginner
  ms.date: 28/09/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: toolkit/add-capability.md
  nextTutorialTitle: Hinzufügen von Funktionen zu Teams-Apps
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 39ffa9600836fe58f243140c8a5379006df339eb
  ms.sourcegitcommit: 6926cf5eee55d5047c11ca13afc7f6f23e270396
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 10/27/2022
  ms.locfileid: "68740970"
items:
- durationInMinutes: 1
  content: >
    Der Workflow-Bot ermöglicht Benutzern die Interaktion mit einer adaptiven Karte, die durch das Feature für den Adaptive Karten-Aktionshandler in der Workflowbot-App aktiviert wird. Wenn Sie auf die ausgelöste Aktion adaptive Karte reagieren, wird ein sequenzieller Workflow abgeschlossen.

    Wenn Sie eine adaptive Karte erhalten, stellt sie eine oder mehrere Schaltflächen auf der Karte für Ihre Eingabe bereit. Sie können auch eine API aufrufen und dann eine weitere adaptive Karte in Ihrer Unterhaltung als Reaktion auf die Kartenaktion senden.

    In diesem Tutorial erfahren Sie Folgendes:
      * Erstellen eines Workflowbots mit dem Teams Toolkit
      * Informationen zur Verzeichnisstruktur Ihrer App.
      * Passen Sie die Installation Ihres Bots mit der Antwort für adaptive Karten an.

    Die folgende Ausgabe wird angezeigt:


    :::image type="content" source="./assets/images/sbs-workflow-bot/sbs-workflow-bot-final-output.png" alt-text="Workflowbotausgabe.":::
- title: Voraussetzungen
  durationInMinutes: 1
  content: "Hier finden Sie eine Liste der Tools, die Sie zum Erstellen und Bereitstellen Ihrer Apps benötigen.\n\n| &nbsp; | Installieren | Für die Verwendung von |\n| --- | --- | --- |\n| **Erforderlich** | &nbsp; | &nbsp; |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | JavaScript oder TypeScript, Buildumgebungen. Verwenden Sie die neueste Version. |\n| &nbsp; | [Teams Toolkit](#install-the-teams-toolkit) | Eine Microsoft Visual Studio Code-Erweiterung, die ein Projektgerüst für Ihre App erstellt. Verwenden Sie Version 4.0.0.|\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Back-End-JavaScript-Laufzeitumgebung. Verwenden Sie Version 14 oder 16.|\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams für die Zusammenarbeit mit allen, mit denen Sie zusammenarbeiten, über Apps für Chats, Besprechungen, Anrufe und alles an einem Ort.|\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (empfohlen) oder [Google Chrome](https://www.google.com/chrome/) | Ein Browser mit Entwicklertools. |\n| &nbsp; | [Microsoft 365-Entwicklerkonto](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | Zugriff auf das Teams-Konto mit den entsprechenden Berechtigungen zum Installieren einer App. |\n> [!NOTE]\n> Das Handbuch ist auf Teams Toolkit Version 4.0.0 und Nodejs Version 14 und 16 getestet. Die Schritte in diesem Leitfaden funktionieren möglicherweise mit anderen Versionen, wurden aber noch nicht getestet.\n\n## <a name=\"prepare-development-environment\"></a>Vorbereiten der Entwicklungsumgebung\nNachdem Sie die erforderlichen Tools installiert haben, richten Sie die Entwicklungsumgebung ein.\n\n### <a name=\"install-the-teams-toolkit\"></a>Installieren des Teams-Toolkits\nDas Teams Toolkit vereinfacht den Entwicklungsprozess mit Tools zum Bereitstellen und Bereitstellen von Cloudressourcen für Ihre App, veröffentlichen sie im Teams Store und vieles mehr. \n\nSie können das Toolkit mit Visual Studio Code oder der CLI (Befehlszeilenschnittstelle) namens `TeamsFx`verwenden.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Öffnen Sie Visual Studio Code, und wählen Sie **Erweiterungen** (**STRG+UMSCHALT+X** / **⌘⇧-X** oder **> Erweiterungen anzeigen) aus**.\n1. Geben Sie im Suchfeld **Teams Toolkit** ein.\n1. Wählen Sie neben dem Teams Toolkit **die Option Installieren** aus.\n   :::image type=\"content\" source=\"~/assets/images/sbs-command-bot/teams-toolkit.png\" alt-text=\"Abbildung der Installation der Teams Toolkit-Erweiterung.\":::\n\nDie Abbildung des :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"Teams-Toolkits zeigt das Teams-Toolkit-Symbol in der Seitenleiste von Visual Studio Code.\"::: das Symbol wird in der Visual Studio Code-Seitenleiste angezeigt, nachdem es installiert wurde.\n    \nSie finden das Teams Toolkit auch im [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension).\n\n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cli)\nVerwenden Sie den Paket-Manager, um die `npm` TeamsFx-CLI zu installieren:\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\nAbhängig von Ihrer Konfiguration müssen Sie möglicherweise verwenden `sudo` , um die CLI zu installieren:\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\nDies ist häufiger auf Linux- und macOS-Systemen der Fall.\nStellen Sie sicher, dass Sie den globalen npm-Cache zu Path hinzufügen. Dieser Schritt wird normalerweise als Teil des Node.js-Installationsprogramms ausgeführt.  \nSie können die CLI mit dem `teamsfx` Befehl verwenden. Überprüfen Sie, ob der Befehl funktioniert, indem Sie ausführen `teamsfx -h`.\n\n> [!NOTE]\n> Bevor Sie TeamsFx in PowerShell-Terminals ausführen, stellen Sie sicher, dass Sie die **remote signierte** Ausführungsrichtlinie für PowerShell aktivieren.\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Einrichten Ihres Teams-Entwicklungsmandanten\nEin **Mandant** ist wie ein Raum oder ein Container, in dem Sie chatten, Dateien freigeben und Besprechungen für Ihre Organisation in Teams ausführen. Sie können Ihre App auch querladen und testen.\n### <a name=\"check-for-sideloading-option\"></a>Option \"Auf Querladen überprüfen\"\nNachdem Sie die App erstellt haben, müssen Sie ihre App in Teams laden, ohne sie zu verteilen. Dies wird als Querladen bezeichnet. Melden Sie sich bei Ihrem Microsoft 365-Konto an, um diese Option anzuzeigen.\n> [!NOTE]\n> Das Querladen ist für die Vorschau und das Testen von Apps in der lokalen Teams-Umgebung erforderlich. Aktivieren Sie Querladen, um eine Vorschau ihrer App in Teams lokal anzuzeigen und zu testen.\n\nVerfügen Sie bereits über einen Mandanten und über Administratorzugriff? Lassen Sie uns überprüfen, ob Sie dies wirklich tun!\nSo überprüfen Sie das Querladen von Apps in Teams:\n1. Wählen Sie im Teams-Client **Store** aus.\n1. Wählen Sie **Verwalten Ihrer Apps** aus.\n1. Wählen Sie **In App veröffentlichen** aus.\n1. Suchen Sie nach der Option **Hochladen einer benutzerdefinierten App**. Wenn die Option angezeigt wird, ist das Querladen von Apps aktiviert.\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"Abbildung: Option zum Hochladen einer benutzerdefinierten App in Teams\":::\n    > [!NOTE]\n    > Wenden Sie sich an den Teams-Administrator, wenn Sie nicht die Möglichkeit haben, eine benutzerdefinierte App hochzuladen.\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Erstellen eines kostenlosen Teams-Entwicklermandanten (optional)\nWenn Sie nicht über ein Teams-Entwicklerkonto verfügen, können Sie es kostenlos erhalten. Nehmen Sie am Microsoft 365-Entwicklerprogramm teil!\n1. Gehen Sie zu [Microsoft 365-Entwicklerprogramm](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Wählen Sie **Jetzt beitreten** aus, und folgen Sie den Anweisungen auf dem Bildschirm.\n1. Wählen Sie auf der Willkommensseite **E5-Abonnement** einrichten aus.\n1. Richten Sie ein Administratorkonto ein. Nachdem Sie fertig sind, wird der folgende Bildschirm angezeigt.\n   :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Microsoft\":::\n1. Melden Sie sich mit dem neuen Administratorkonto bei Teams an. Nun sollten Sie über die Option **Benutzerdefinierte App hochladen** verfügen.\n"
- title: Erstellen eines Workflowbots
  durationInMinutes: 5
  content: "Führen Sie zum Erstellen eines Workflowbots mit Visual Studio Code die folgenden Schritte aus:\n1. Öffnen Sie Visual Studio Code.\n1. Wählen Sie das **Symbol Teams Toolkit** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: in der Visual Studio Code-Seitenleiste aus.\n1. Wählen Sie **Neue Teams-App erstellen** aus.\n  \n    :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-create.png\" alt-text=\"erstellen Sie eine neue Teams-App im Seitenbereich.\":::\n\n1. Wählen Sie **die Option Neue Teams-App erstellen** aus, um eine App mithilfe des Teams-Toolkits zu erstellen.\n\n    :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-teams-app.png\" alt-text=\" Wählen Sie die Option zum Erstellen einer neuen Teams-App aus.\":::\n\n1. Wählen Sie unter **Szenariobasierte Teams-Apps** **die Option Workflowbot** als Funktion aus, die Sie in Ihrer App erstellen möchten.\n\n    :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-capabilities-workflow.png\" alt-text=\" Wählen Sie die Option Arbeitsflussbot für Funktionen aus.\" lightbox=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-capabilities-workflow.png\":::\n\n1. Wählen Sie **TypeScript** als Programmiersprache aus.\n\n    :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-program-lang.png\" alt-text=\" Auswählen des Optionstypskripts für die Programmiersprache\":::\n\n1. Wählen Sie **Standardordner** aus, um ihren Projektstammordner am Standardspeicherort zu speichern.\n  \n    > [!NOTE]\n    > Sie können auch den Standardspeicherort ändern, indem **Sie Durchsuchen... auswählen.**\n    \n    :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-workspace-folder.png\" alt-text=\" Auswählen zum Hinzufügen des Arbeitsbereichsordners\":::\n   \n1. Geben Sie einen geeigneten Namen für Ihre App ein, z. B. Workflowbot als Anwendungsname.\n    > [!NOTE]\n    > Stellen Sie sicher, dass Sie nur alphanumerische Zeichen im Anwendungsnamen verwenden.\n    \n    :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-app-name.png\" alt-text=\"Anwendungsname eingeben\":::\n\n1. Drücken Sie die **EINGABETASTE**.\n    \n1. Der Workflowbot wird in wenigen Sekunden erstellt, und Sie können das Gerüst sehen.\n    \n    :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-scaffolding1.png\" alt-text=\"Ihre App wird mit dem im Seitenbereich sichtbaren Gerüst erstellt.\":::\n\n1. Wählen Sie in der Visual Studio Code-Seitenleiste das Symbol **Ausführen und Debuggen** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/run-debug-icon.png\"::: aus.\n\n1. Wählen Sie in der Dropdownliste **Debuggen (Edge)** oder **Debuggen (Chrome)** aus.\n\n   :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-local-debug1.png\" alt-text=\"Ihre App wird mit dem im Seitenbereich sichtbaren Gerüst erstellt.\":::    \n\n1. Wählen Sie **Debuggen starten** aus.\n\n1. Klicken Sie auf **Hinzufügen**.\n    :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-add-app.png\" alt-text=\"Wählen Sie Hinzufügen aus, um Ihre Workflow-Bot-App hinzuzufügen.\":::\n### <a name=\"take-tour-of-source-code\"></a>Einführung in den Quellcode\nDas Teams-Toolkit stellt Komponenten zum Erstellen einer App bereit. Nach dem Erstellen des Projekts können Sie die Projektordner und Dateien im Explorer-Bereich von Visual Studio Code für JavaScript/TypeScript anzeigen. \n\n:::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-scaffolding2.png\" alt-text=\"Wählen Sie Hinzufügen aus, um Ihre Workflow-Bot-App hinzuzufügen.\":::\n\n\nDer erstellte Bot ist ein normales TeamsFx-Projekt, das die folgenden Ordner enthält:\n\n| Ordner | Inhalt |\n|   ---  |   ---   |\n|`.fx`   | Einstellungen, Konfigurationen und Umgebungsinformationen auf Projektebene.|\n|`.vscode`| Visual Studio Code-Dateien für lokales Debuggen |\n|`bot`   | Der Quellcode für die Teams-Anwendung des Workflowbots.|\n|`templates`| Vorlagen für das Teams-Anwendungsmanifest und für die Bereitstellung von Azure-Ressourcen.|\n\nDie Kernimplementierung für den Teams-Bot befindet sich im `bot/` Ordner. Die folgenden Dateien unter `bot/` dem Ordner stellen die Geschäftslogik für den Workflowbot bereit.\nDiese Dateien können aktualisiert werden, um ihre Geschäftslogikanforderungen zu erfüllen. Die Standardimplementierung bietet einen Ausgangspunkt für den Einstieg:\n\n| Ordner | Inhalt |\n|   ---  |   ---   |\n|`src/index.js(ts)` | Anwendungseinstiegspunkt und `restify` -handler für den Workflowbot.|\n|`src/adaptiveCards/helloworldCommand.json` | Eine generierte adaptive Karte, die an Teams gesendet wird. |\n|`src/commands/helloworldCommandHandler.js(ts)` | Antwortet auf die Befehlsnachricht.|\n|`src/cardActions/doStuffActionHandler.js(ts)` | Reagiert auf die `doStuff` Kartenaktion.|\n|`src/cardModels.js(ts)` | Das Standarddatenmodell für adaptive Karten.|\n\nDie folgende Datei implementiert den Kernworkflowbot im Bot Framework. Sie müssen diese Datei im Allgemeinen nicht anpassen:\n\n| Datei/Ordner | Inhalt |\n|   ---  |   ---   |\n| `src/internal/initialize.js(ts)`| Anwendungsinitialisierung und Botnachrichtenverarbeitung.|\n\nDie folgenden Dateien sind projektbezogene Dateien, die Sie im Allgemeinen nicht anpassen müssen:\n\n| Datei/Ordner | Inhalt |\n|   ---  |   ---   |\n| `.gitignore` | Git-Datei ignorieren|\n| `package.json` | NPM-Paketdatei|\n"
- title: Interaktion mit dem Workflowbot
  durationInMinutes: 2
  content: "Sie können mit dem Bot in Teams interagieren, indem Sie einen helloWorld-Befehl senden. Nachdem Sie diese Vorlage ausgeführt haben, erhalten Sie eine Antwort, und wählen Sie dann den **Workflowbot** und **die EINGABETASTE** aus.\n :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-action-response.png\" alt-text=\"Wählen Sie Hinzufügen aus, um Ihre Workflow-Bot-App hinzuzufügen.\":::\n\nSie erhalten die folgende Befehlsantwort in Adaptive Karte: :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-debug-output1.png\" alt-text=\"Wählen Sie Hinzufügen aus, um Ihre Workflowbot-App hinzuzufügen\":::.\n\nAnschließend können Sie die Schaltfläche **DoStuff** auswählen, um die Aktion aufzurufen, die mit der folgenden aktualisierten adaptiven Karte antwortet: :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-debug-output2.png\" alt-text=\"Wählen Sie Hinzufügen aus, um Ihre Workflow-Bot-App hinzuzufügen\":::.\n   \n"
- title: Abschließen der Herausforderung
  durationInMinutes: 1
  content: >
    Haben Sie sich so etwas einfallen lassen?


    :::image type="content" source="./assets/images/sbs-workflow-bot/sbs-workflow-bot-debug-output2.png" alt-text="Wählen Sie Hinzufügen aus, um Ihre Workflow-Bot-App hinzuzufügen.":::
- content: Sie haben das Tutorial für die ersten Schritte mit dem Workflowbot für Microsoft Teams abgeschlossen.
