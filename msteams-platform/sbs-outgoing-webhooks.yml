### YamlMime:Tutorial
title: Erstellen ausgehender Webhooks
metadata:
  title: Erstellen ausgehender Webhooks
  description: In diesem Lernprogramm lernen Sie, ausgehende Webhooks für Teams einzurichten.
  audience: Developer
  level: Beginner
  ms.date: 14/01/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: webhooks-and-connectors/how-to/add-outgoing-webhook.md
  nextTutorialTitle: Weitere Informationen zu ausgehenden Webhooks
  ms.custom: mvc
  ms.localizationpriority: High
  ms.openlocfilehash: 0cf221616cb233d69356e1a012de15afc1254070
  ms.sourcegitcommit: 2fdca6fb0ade3f6b460eb9a4dfea0a8e2ab8d3b9
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 03/08/2022
  ms.locfileid: "63360987"
items:
- durationInMinutes: 1
  content: "Webhooks helfen Microsoft Teams bei der Integration in externe Apps. In Teams fungieren die ausgehenden Webhooks als Bot und suchen mithilfe **@mention** nach Nachrichten in Kanälen. Mit den ausgehenden Webhooks können Benutzer Nachrichten an Webdienste senden, ohne den gesamten Prozess der Erstellung von Bots über Microsoft Bot Framework durchzuführen. Die ausgehenden Webhooks posten Daten aus Teams an einen beliebigen Dienst, der JSON-Nutzlast akzeptieren kann. \n\n**Wichtige Features ausgehender Webhooks**\n\n* Senden sie Benachrichtigungen an einen beliebigen externen Webdienst.\n* Antworten Sie mit Rich-Text-Nachrichten, einschließlich Karten und Bildern. \n* Empfangen von Nachrichten in öffentlichen Kanälen und nicht im persönlichen oder privaten Bereich.\n* Senden sie HTTP POST an Webdienst, und rufen Sie die Antwort ab. \n\n > [!NOTE]\n > Die ausgehenden Webhooks können nicht auf andere APIs zugreifen, z. B. auf die Liste oder die Liste der Kanäle in einem Team.\n\nDiese schrittweise Anleitung hilft Ihnen beim Erstellen ausgehender Webhooks in Teams. Die folgende Ausgabe wird angezeigt:\n\n![Bereit](~/assets/images/sbs-outgoing-webhooks/output-result1.png)\n"
- title: Voraussetzungen
  durationInMinutes: 1
  content: "Stellen Sie sicher, dass Sie die folgenden Tools installieren und Ihre Entwicklungsumgebung einrichten:  \n\n* [Microsoft Teams](https://teams.microsoft.com/) mit gültigem Konto\n* [Neueste Version von Visual Studio](https://visualstudio.microsoft.com/downloads/)\n* [ngrok](https://ngrok.com/download) neueste Version (nur für Devbox-Tests) oder eine entsprechende Tunnelinglösung\n\n  > [!NOTE]\n  > Registrieren Sie sich nach dem Herunterladen von ngrok, und installieren Sie [authtoken](https://ngrok.com/download).\n"
- title: Einrichten einer lokalen Umgebung
  durationInMinutes: 1
  content: "Klonen `Microsoft-Teams-Samples` Sie das Repository in Ihrem lokalen GitHub:  \n\n 1. Öffnen [Sie Microsoft Teams Beispiele](https://github.com/OfficeDev/Microsoft-Teams-Samples).\n 1. Wählen Sie **\"Code**\" aus.\n 1. Wählen Sie im Dropdownmenü **\"Öffnen mit GitHub Desktop**\" aus.\n\n    ![Klonen](~/assets/images/sbs-outgoing-webhooks/clone-repository.png)\n\n 1. Wählen Sie **\"Klonen\" aus**. \n"
- title: Erstellen ausgehender Webhooks
  durationInMinutes: 5
  content: "1. Wählen Sie das erforderliche Team aus, und wählen Sie dann im Dropdownmenü (••••) die Option **\"Team verwalten** \" aus.\n\n   ![Verwalten](~/assets/images/sbs-outgoing-webhooks/manage-team.png)\n\n1. Wählen Sie die Registerkarte **\"Apps** \" in der Navigationsleiste aus.\n\n   ![Wahl](~/assets/images/sbs-outgoing-webhooks/app-selection.png)\n\n1. Verwenden Sie ngrok, um einen Tunnel zu den öffentlich verfügbaren HTTPS-Endpunkten Ihres lokal ausgeführten Webservers zu erstellen. Führen Sie den folgenden Befehl in ngrok aus:\n\n    ```bash\n    ngrok http -host-header=localhost 3978\n    ```\n\n1. Wählen Sie in der unteren rechten Ecke des Fensters die Option **\"Ausgehenden Webhook erstellen**\" aus.\n\n   ![Ausgehende](~/assets/images/sbs-outgoing-webhooks/create-outgoing-webhook.png).\n\n1. Geben Sie die folgenden Details ein:\n \n    * **Name**: Der Webhook-Titel auf @mention Registerkarte.\n\n    * **Rückruf-URL**: Die von ngrok generierte URL, die JSON-Nutzlasten akzeptiert und POST-Anforderungen von Teams empfängt. Gehen Sie folgendermaßen vor, um die api/Sample oder api/authenticatedSample zu verwenden:\n\n        * Kopieren und einfügen Sie für api/sample die ngrok-URL, und fügen Sie sie mit /api/sample an.\n\n        * Kopieren und einfügen Sie für ein authentifiziertes Beispiel die ngrok-URL, und fügen Sie sie mit \"/authenticatedSample?id=contoso\" an.\n\n    * **Beschreibung**: Eine detaillierte Zeichenfolge, die auf der Profilkarte und im App-Dashboard auf Teamebene angezeigt wird.\n\n    * **Profilbild (optional):** App-Symbol für Ihren Webhook.\n\n1. Wählen Sie **Erstellen** aus. Der ausgehende Webhook wird dem Kanal des aktuellen Teams hinzugefügt.\n\n    ![Ausgehenden Webhook erstellen](~/assets/images/sbs-outgoing-webhooks/select.png)\n\n1. Ein `Hash-based Message Authentication Code (HMAC)` Dialogfeld wird angezeigt. Sie können das Sicherheitstoken in der Datei **\"AuthProvider.cs**\" verwenden, um Aufrufe zwischen Teams und allen angegebenen externen Diensten zu authentifizieren. \n\n    > [!NOTE]\n    > Der ausgehende Webhook steht den Benutzern des Teams nur zur Verfügung, wenn die URL gültig ist und der Server und die Clientauthentifizierungstoken gleich sind. Beispielsweise ein HMAC-Handshake.\n                \n     ![Code](~/assets/images/sbs-outgoing-webhooks/security-token.png)   \n"
- title: Erstellen und Ausführen des Diensts
  durationInMinutes: 1
  content: "1. Starten Sie die neueste Version von Visual Studio.\n\n1. Navigieren Sie zu **FileOpen** >  >  **Project/Solution**.\n\n    ![Datei öffnen](~/assets/images//sbs-outgoing-webhooks/outgoing-webhooks-VSopenfile.png)\n\n1. Wählen Sie die Datei **\"WebhookSampleBot.sln** \" aus dem Ordner **\"csharp** \" aus.\n\n    ![Lösungsdatei](~/assets/images//sbs-outgoing-webhooks/open-project.png)\n\n1. Aktualisieren Sie \" **contoso\"** in der Datei \" **AuthProvider.cs** \" auf \"M365x712764\" und HMAC.  \n\n    ![aktualisieren](~/assets/images//sbs-outgoing-webhooks/update-hmac2.png)\n\n1. Press **F5** to run the project.\n\n1. Wählen Sie **\"Ja** \" aus, wenn das folgende Dialogfeld angezeigt wird:\n\n    ![Vertrauensstellungszertifikat](~/assets/images//sbs-outgoing-webhooks/outgoing-webhook-certificate.png)\n\n   Eine Webseite zeigt lokale Hostinformationen an.\n\n    ![App bereit](~/assets/images//sbs-outgoing-webhooks/outgoing-webhooks-ready.png)                  \n"
- title: Interagieren mit der App in Teams
  durationInMinutes: 1
  content: "1. Wählen Sie **\"Allgemein** \" aus, um eine neue Unterhaltung zu starten.\n\n1. Wählen Sie **\"Neue Unterhaltung** \" aus, um eine Unterhaltung zu beginnen.\n\n1. **Geben Sie\\@** den Namen des ausgehenden Webhooks ein, um ihn im Kanal aufzurufen. \n\n   ![Nachricht.](~/assets/images/sbs-outgoing-webhooks/type-mention.png)\n\n1. Wählen Sie **\"Senden**\" aus.\n\n   > [!NOTE]\n   >  Sie können adaptive Karten, Herokarten und SMS als Anlage mit ausgehendem Webhook senden.\n\n1. Im Besprechungschat wird eine neue Nachricht angezeigt.\n\n   ![Bereit](~/assets/images/sbs-outgoing-webhooks/output-result.png)\n   \n"
- title: Vollständige Herausforderung
  durationInMinutes: 1
  content: >
    Haben Sie sich so etwas einfallen lassen?

       ![Bereit](~/assets/images/sbs-outgoing-webhooks/output-result1.png)
- content: Sie haben das Lernprogramm abgeschlossen, um mit einer ausgehenden Webhook-App zu beginnen!
