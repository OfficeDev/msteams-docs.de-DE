### YamlMime:Tutorial
title: Einmaliges Anmelden (Single Sign-On, SSO) für Registerkarten und Messaging-Erweiterungen
metadata:
  title: Einmaliges Anmelden (Single Sign-On, SSO) für Registerkarten und Messaging-Erweiterungen
  description: In diesem Lernprogramm erfahren Sie, wie Sie SSO für Registerkarten einrichten.
  audience: Developer
  level: Beginner
  ms.date: 12/07/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: tabs/how-to/authentication/auth-aad-sso.md
  nextTutorialTitle: Weitere Informationen zur SSO-Authentifizierung für Registerkarten.
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 2abe61103fee1f5d9db79965cd6950b08d4d8614
  ms.sourcegitcommit: a2d7d2bdf4b056b35f29c6fdb315bc7dc28b6f6f
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 12/20/2021
  ms.locfileid: "61569891"
items:
- durationInMinutes: 1
  content: "Das einmalige Anmelden (Single Sign-On, SSO) hilft bei der Autorisierung Teams Registerkarte für Desktop- oder mobile Clients. Dies verbessert die Benutzererfahrung, indem sie sich automatisch mehrmals und auch auf anderen Geräten anmeldet, ohne erneut Anmeldeinformationen einzugeben.\n\n**Wichtige Features von SSO für Registerkarten und Messaging-Erweiterungen**\n\n * Ermöglicht es dem Benutzer, sich automatisch anzumelden.\n * Aufrufe Graph APIs zum Anzeigen des Benutzerprofils.\n * Ruft das Zugriffstoken für den angemeldeten Benutzer mithilfe von SSO ab.\n * Ruft den Webdienst zum Austauschen des Zugriffstokens auf.\n * Zeigt die Profilkarte des Benutzers in der Messaging-Erweiterung an.    \n\nDiese schrittweise Anleitung hilft Ihnen beim Erstellen von Registerkarten und Messaging-Erweiterungen mit aktivierter SSO-Authentifizierung. Die folgende Ausgabe wird angezeigt:\n\n  ![Abbildung zum Herzlichen Glückwunsch](~/assets/images/Tab-ME-SSO/hello-megan-profile245.png)   \n"
- title: Voraussetzungen
  durationInMinutes: 1
  content: "Stellen Sie sicher, dass Sie die folgenden Tools installieren und Ihre Entwicklungsumgebung einrichten:  \n\n* Microsoft Teams mit einem Konto (kein Gastkonto)\n* [.NET Core SDK](https://dotnet.microsoft.com/download) Version 3.1\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)\n* [ngrok](https://ngrok.com/download) neueste Version (nur für Devbox-Tests) oder eine entsprechende Tunnelinglösung\n* [Microsoft 365 Entwicklerkonto](https://docs.microsoft.com/en-us/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) oder Zugriff auf Teams Konto mit den entsprechenden Berechtigungen zum Installieren einer App\n"
- title: Einrichten einer lokalen Umgebung
  durationInMinutes: 1
  content: "Klonen Sie `Microsoft-Teams-Samples` das Repository in Ihrem lokalen GitHub:  \n\n 1. Öffnen [Sie Microsoft Teams Beispiele.](https://github.com/OfficeDev/Microsoft-Teams-Samples)\n 1. Wählen Sie **Code** aus.\n 1. Wählen Sie im Dropdownmenü **\"Öffnen mit GitHub Desktop\"** aus.\n\n    ![Klon-Repository](~/assets/images/meeting-token-generator/meeting-token-generator-clonerepository.png)\n\n 1. Wählen Sie **\"Klonen\" aus.** \n"
- title: Erstellen und Registrieren Ihres Bots im AAD Portal
  durationInMinutes: 5
  content: "Die folgenden Schritte führen Sie durch:\n\n* Erstellen Sie eine Azure Bot-Ressource, um den Bot beim Azure Bot Service zu registrieren.\n* Erstellen Sie einen geheimen Clientschlüssel, der die SSO-Authentifizierung des Bots ermöglicht.\n* Fügen Sie Microsoft Teams Kanal hinzu, um den Bot in einem Teams Kanal bereitzustellen.\n* Verwenden Sie ngrok, um einen Tunnel zu den Endpunkten Ihres Webservers zu erstellen.\n* Fügen Sie dem ngrok-Tunnel, den Sie erstellt haben, einen Messaging-Endpunkt hinzu.\n\n**So erstellen Sie eine Azure Bot-Ressource**\n\n1. Gehen Sie zum [Azure-Portal](https://portal.azure.com/).\n1. Wählen Sie **Ressource erstellen** aus.\n1. Geben Sie in das Suchfeld **Azure Bot** ein.\n1. Drücken Sie **die EINGABETASTE.**\n1. Wählen Sie **Azure Bot** aus.\n\n     ![Erstellen einer Azure-Botkarte](~/assets/images/bots/createazurebot.png)\n\n1. Wählen Sie **Erstellen** aus.\n1. Geben Sie den erforderlichen Bot-Handlenamen in **bot handle** ein.\n1. Wählen Sie in der Dropdownliste **\"Abonnement\"** die Option **\"msteams.nonprod.pub.msft.aplt\"** aus.\n1. Wählen Sie in der Dropdownliste **\"Ressourcengruppe\"** Ihre vorhandene Ressourcengruppe aus. Sie können auch eine neue Ressourcengruppe erstellen (wählen Sie **\"Erstellen neuer** > Geben Sie den Ressourcennamen ein > klicken Sie auf **\"OK\").**\n\n    ![Registrieren eines Bots](~/assets/images/Tab-ME-SSO/register-bot.png)\n\n1. Im Abschnitt **\"Microsoft App ID\"** ist standardmäßig **\"Neue Microsoft App-ID erstellen\"** ausgewählt. \n\n   Wählen Sie **\"Vorhandene App-Registrierung verwenden\"** aus, und geben Sie **vorhandene App-ID** und **vorhandenes App-Kennwort** für eine vorhandene Anwendung ein. Wählen **Sie \"Neue Microsoft App-ID** für eine neue Anwendung erstellen\" aus.\n\n   > [!NOTE]\n   > Sie können nicht mehr als einen Bot mit derselben **Microsoft App-ID** erstellen.\n\n1. Wählen Sie **Überprüfen + erstellen** aus.\n\n   ![Registrieren eines Bots](~/assets/images/Tab-ME-SSO/register-bot-2.png)\n\n1. Wenn die Überprüfung erfolgreich ist, wählen Sie **Erstellen** aus.\n\n    Es dauert ein paar Minuten, bis Ihr Bot-Dienst bereitgestellt wurde.\n\n1. Wählen Sie **Zu Ressource wechseln** aus. \n\n    ![Bereitstellen der App](~/assets/images/Tab-ME-SSO/go-to-resource.png)\n\n    Ihr Azure-Bot wird erstellt.\n\n    ![Bereitstellen der App](~/assets/images/Tab-ME-SSO/app-overview.png)\n\n**So erstellen Sie einen geheimen Clientschlüssel**\n\n  Führen Sie die folgenden Schritte aus, wenn Sie eine neue **Microsoft App-ID** erstellt haben:\n\n1. Wählen Sie im linken Bereich **\"Konfiguration\"** aus. \n\n   > [!TIP]\n   > Speichern Sie die **Microsoft App-ID** oder **Client-ID** für zukünftige Verweise.\n\n1. Wählen Sie neben **der Microsoft App-ID** die Option **\"Verwalten\"** aus.\n\n    ![Microsoft-App-ID](~/assets/images/Tab-ME-SSO/manage1.png)\n\n1. Wählen Sie im Abschnitt **\"Geheime Clientschlüssel\"** die Option **\"Neuer geheimer Clientschlüssel\" aus.** \n\n    ![Neuer geheimer Clientschlüssel](~/assets/images/meeting-token-generator/meeting-token-generator-newclientsecret.png)\n\n   Das Fenster **\"Geheimen Clientschlüssel hinzufügen\"** wird angezeigt.  \n\n1. Geben Sie **Beschreibung** ein.\n\n1. Klicken Sie auf **Hinzufügen**.\n\n    ![Hinzufügen eines geheimen Clientschlüssels zur App](~/assets/images/Tab-ME-SSO/add-client-id.png)\n\n1. Wählen Sie in der Spalte **Wert** die Option **\"In Zwischenablage kopieren\"** aus.\n\n     ![Wert des geheimen Clientschlüssels](~/assets/images/Tab-ME-SSO/client-ids.png)\n   \n   > [!TIP]\n   > Speichern Sie den Wert für **geheime Clientschlüssel** oder das App-Kennwort für zukünftige Verweise.\n\n**So fügen Sie den Microsoft Teams Kanal hinzu**\n\n1. Wählen Sie **\"Start\"** aus.\n\n    ![Startseite](~/assets/images/Tab-ME-SSO/home.png)\n\n1. Wählen Sie Ihren Bot aus **den zuletzt verwendeten Ressourcen** aus.\n\n1. Wählen Sie im linken Bereich **Kanäle** aus. \n\n1. Auswählen **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. Aktivieren Sie das Kontrollkästchen, um die **Nutzungsbedingungen** zu akzeptieren.\n\n1. Wählen Sie **\"Zustimmen\" aus.**\n\n      ![Nutzungsbedingungen](~/assets/images/meeting-token-generator/meeting-token-generator-terms.png)\n\n1. Wählen Sie **Speichern**.\n\n      ![Auswählen Teams](~/assets/images/meeting-token-generator/meeting-token-generator-config-teams.png)   \n\n**So erstellen Sie einen Tunnel für lokalen Webserver**\n\nVerwenden Sie ngrok, um einen Tunnel zu den öffentlich verfügbaren HTTPS-Endpunkten Ihres lokal ausgeführten Webservers zu erstellen. Führen Sie den folgenden Befehl in ngrok aus:\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n**So fügen Sie einen Messaging-Endpunkt hinzu**\n\n1. Kopieren Sie von ngrok die HTTPS-URL (https zu io).\n\n    ![ngrok HTTPS-URL](~/assets/images/Tab-ME-SSO/ngrok-image.png)\n\n    > [!NOTE]\n    > Die HTTPS-URL in Ihrem ngrok ist Ihr vollqualifizierte Domänenname.\n    > Es handelt sich `WebAppDomain` um einen vollqualifizierten Domänennamen, der nicht darin enthalten `https://` ist.\n\n1. Wählen Sie **in Einstellungen** für den azure-Bot, den Sie erstellt haben, die Option **\"Konfiguration\"** aus.\n\n1. Verwenden Sie im **Messaging-Endpunkt** die HTTPS-URL, die über ngrok verfügbar ist, und fügen Sie am Ende der URL **/api/messages** hinzu.\n\n    ![Messaging-Endpunkt](~/assets/images/Tab-ME-SSO/messaging-endpoint.png)\n\n1. Wählen Sie **Anwenden** aus.\n\n    Sie haben erfolgreich einen Bot im Azure Bot Service eingerichtet.\n"
- title: Konfigurieren von SSO für Ihre Registerkarte
  durationInMinutes: 1
  content: "**So registrieren Sie Ihre App über das AAD Portal**  \n\n1. Gehen Sie zum [Azure-Portal](https://portal.azure.com/).\n\n1. Wählen Sie **Azure Active Directory** aus.\n\n1. Wählen Sie im linken Bereich **App-Registrierungen aus.**\n\n1. Wählen Sie Ihren Bot aus.\n\n1. Wählen Sie **\"API verfügbar machen\" aus.**\n\n1. Wählen Sie **\"Festlegen\" aus.**\n\n   ![Bereitstellen einer API](~/assets/images/Tab-ME-SSO/application-id-set.png)\n\n1. Legen Sie den **Anwendungs-ID-URI** in Form von `api://botid-{AppID}` fest.\n\n   ![Link festlegen](~/assets/images/Tab-ME-SSO/appid-uri1.png)\n    \n1. Wählen Sie **Bereich hinzufügen**. \n\n1. Geben Sie im angezeigten Bereich `access_as_user` den **Bereichsnamen** ein.\n\n1. Set **Wer can consent?** to `Admins and users` .\n\n1. Um die Aufforderungen zur Administrator- und Benutzerzustimmung mit den entsprechenden Werten für den Bereich zu `access_as_user` konfigurieren, geben Sie die folgenden Informationen in den Feldern an:</br>\n\n   * Geben Sie als Anzeigename der `Teams can access the user’s profile` **Administratorzustimmung** ein.\n\n   * Geben Sie `Allows Teams to call the app’s web APIs as the current user` eine Beschreibung der **Administratorzustimmung ein.**\n\n   * Geben Sie `Teams can access the user profile and make requests on the user’s behalf` den Anzeigenamen der **Zustimmung des Benutzers ein.**\n\n   * Geben Sie `Enable Teams to call this app’s APIs with the same rights as the user` eine Beschreibung der **Benutzergenehmigung ein.**\n\n1. Stellen Sie sicher, **Zustand** auf **Aktiviert** festgelegt ist.\n\n1. Wählen Sie **\"Bereich** hinzufügen\" aus, der gespeichert werden soll.\n\n   ![Scopes](~/assets/images/Tab-ME-SSO/add-a-scope.png)\n\n    > [!NOTE]\n    > Der **Bereichsname** sollte mit dem **Anwendungs-ID-URI** übereinstimmen, `/access_as_user` der am Ende angefügt ist.</br>\n       `api://botid-00000000-0000-0000-0000-000000000000/access_as_user`\n\n      ![Scopes](~/assets/images/Tab-ME-SSO/add-a-scope-final1.png) \n\n1. Identifizieren Sie im Abschnitt **\"Autorisierte Clientanwendungen\"** die Anwendungen, die Sie für die Webanwendung Ihrer App autorisieren möchten. \n\n1. Wählen Sie **\"Clientanwendung hinzufügen\"** aus. \n\n1. Geben Sie jede der folgenden Client-IDs ein, und wählen Sie den autorisierten Bereich aus:</br>\n\n     * `1fec8e78-bce4-4aaf-ab1b-5451cc387264`(Teams Mobile- oder Desktopanwendung)\n\n       ![Hinzufügen einer Clientanwendung](~/assets/images/Tab-ME-SSO/add-client-application.png) \n\n     * `5e3ce6c0-2b1f-4285-8d4b-75ee78787346`(Teams Webanwendung)\n\n       ![Hinzufügen einer Clientanwendung](~/assets/images/Tab-ME-SSO/add-client-application21.png) \n    \n\n   In der folgenden Abbildung wird die **Client-ID** angezeigt:\n\n     ![Clientanwendungen](~/assets/images/Tab-ME-SSO/client-id-2.png) \n\n1. Wählen Sie im linken Bereich **API-Berechtigungen aus.** \n\n   > [!NOTE]\n   > Benutzer müssen diesen Berechtigungen nur zustimmen, wenn die AAD-App in einem anderen Mandanten registriert ist.\n\n1. Wählen Sie **Berechtigung hinzufügen** aus.\n\n1. Wählen Sie **Microsoft Graph** aus.\n\n   ![Microsoft Graph](~/assets/images/Tab-ME-SSO/microsoft-graph.png)\n\n1. Wählen Sie **Delegierte Berechtigungen** aus.\n\n   Standardmäßig ist **User.Read** ausgewählt.\n\n   ![Benutzer](~/assets/images/meeting-token-generator/meeting-token-generator-userpermission.png)\n\n1. Fügen Sie die folgenden Berechtigungen hinzu:</br>\n    * **email**\n    * **offline_access**\n    * **Openid**\n    * **profile**\n\n\n1. Wählen Sie **Berechtigungen hinzufügen** aus.\n\n1. Wählen Sie im linken Bereich **\"Authentifizierung\"** aus, um einen Umleitungs-URI festzulegen. \n\n   > [!NOTE]\n   > Wenn einer App keine Zustimmung des IT-Administrators erteilt wird, müssen Benutzer die Zustimmung erteilen, wenn sie eine App zum ersten Mal verwenden.\n           \n     1. Wählen Sie **\"Plattform hinzufügen\"** aus.\n     1. Klicken Sie auf **Web**.\n\n        ![Netz](~/assets/images/Tab-ME-SSO/configure-platform1.png)\n\n     1. Geben Sie **Umleitungs-URIs** als `https://token.botframework.com/.auth/web/redirect` .\n\n     1. Aktivieren Sie **implizite Genehmigungen und Hybridflüsse,** indem Sie die folgenden Kontrollkästchen aktivieren:\n         * **ID-Token**\n         * **Zugriffstoken**\n\n     1. Wählen Sie **\"Konfigurieren\" aus.**\n\n        ![Konfigurieren des Webs](~/assets/images/Tab-ME-SSO/configure-web.png)\n\n**So aktualisieren Sie das Manifest**\n\n1. Wählen  Sie im linken Bereich Manifest aus.\n\n1. Stellen Sie sicher, dass das Konfigurationselement auf **\"accessTokenAcceptedVersion\" festgelegt ist: 2**. Wenn nicht, ändern Sie den Wert auf **2,** und wählen Sie **Speichern** aus. \n\n   > [!Tip]\n   > Wenn Sie Ihren Bot bereits in Teams testen, müssen Sie sich vom Bot abmelden und sich von Teams abmelden. Melden Sie sich dann erneut an, um diese Änderung zu sehen.\n\n   ![Updatemanifest](~/assets/images/bots/update-manifest.png)</br>\n\n**So richten Sie eine Bot-Dienstverbindung ein**\n\n1. Wechseln Sie zur **Seite \"Konfiguration\"**  >  **OAuth-Verbindung Einstellungen hinzufügen.**\n\n1. Wählen **Sie OAuth-Verbindung hinzufügen Einstellungen** aus.\n\n1. Geben Sie unter **\"Neue Verbindungseinstellung\"** die folgenden Details ein:\n\n    | Feld | Wert oder Beschreibung |\n    | ----- | ----- |\n    | **Name** | Geben Sie den Namen für die neue Verbindungseinstellung ein. Sie können den Namen in den Einstellungen Ihres Bot-Dienstcodes verwenden. |\n    | **Service Provider** | Wählen Sie **Azure Active Directory V2 aus.** |\n    | **Client-ID** | Zuvor als **Microsoft-App-ID** gespeichert. |\n    | **Geheimer Clientschlüssel** | Zuvor als **Wert** der geheimen Clientschlüssel-ID gespeichert. |\n    | **Token-Exchange-URL** | Verwenden Sie den zuvor beim Verfügbarmachen des API-Endpunkts abgerufenen **Anwendungs-ID-URI.** |\n    | **Mandanten-ID** | Geben Sie **allgemeine**. |\n    | **Scopes** | Geben Sie **User.Read** ein, und fügen Sie alle ausgewählten **Bereiche** hinzu, während Sie Berechtigungen für downstream-APIs angeben. |\n\n1. Wählen Sie **Speichern**.\n\n    <img src=\"~/assets/images/Tab-ME-SSO/new-connection-setting.png\" alt=\"Bot Service connection\" width=\"300\"/>\n"
- title: Einrichten von App-Einstellungen
  durationInMinutes: 1
  content: "1. Navigieren Sie zu **\"appsettings.json\"** im geklonten Repository.\n\n    ![Speicherort der App-Einstellungen](~/assets/images/Tab-ME-SSO/app-setting-folder.png)\n\n1. Öffnen Sie **\"appsettings.json\"** in **Visual Studio Code,** und aktualisieren Sie die folgenden Informationen:  \n\n     * Legen Sie `\"MicrosoftAppId\"` die **Microsoft App-ID** Ihres Bots fest.\n     * Legen Sie `\"MicrosoftAppPassword\"` den Wert für den geheimen Clientschlüssel Ihres Bots fest.\n     * Legen Sie `\"DOMAIN-NAME\"` ihre ngrok-URL fest.\n     * Legen Sie `\"ConnectionName\"` den Namen der OAuth-Verbindungseinstellung fest.\n     * Legen Sie `\"ClientId\"` die **Microsoft App-ID** Ihres Bots fest.\n     * Legen Sie `\"AppSecret\"` den Wert für den geheimen Clientschlüssel Ihres Bots fest.\n     * Festgelegt `\"ApplicationIdURI\"` in Form von `api://584f****.ngrok.io/botid-{AppID}` .\n\n    ![App-Einstellungen](~/assets/images/Tab-ME-SSO/app-setting1.png)\n"
- title: Einrichten der Manifestdatei
  durationInMinutes: 1
  content: "1. Navigieren Sie zu **\"manifest.json\"** im geklonten Repository.\n\n    ![Speicherort der Manifestdatei](~/assets/images/Tab-ME-SSO/folder-manifest.png)\n\n1. Öffnen Sie **\"manifest.json\"** in **Visual Studio Code,** und nehmen Sie die folgenden Änderungen vor:\n\n     * Ersetzen Sie alle Vorkommen von `[DOMAIN-NAME]` durch Ihren ngrok-Domänennamen. \n     * Ersetzen Sie alle Vorkommen durch die `[YOUR-MICROSOFT-APP-ID]` **Microsoft App-ID** Ihres Bots.\n\n         > [!NOTE]\n         > Je nach Szenario `[YOUR-MICROSOFT-APP-ID]` und `[DOMAIN-NAME]` kann mehrmals auftreten.\n\n     * Festgelegt `\"resource\"` als `api://584f****.ngrok.io/botid-{AppID}` .</br>\n    \n    ![Manifestbild2](~/assets/images/Tab-ME-SSO/vs-manifest.png)\n"
- title: Erstellen und Ausführen des Diensts
  durationInMinutes: 1
  content: "**So erstellen Und führen Sie den Dienst mit Visual Studio 2019 oder der Befehlszeile aus**\n\n# <a name=\"visual-studio-2019\"></a>[Visual Studio 2019](#tab/vs2019)\n\n   1. Starten Sie **Visual Studio 2019.**\n   1. Navigieren Sie zu **Datei**  >  **öffnen**  >  **Project/Lösung**.\n\n      ![Datei öffnen](~/assets/images/Tab-ME-SSO/open-project1.png)\n\n   1. Wählen Sie die Datei **\"App SSO Sample.csproj\"** aus dem Ordner **\"csharp\"** aus.\n\n      ![Project Ordner](~/assets/images/Tab-ME-SSO/project-folder1.png)\n\n   1. Die folgende Ausgabe wird angezeigt:\n\n      ![Tokendatei](~/assets/images/Tab-ME-SSO/output1.png)\n\n   1. Press **F5** to run the project.\n\n   1. Wählen Sie **\"Ja\"** aus, wenn das folgende Dialogfeld angezeigt wird:\n\n      ![Vertrauensstellungszertifikat](~/assets/images/Tab-ME-SSO/certificate.png)\n\n      Eine Webseite wird mit einer Meldung geöffnet, dass **Ihr Bot bereit ist!**\n\n      ![App bereit](~/assets/images/Tab-ME-SSO/bot-completion-explorer.png) \n\n    \n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cli)\n\nNavigieren Sie in einem Eingabeaufforderungsfenster zum **Csharp-Ordner,** und geben Sie den folgenden Befehl ein:\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Tab-ME-SSO/dotnet-run1.png)\n  \n"
- title: Hochladen SSO-App zum Teams
  durationInMinutes: 1
  content: "**So führen Sie Teams App durch Hochladen der manifest.zip-Datei aus**\n\n1. Navigieren Sie in Ihrem geklonten Repository zu **csharp > App-SSO-Beispiel > TeamsAppManifest**.\n\n1. Erstellen Sie eine .zip mit den folgenden Dateien, die im **Manifestordner** vorhanden sind: \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![ZIP-Datei auswählen](~/assets/images/Tab-ME-SSO/upload-tab-me-sso.png)\n\n1. Wechseln Sie zu **Microsoft Teams**.\n\n1. Wählen Sie **Store** aus.\n1. Wählen Sie **\"Apps verwalten\"** aus.\n1. Wählen Sie **\"App veröffentlichen\"** aus.\n\n   ![Dotnet](~/assets/images/Tab-ME-SSO/publish-an-app.png)\n\n1. Wählen Sie **Hochladen einer benutzerdefinierten App** aus. \n\n   ![Hochladen benutzerdefinierte App](~/assets/images/Tab-ME-SSO/upload-custom-app.png)\n\n1. Wählen Sie **\"Öffnen\"** aus, um die .zip Datei hochzuladen, die Sie im **Manifestordner** erstellt haben.\n\n   ![ZIP-Datei auswählen](~/assets/images/Tab-ME-SSO/upload-tab-me-sso-open.png)\n\n1. Klicken Sie auf **Hinzufügen**.\n\n   ![Hinzufügen der App](~/assets/images/Tab-ME-SSO/add-sso-app.png)\n\n1. Senden Sie eine Nachricht an den Bot. \n1. Der Bot führt das einmalige Anmelden durch und zeigt die Profilkarte zusammen mit der Optionsaufforderung zum Anzeigen des Tokens an.\n\n   ![Profilkarte](~/assets/images/Tab-ME-SSO/Congratulation-image.png)\n\n1. Wählen Sie **\"Ja\"** aus, um das Token anzuzeigen, oder **\"Nein\",** um mit dem Chat fortzufahren.\n  \n   ![Tokenansicht](~/assets/images/Tab-ME-SSO/token-view1.png)\n\n  1. Wenn SSO nicht ausgeführt wird, führt der Bot die Standardauthentifizierungsmethode für Ihre Registerkarte aus.\n\n      ![Kein SSO](~/assets/images/Tab-ME-SSO/not-login11.png)\n\n  1. Wählen Sie Ellipsen **...** aus, um die Messaging-Erweiterung zu öffnen.\n\n      ![Messaging-Erweiterung](~/assets/images/Tab-ME-SSO/message-extension.png)\n  \n  1. Wählen Sie Ihre neue SSO-Anwendung aus.\n\n      ![SSO-App](~/assets/images/Tab-ME-SSO/recent-app-sso.png)\n\n  1. Wählen Sie **\"Anmelden\"** aus.\n\n      ![Anmelden](~/assets/images/Tab-ME-SSO/sign-in-sso1.png)\n\n  1. Geben Sie Ihre Anmeldeinformationen in das Anmeldefeld ein, und wählen Sie **\"Weiter\"** aus.\n\n      ![Anmeldefeld](~/assets/images/Tab-ME-SSO/sign-in-box.png)\n  \n  1. Wählen Sie **Annehmen** aus.\n\n      ![Zustimmungsfeld](~/assets/images/Tab-ME-SSO/concent-box.png)\n\n  1. Öffnen Sie die Messaging-Erweiterung, und wählen Sie Ihre Anwendung aus.\n\n  1. Wählen Sie Ihr Profil unter dem Suchfeld aus. Folgendes wird angezeigt:\n\n      ![Profil](~/assets/images/Tab-ME-SSO/hello-megan-profile.png)\n\n  1. Senden Sie `https://profile.botframework.com` an die Anwendung, um eine Profilkarte abzurufen.\n   \n      ![Profilkarte](~/assets/images/Tab-ME-SSO/profile-card.png)\n"
- title: Vollständige Herausforderung
  durationInMinutes: 1
  content: >
    Haben Sie sich so etwas einfallen lassen?

       ![SSO-Profil](~/assets/images/Tab-ME-SSO/hello-megan-profile245.png)
- content: Sie haben das Lernprogramm abgeschlossen, um mit SSO für die Registerkarten- und Messaging-Erweiterungs-App zu beginnen.
