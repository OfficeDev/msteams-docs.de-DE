### YamlMime:Tutorial
title: Aufrufen von Aufgabenmodulen aus Microsoft Teams
metadata:
  title: Aufrufen von Aufgabenmodulen aus Microsoft Teams
  description: In diesem Lernprogramm erfahren Sie, wie Sie Teams Aufgabenmodul einrichten.
  audience: Developer
  level: Beginner
  ms.date: 23/02/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: task-modules-and-cards/task-modules/task-modules-bots.md
  nextTutorialTitle: Weitere Informationen zu Aufgabenmodulen von Bots
  ms.custom: mvc
  ms.localizationpriority: High
  ms.openlocfilehash: e8fbca1a0d37c7df3e3e6b4abde68032bc4fc9be
  ms.sourcegitcommit: 61003a14e8a179e1268bbdbd9cf5e904c5259566
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 04/09/2022
  ms.locfileid: "64737031"
items:
- durationInMinutes: 1
  content: >
    Sie können Aufgabenmodule aus Teams Bots aufrufen, indem Sie adaptive Karten oder Bot Framework-Karten verwenden.


    **Wichtige Merkmale von Aufgabenmodulen**


    * Verbessern Sie die Benutzerfreundlichkeit, indem Sie mehrere Schritte vermeiden.

    * Helfen Sie Benutzern, den Botstatus nachzuverfolgen.

    * Abrufen von Eingaben von Benutzern und Anzeigen von benutzerdefinierten Webseiteninhalten.


    Diese schrittweise Anleitung hilft Ihnen beim Erstellen eines Beispiel-Azure-Bots zum Aufrufen Teams Aufgabenmoduls. Die folgende Ausgabe wird angezeigt:

     ![Aufgabenmodul](~/assets/images/Teams-task-module/final_image.png)
- title: Voraussetzungen
  durationInMinutes: 1
  content: "Stellen Sie sicher, dass Sie die folgenden Tools installieren und Ihre Entwicklungsumgebung einrichten: \n\n* [Microsoft Teams](https://teams.microsoft.com/) mit gültigem Konto\n* [.NET Core SDK](https://dotnet.microsoft.com/download) , Version 3.1\n* [Neueste Version von Microsoft Visual Studio](https://visualstudio.microsoft.com/downloads/)\n* [Neueste ngrok-Version](https://ngrok.com/download) oder eine gleichwertige Tunnellösung\n\n  > [!NOTE]\n  > Melden Sie sich nach dem Herunterladen von ngrok an, und installieren Sie [authtoken](https://ngrok.com/download).\n"
- title: Einrichten einer lokalen Umgebung
  durationInMinutes: 1
  content: "Klonen Sie `BotBuilder-Samples` das Repository in Ihre lokale GitHub:  \n\n 1. Öffnen Sie [BotBuilder-Beispiele](https://github.com/microsoft/BotBuilder-Samples).\n 1. Wählen Sie **\"Code**\" aus.\n 1. Wählen Sie im Dropdownmenü \"**Mit GitHub Desktop öffnen**\" aus.\n\n    ![Klonrepository](~/assets/images/Teams-task-module/clonerepository.png)\n\n 1. Wählen Sie **\"Klonen**\" aus. \n"
- title: Erstellen und Registrieren Ihres Bots in Azure AD Portal
  durationInMinutes: 5
  content: "Führen Sie die folgenden Schritte aus, um Ihren Bot in Microsoft Azure Active Directory (Azure AD) zu erstellen und zu registrieren, einen Tunnel mithilfe von ngrok zu erstellen und den Messaging-Endpunkt hinzuzufügen:\n\n* Erstellen Sie eine Azure Bot-Ressource, um den Bot bei Azure Bot Service zu registrieren.\n* Erstellen Sie einen geheimen Clientschlüssel, um die SSO-Authentifizierung des Bots zu aktivieren.\n* Fügen Sie Teams Kanal hinzu, um den Bot in einem Teams Kanal bereitzustellen.\n* Verwenden Sie ngrok, um einen Tunnel zu den Endpunkten Ihres Webservers zu erstellen.\n* Fügen Sie dem von Ihnen erstellten ngrok-Tunnel den Messaging-Endpunkt hinzu.\n\n**So erstellen Sie eine Azure Bot-Ressource**\n\n1. Wechseln Sie zum [Microsoft Azure Portal](https://portal.azure.com/).\n1. Wählen Sie **Ressource erstellen** aus.\n1. Geben Sie in das Suchfeld **Azure Bot ein**.\n1. Wählen Sie **die EINGABETASTE** aus.\n1. Wählen Sie **Azure Bot** aus.\n\n     ![Erstellen einer Azure-Bot-Karte](~/assets/images/bots/createazurebot.png)\n\n1. Wählen Sie **Erstellen** aus.\n1. Geben Sie den Namen des erforderlichen Bot-Handle in **das Bot-Handle ein**.\n1. Wählen Sie Ihr **Abonnement** aus der Dropdownliste aus.\n1. Wählen Sie Ihre **Ressourcengruppe** aus der Dropdownliste aus. \n\n    ![Azure-Bot-Ressource auswählen](~/assets/images/Teams-task-module/review-plus-create.png) \n\n   Sie können auch eine neue Ressourcengruppe erstellen (wählen Sie **\"Neue** > Geben Sie den Ressourcennamen ein, > klicken Sie auf **\"OK**\").\n\n1. Wenn Sie eine neue Ressourcengruppe erstellt haben, wählen Sie den erforderlichen Speicherort aus der Dropdownliste \" **Speicherort der neuen Ressourcengruppe** \" aus.\n\n    ![Speicherort der neuen Ressourcengruppe](~/assets/images/meetings-side-panel/newresource.png)\n\n1. Im Abschnitt **\"Microsoft-App-ID** \" ist standardmäßig \" **Neue Microsoft-App-ID erstellen** \" ausgewählt. \n\n   Sie können entweder \" **Vorhandene App-Registrierung verwenden\"** und \" **Vorhandene App-ID** und **vorhandenes App-Kennwort**\" eingeben oder \" **Neue Microsoft-App-ID erstellen\"** auswählen.\n\n   > [!NOTE]\n   > Sie können nicht mehr als einen Bot mit derselben **Microsoft App-ID** erstellen.\n\n1. Wählen Sie unter \"Bottyp\" die Option \" **MultiTenant** \" aus.\n\n    ![Microsoft App-ID](~/assets/images/Teams-task-module/config.png)\n\n1. Wählen Sie **Überprüfen + erstellen** aus.\n\n    ![Erstellen der Microsoft App-ID](~/assets/images/meeting-token-generator/meeting-token-generator-appidcreate.png)\n\n1. Wenn die Überprüfung erfolgreich ist, wählen Sie **\"Erstellen\"** aus. \n\n    Es dauert ein paar Minuten, bis Ihr Bot-Dienst bereitgestellt wird. \n\n1. Wählen Sie **Zu Ressource wechseln** aus. \n\n    ![Bereitstellen der App](~/assets/images/Teams-task-module/botdeployment.png)\n\n    Ihr Azure-Bot wird erstellt.\n\n    ![Azure-Bot-Ressource erstellt](~/assets/images/Teams-task-module/bot-page.png)\n\n**So erstellen Sie den geheimen Clientschlüssel**\n\n  Führen Sie die folgenden Schritte aus, wenn Sie eine neue **Microsoft App-ID** erstellt haben:\n\n1. Wählen Sie im linken Bereich **\"Konfiguration**\" aus. \n\n   > [!TIP]\n   > Speichern Sie die **Microsoft App-ID** oder **Client-ID** zur zukünftigen Referenz.\n\n1. Wählen Sie neben **\"Microsoft-App-ID**\" die Option **\"Verwalten\"** aus.\n\n1. Wählen Sie im Abschnitt \" **Geheime Clientschlüssel** \" die Option **\"Neuer geheimer Clientschlüssel**\" aus. \n\n    ![Neuer geheimer Clientschlüssel](~/assets/images/meetings-side-panel/newclientsecret.png)\n\n   Das Fenster **\"Geheimen Clientschlüssel hinzufügen** \" wird angezeigt.  \n\n1. Geben Sie **\"Beschreibung**\" ein.\n\n1. Klicken Sie auf **Hinzufügen**.\n\n    ![Hinzufügen eines geheimen Clientschlüssels zur App](~/assets/images/Teams-task-module/clientsecret.png)\n\n1. Wählen Sie in der Spalte **\"Wert** \" **die Option \"In Zwischenablage kopieren\"** aus.\n\n     ![Wert des geheimen Clientschlüssels](~/assets/images/Teams-task-module/clientvalue.png)\n   \n   > [!TIP]\n   > Speichern Sie den Wert für **geheime Clientschlüssel** oder das App-Kennwort zur zukünftigen Referenz.\n\n**So fügen Sie den Teams-Kanal hinzu**\n\n1. Wählen Sie **Start** aus.\n\n    ![Startseite](~/assets/images/Teams-task-module/gotohome.png)\n\n1. Wählen Sie Ihren Bot aus **den zuletzt verwendeten Ressourcen** aus.\n\n1. Wählen Sie \" **Kanäle** \" im linken Bereich aus. \n\n1. Wählen Sie **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. Aktivieren Sie das Kontrollkästchen, um die **Nutzungsbedingungen** zu akzeptieren.\n\n1. Wählen Sie **\"Zustimmen\"** aus.\n\n      ![Nutzungsbedingungen](~/assets/images/meetings-side-panel/terms.png)\n\n1. Klicken Sie auf **Speichern**.\n\n      ![Wählen Sie Teams](~/assets/images/Teams-task-module/configteams.png)   \n\n**So erstellen Sie einen Tunnel für den lokalen Webserver**\n\nVerwenden Sie ngrok, um einen Tunnel zu den öffentlich verfügbaren HTTPS-Endpunkten Ihres lokal ausgeführten Webservers zu erstellen. Führen Sie den folgenden Befehl in ngrok aus:\n\n ```bash\n ngrok http -host-header=rewrite 3978\n ```\n\n> [!TIP]\n> Wenn **ERR_NGROK_4018** auftreten, führen Sie die in der Eingabeaufforderung angegebenen Schritte aus, um ngrok zu registrieren und zu authentifizieren. Führen Sie anschließend den Befehl `ngrok http -host-header=localhost 3978` aus.\n\n**So fügen Sie den Messaging-Endpunkt hinzu**\n\n1. Kopieren Sie von ngrok die HTTPS-URL (https to io).\n\n    ![ngrok HTTPS-URL](~/assets/images/Teams-task-module/ngrok.png)\n\n    > [!NOTE]\n    > Die HTTPS-URL in Ihrem ngrok ist Ihr vollqualifizierter Domänenname.\n    > Dies `WebAppDomain` ist ein vollqualifizierter Domänenname, der nicht darin enthalten `https://` ist.\n\n1. Wählen Sie **in Einstellungen** für den von Ihnen erstellten Azure-Bot die Option **\"Konfiguration**\" aus.\n\n1. Verwenden Sie im **Messaging-Endpunkt** die https-URL, die von ngrok verfügbar ist, und fügen Sie am Ende der URL **\"/api/messages**\" hinzu.\n\n    ![Messaging-Endpunkt](~/assets/images/Teams-task-module/messaging-endpoint.png)\n\n1. Wählen Sie **Anwenden** aus.\n\n    Sie haben erfolgreich einen Bot in Azure Bot Service eingerichtet.\n"
- title: Aktualisieren der Azure AD App-Registrierung
  durationInMinutes: 1
  content: "1. Gehen Sie zum [Azure-Portal](https://portal.azure.com/).\n\n1. Wählen Sie **Azure Active Directory** aus.\n\n1. Wählen Sie im linken Navigationsbereich die Option **\"App-Registrierungen\" aus**.\n\n1. Wählen Sie Ihren Bot aus.\n\n   ![App-Registrierung](~/assets/images/Teams-task-module/appregister.png)\n\n1. Wählen Sie **\"Verwalten\"** aus.\n\n1. Wählen Sie im linken Bereich die Option **\"API verfügbar** **machen**\" aus.\n\n1. Wählen Sie **\"Festlegen\" aus**.\n\n   ![Bereitstellen einer API](~/assets/images/Teams-task-module/exposeanapi.png)\n\n1. Legen Sie den **Anwendungs-ID-URI** in Form von `api://{AppID}`fest.\n\n   ![Link festlegen](~/assets/images/Teams-task-module/setlink.png)\n\n1. Fügen Sie den `WebAppDomain` Wert zwischen `api://` und `/{AppID}`ein.</br>\n    `api://d4b8****.ngrok.io/{AppID}`</br>\n    \n   Die folgende Abbildung zeigt den Domänennamen:\n    \n    ![App-ID-URI](~/assets/images/Teams-task-module/appIDuri.png)\n\n    > [!NOTE]\n    > Wenn Sie einen Tunneldienst wie ngrok verwenden, stellen Sie sicher, dass Sie den Wert aktualisieren, wenn sich Ihre ngrok-Unterdomäne ändert.\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`, wobei `f631****.ngrok.io` sich der neue ngrok-Unterdomänenname befindet.\n\n1. Wählen Sie **Bereich hinzufügen**. \n\n   ![Bereich auswählen](~/assets/images/meetings-side-panel/selectscope.png)\n\n1. Geben Sie `access_as_user` in dem angezeigten Bereich den Namen des **Bereichs** ein.\n\n1. Legen Sie **fest, Wer zustimmen können?** zu `Admins and users`.\n\n1. Geben Sie die folgenden Informationen in den Feldern an, um die Aufforderungen zur Administrator- und Benutzerzustimmung mit den entsprechenden Werten für `access_as_user` den Bereich zu konfigurieren:</br>\n\n     * Geben Sie `Teams can access the user’s profile` den **Anzeigenamen für die Administratorzustimmung** ein.\n\n     * Geben Sie `Allows Teams to call the app’s web APIs as the current user` als **Beschreibung der Administratorzustimmung ein**.\n\n     * Geben Sie `Teams can access the user profile and make requests on the user’s behalf` als **Anzeigename für die Benutzerzustimmung ein**.\n\n     * Geben Sie `Enable Teams to call this app’s APIs with the same rights as the user` als **Beschreibung der Zustimmung des Benutzers ein**.\n\n1. Stellen Sie sicher, **Zustand** auf **Aktiviert** festgelegt ist.\n\n1. Wählen Sie **\"Zu speichernden Bereich hinzufügen\"** aus.\n\n    ![Hinzufügen eines Bereichs](~/assets/images/Teams-task-module/addascope.png)\n\n    > [!NOTE]\n    > Der **Bereichsname** sollte mit dem **Anwendungs-ID-URI** übereinstimmen, `/access_as_user` der am Ende angefügt ist.</br>\n       `api://d4b8****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    ![Scopes](~/assets/images/Teams-task-module/scopes.png) \n\n1. Identifizieren Sie im Bereich **Autorisierte Clientanwendungen** die Anwendungen, die Sie für die Webanwendung Ihrer App autorisieren möchten. \n\n1. **Hinzufügen einer Clientanwendung** auswählen. \n\n    ![Clientanwendung auswählen](~/assets/images/meetings-side-panel/selectclientapp.png) \n\n1. Geben Sie **die Client-ID** ein: `1fec8e78-bce4-4aaf-ab1b-5451cc387264` für Teams Mobile- oder Desktopanwendung. \n\n    ![Hinzufügen der Clientanwendung 1](~/assets/images/meetings-side-panel/addclientapplication1.png) \n\n   Geben Sie **die Client-ID** ein: `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` für Teams Webanwendung.\n\n    ![Hinzufügen der Clientanwendung 2](~/assets/images/meetings-side-panel/addclientapplication2.png) \n\n1. Wählen Sie **autorisierte Bereiche aus**.\n\n    ![Hinzufügen der Clientanwendung 2](~/assets/images/Teams-task-module/authorizedscope.png) \n\n   In der folgenden Abbildung werden die Client-IDs angezeigt:\n\n    ![Clientanwendungen](~/assets/images/meetings-side-panel/clientapps.png) \n\n1. Wählen Sie im linken Bereich **API-Berechtigungen aus**. \n\n   > [!NOTE]\n   > Benutzer müssen den API-Berechtigungen nur zustimmen, wenn die Azure AD-App in einem anderen Mandanten registriert ist.\n\n1. Wählen Sie **Berechtigung hinzufügen** aus.\n\n    ![Berechtigung hinzufügen](~/assets/images/meetings-side-panel/addpermission.png)\n\n1. Wählen Sie **\"Microsoft Graph\" aus**.\n\n1. Wählen Sie **Delegierte Berechtigungen** aus.\n\n1. Wählen Sie die folgenden Berechtigungen aus:</br>\n     * **email**\n     * **offline_access**\n     * **Openid**\n     * **profile**\n      * **User.Read**\n\n1. Wählen Sie **Berechtigungen hinzufügen** aus.\n\n     ![Weitere Berechtigungen](~/assets/images/meetings-side-panel/other-permissions.png)\n\n1. Wählen Sie im linken Bereich die Option **\"Authentifizierung** \" aus, um einen Umleitungs-URI festzulegen. \n\n   > [!NOTE]\n   > Wenn einer App nicht die Zustimmung eines IT-Administrators erteilt wird, müssen Benutzer bei der ersten Verwendung einer App ihre Zustimmung erteilen.\n           \n     1. Wählen Sie **Plattform hinzufügen** aus.\n     1. Klicken Sie auf **Web**.\n\n        ![Netz](~/assets/images/Teams-task-module/webauth.png)\n\n     1. Geben Sie den Umleitungs-URI für Ihre App ein, indem Sie an den vollqualifizierten Domänennamen anfügen `auth-end` :</br> \n       `https://d4b8****.ngrok.io/auth-end`. </br>\n\n     1. Aktivieren Sie **implizite Genehmigungs- und Hybridflüsse** , indem Sie die folgenden Kontrollkästchen aktivieren:\n         * **ID-Token**\n         * **Zugriffstoken**\n\n     1. Wählen Sie **Konfigurieren** aus.\n\n        ![Authentifizierungsende](~/assets/images/Teams-task-module/authend.png)\n"
- title: Einrichten von App-Einstellungen und Manifestdateien
  durationInMinutes: 1
  content: "1. Navigieren Sie zu **\"appsettings.json** \" im geklonten Repository.\n\n    ![App-Einstellungsspeicherort](~/assets/images/Teams-task-module/appsettingslocation.png)\n\n1. Öffnen Sie **\"appsettings.json**\" in der neuesten Version von Visual Studio, und aktualisieren Sie die folgenden Informationen:  \n\n     * Auf **\"MultiTenant\" festgelegt**`\"MicrosoftAppType\"`.\n     * Legen Sie `\"MicrosoftAppId\"` die **Microsoft App-ID** Ihres Bots fest.\n     * Auf **\"Wert** des **geheimen Clientschlüssels**\" festgelegt`\"MicrosoftAppPassword\"`.\n     * Legen Sie `\"MicrosoftAppTenantId\"` die Mandanten-ID des Mandanten fest, in dem die App verwendet wird.\n     * Legen Sie `\"BaseUrl\"` den vollqualifizierten Domänennamen fest (https to io).\n\n    ![App-Einstellungen](~/assets/images/Teams-task-module/appsettings.png)\n\n1. Navigieren Sie im geklonten Repository zu \"manifest.json\".\n\n    ![Speicherort der Manifestdatei](~/assets/images/Teams-task-module/manifestlocation.png)\n\n1. Öffnen Sie \"manifest.json\" in der neuesten Version von Visual Studio, und nehmen Sie die folgenden Änderungen vor:\n\n     * Ersetzen Sie alle Vorkommen durch `YourDeployedBotUrl.com` Ihren `WebAppDomain` Namen.\n     * Ersetzen Sie alle Vorkommen durch die `<<YOUR-MICROSOFT-APP-ID>>` **Microsoft App-ID** Ihres Bots.\n\n    ![Manifestbild 2](~/assets/images/Teams-task-module/manifest.png)\n"
- title: Erstellen und Ausführen des Diensts
  durationInMinutes: 1
  content: "**So erstellen und führen Sie den Dienst mit der neuesten Version von Visual Studio oder Befehlszeile aus**\n\n# <a name=\"latest-version-of-visual-studio\"></a>[Neueste Version von Visual Studio](#tab/latestversionofvisualstudio)\n\n   1. Starten Sie die neueste Version von Visual Studio.\n   1. Navigieren Sie zu **FileOpen** >  >  **Project/Solution**.\n\n      ![Datei öffnen](~/assets/images/meeting-token-generator/meeting-token-generator-VSopenfile.png)\n\n   1. Wählen Sie die Datei **\"TeamsTaskModule.csproj** \" aus dem Ordner **\"54.teams-task-module** \" aus.\n\n      ![CS proj-Datei](~/assets/images/Teams-task-module/csprojfileopen.png)\n\n   1. Öffnen **Sie Projektmappen-Explorer** aus **der Ansicht**.\n\n      ![Projektmappen-Explorer](~/assets/images/Teams-task-module/solutionexplorer.png)\n\n   1. Klicken Sie mit der rechten Maustaste, um **TeamsTaskModule** auszuwählen.\n\n   1. Wählen Sie **\"Als Start Project festlegen**\" aus.\n\n      ![Projektmappen-Explorer](~/assets/images/Teams-task-module/startup.png)\n\n   1. Press **F5** to run the project.\n\n   1. Wählen Sie **Ja** aus, wenn das folgende Dialogfenster angezeigt wird:\n\n      ![Vertrauensstellungszertifikat](~/assets/images/Teams-task-module/certificate.png)\n\n      Eine Webseite wird mit der Nachricht **\"Ihr Bot ist bereit!\"** geöffnet.\n\n      ![App bereit](~/assets/images/Teams-task-module/appisready.png) \n\n    \n# <a name=\"command-line\"></a>[Befehlszeile](#tab/cli)\n\nNavigieren Sie zu **BotBuilder-Samples > Beispielen > csharp_dotnetcore > 54.teams-task-module** im Eingabeaufforderungsfenster, und geben Sie den folgenden Befehl ein:\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Teams-task-module/dotnetruncmd.png)\n"
- title: Hochladen Aufgabenmodul-App
  durationInMinutes: 1
  content: "1. Navigieren Sie in Ihrem geklonten Repository zu **csharp_dotnetcore > 54.teams-task-module > TeamsAppManifest**.\n\n1. Erstellen Sie eine .zip mit den folgenden Dateien, die im Ordner **\"TeamsAppManifest** \" vorhanden sind: \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![ZIP-Datei](~/assets/images/Teams-task-module/zip-file.png) \n\n1. Wechseln Sie zu **Microsoft Teams**.\n\n1. Wählen Sie **Apps** aus.\n\n   ![ZIP-Datei](~/assets/images/Teams-task-module/AppStore.png)\n\n1. Wählen Sie in der unteren linken Ecke **die Option \"Apps verwalten\"** aus.\n\n   ![Verwalten von Apps](~/assets/images/Teams-task-module/manage-apps.png)\n\n1. Wählen Sie **Hochladen einer App im App-Katalog Ihrer Organisation** aus. \n\n   ![Hochladen benutzerdefinierte App](~/assets/images/Teams-task-module/upload-app.png)\n\n1. Wählen Sie **\"Öffnen** \" aus, um die .zip Datei hochzuladen, die Sie im Ordner **\"TeamsAppManifest** \" erstellt haben.\n\n   ![ZIP-Datei auswählen](~/assets/images/Teams-task-module/select-zip.png)\n\n1. Klicken Sie auf **Hinzufügen**.\n\n   ![Hinzufügen der App](~/assets/images/Teams-task-module/add-app.png)\n\n   Die App wird in einem Chat geöffnet.\n\n1. Geben Sie beliebigen Text ein, und drücken Sie die EINGABETASTE. \n\n   ![Chat](~/assets/images/Teams-task-module/chat_ready.png)\n\n   Die App zeigt den **Aufruf des Aufgabenmoduls von der Hero-Karte** und den **Aufruf des Aufgabenmoduls von der adaptiven Karte** an.         \n"
- title: Interagieren mit der App in Teams
  durationInMinutes: 1
  content: >
    1. Wählen Sie " **Adaptive Karte** " aus dem **Aufruf des Aufgabenmoduls aus der Hero-Karte** oder den **Aufruf des Aufgabenmoduls von der adaptiven Karte aus**.

       ![Adaptive Karte](~/assets/images/Teams-task-module/adaptive-card.png)

    1. Geben Sie einen beliebigen Text ein.


    1. Wählen Sie **Senden** aus.

       ![Text für adaptive Karten](~/assets/images/Teams-task-module/adaptive-card-text.png)

       **Adaptive Karte** sendet eine Bestätigungsmeldung.

       ![Übermittlung adaptiver Karten](~/assets/images/Teams-task-module/adaptive-card-submit.png)

    1. Wählen Sie " **Benutzerdefiniertes Formular** " aus dem **Aufruf des Aufgabenmoduls aus der Hero-Karte** oder aus dem **Aufruf des Aufgabenmoduls von der adaptiven Karte aus**.

       ![Benutzerdefiniertes Formular](~/assets/images/Teams-task-module/custom-form.png)

    1. Geben Sie die erforderlichen Informationen ein:

       * **Name**
       * **E-Mail**
       * **Lieblingsbuch**
       * **Password**
       * **Kennwort bestätigen**

    1. Wählen Sie **"Registrieren" aus**.

       ![Benutzerdefinierter Formulartext](~/assets/images/Teams-task-module/custom-text.png)

       **Benutzerdefiniertes Formular** sendet eine Bestätigungsmeldung.

       ![Registrieren](~/assets/images/Teams-task-module/custom-on-sign-up.png)

       Die folgenden Informationen werden im Chat angezeigt:

       ![Chat](~/assets/images/Teams-task-module/adaptive-custom-chat.png)

    1. Wählen **Sie "You Tube** " aus " **Task Module Invocation" aus "Hero Card** " oder **"Task Module Invocation" aus "Adaptive Card" aus**.

       ![YouTube](~/assets/images/Teams-task-module/youtube.png)

    1. Wählen Sie **"Wiedergeben" aus**.

       ![YouTube auswählen](~/assets/images/Teams-task-module/youtube-select.png)

       Das Video wird wiedergegeben.
- title: Vollständige Herausforderung
  durationInMinutes: 1
  content: >
    Sind Sie auf so etwas gekommen?

       ![Aufgabenmodul](~/assets/images/Teams-task-module/final_image.png)
- content: Sie haben das Lernprogramm für die ersten Schritte mit Teams Aufgabenmodul-App abgeschlossen!
